const randomBytes = (size) => {
    const crypto = global.crypto;
    if (typeof (crypto === null || crypto === void 0 ? void 0 : crypto.getRandomValues) !== "function") {
        throw new Error("Secure random number generator is not available");
    }
    const b = Buffer.allocUnsafe(size);
    const n = b.byteLength;
    // The requested length must not exceed 65,536 bytes.
    // https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#exceptions
    const MAX_BYTES = 65536;
    for (let i = 0; i < n; i += MAX_BYTES) {
        // Note that typedArray is modified in-place, and no copy is made.
        crypto.getRandomValues(new Uint8Array(b.buffer, i + b.byteOffset, Math.min(n - i, MAX_BYTES)));
    }
    return b;
};
export default randomBytes;
