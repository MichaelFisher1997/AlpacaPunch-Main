{"ast":null,"code":"window.addEventListener('DOMContentLoaded', event => {\n  let zilliqa = null;\n  let crypto = null; //check for zilPay..\n\n  if (typeof window.zilPay !== 'undefined') {\n    //zilPay extention exists\n    return zilPay.wallet.connect().then(function (accounts) {\n      zilliqa = window.zilPay;\n      crypto = zilPay.crypto;\n      console.log(accounts); //log the user's wallet account data\n    });\n  } else {//user doesn't have the zilPay extention\n  }\n}); //zil1eff6xw0czq44wkdf70zru7l3ftp53tp77qt32k\n//grabs blockchain\n\nconst blockchain = () => window.zilPay.blockchain; //Connect\n\n\nconst Connect = () => {\n  window.zilPay.wallet.connect().then(function (retVal) {\n    console.log(retVal);\n\n    if (retVal) {\n      console.log(window.zilPay.wallet.defaultAccount.bech32);\n    }\n  });\n};\n\n_c = Connect;\nconst zilliqa = window.zilPay;\nconst utils = zilPay.utils;\nconst amount = utils.units.toQa(10, utils.units.Units.Zil); // 10 zil\n\nconst gasPrice = utils.units.toQa('1000', utils.units.Units.Li);\nconst txParams = zilliqa.transactions.new({\n  // Create params for our trasnaction.\n  toAddr: 'zil1wl38cwww2u3g8wzgutxlxtxwwc0rf7jf27zace',\n  amount: amount,\n  gasPrice: gasPrice\n});\n\ntry {\n  const txResult = await zilliqa.blockchain.createTransaction(txParams);\n} catch (err) {// if user rejected this transaction or other problem.\n}\n\nexport { Connect, blockchain }; //zilliqa, privateKey, bytes, units, recipientAddress, sendingAmount are defined in the codebase before\n\nvar _c;\n\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"names":["window","addEventListener","event","zilliqa","crypto","zilPay","wallet","connect","then","accounts","console","log","blockchain","Connect","retVal","defaultAccount","bech32","utils","amount","units","toQa","Units","Zil","gasPrice","Li","txParams","transactions","new","toAddr","txResult","createTransaction","err"],"sources":["/home/micqdf/AlpacaPunchTests/maintest/test1/client/src/components/Navbar/ZilAssets/zilFunctions.js"],"sourcesContent":["window.addEventListener('DOMContentLoaded', (event) => {\n  let zilliqa = null;\n  let crypto = null;\n\n  //check for zilPay..\n  if (typeof window.zilPay !== 'undefined') {\n    //zilPay extention exists\n    return zilPay.wallet.connect().then(function(accounts) {\n      zilliqa = window.zilPay;\n      crypto = zilPay.crypto;\n    \n      console.log(accounts); //log the user's wallet account data\n    })\n  } else {\n    //user doesn't have the zilPay extention\n  }\n});\n\n//zil1eff6xw0czq44wkdf70zru7l3ftp53tp77qt32k\n\n//grabs blockchain\n const blockchain = () => window.zilPay.blockchain;\n\n \n\n \n\n\n  //Connect\n  const Connect = () => {\n    window.zilPay.wallet.connect().then(function(retVal){\n      console.log(retVal)\n      if(retVal){console.log(window.zilPay.wallet.defaultAccount.bech32)}\n      \n     })\n  }\n\n  \n\n  const zilliqa = window.zilPay;\n  const utils = zilPay.utils;\n  \n  const amount = utils.units.toQa(10, utils.units.Units.Zil); // 10 zil\n  const gasPrice = utils.units.toQa('1000', utils.units.Units.Li);\n  const txParams = zilliqa.transactions.new({ // Create params for our trasnaction.\n    toAddr: 'zil1wl38cwww2u3g8wzgutxlxtxwwc0rf7jf27zace',\n    amount: amount,\n    gasPrice: gasPrice\n  });\n  try {\n      const txResult = await zilliqa.blockchain.createTransaction(txParams);\n  } catch (err) {\n      // if user rejected this transaction or other problem.\n  }\n\n\n  \n\n\n    export {Connect, blockchain};\n\n    //zilliqa, privateKey, bytes, units, recipientAddress, sendingAmount are defined in the codebase before\n\n"],"mappings":"AAAAA,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,EAA6CC,KAAD,IAAW;EACrD,IAAIC,OAAO,GAAG,IAAd;EACA,IAAIC,MAAM,GAAG,IAAb,CAFqD,CAIrD;;EACA,IAAI,OAAOJ,MAAM,CAACK,MAAd,KAAyB,WAA7B,EAA0C;IACxC;IACA,OAAOA,MAAM,CAACC,MAAP,CAAcC,OAAd,GAAwBC,IAAxB,CAA6B,UAASC,QAAT,EAAmB;MACrDN,OAAO,GAAGH,MAAM,CAACK,MAAjB;MACAD,MAAM,GAAGC,MAAM,CAACD,MAAhB;MAEAM,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAJqD,CAI9B;IACxB,CALM,CAAP;EAMD,CARD,MAQO,CACL;EACD;AACF,CAhBD,E,CAkBA;AAEA;;AACC,MAAMG,UAAU,GAAG,MAAMZ,MAAM,CAACK,MAAP,CAAcO,UAAvC,C,CAOC;;;AACA,MAAMC,OAAO,GAAG,MAAM;EACpBb,MAAM,CAACK,MAAP,CAAcC,MAAd,CAAqBC,OAArB,GAA+BC,IAA/B,CAAoC,UAASM,MAAT,EAAgB;IAClDJ,OAAO,CAACC,GAAR,CAAYG,MAAZ;;IACA,IAAGA,MAAH,EAAU;MAACJ,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACK,MAAP,CAAcC,MAAd,CAAqBS,cAArB,CAAoCC,MAAhD;IAAwD;EAEnE,CAJF;AAKD,CAND;;KAAMH,O;AAUN,MAAMV,OAAO,GAAGH,MAAM,CAACK,MAAvB;AACA,MAAMY,KAAK,GAAGZ,MAAM,CAACY,KAArB;AAEA,MAAMC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiB,EAAjB,EAAqBH,KAAK,CAACE,KAAN,CAAYE,KAAZ,CAAkBC,GAAvC,CAAf,C,CAA4D;;AAC5D,MAAMC,QAAQ,GAAGN,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiB,MAAjB,EAAyBH,KAAK,CAACE,KAAN,CAAYE,KAAZ,CAAkBG,EAA3C,CAAjB;AACA,MAAMC,QAAQ,GAAGtB,OAAO,CAACuB,YAAR,CAAqBC,GAArB,CAAyB;EAAE;EAC1CC,MAAM,EAAE,4CADgC;EAExCV,MAAM,EAAEA,MAFgC;EAGxCK,QAAQ,EAAEA;AAH8B,CAAzB,CAAjB;;AAKA,IAAI;EACA,MAAMM,QAAQ,GAAG,MAAM1B,OAAO,CAACS,UAAR,CAAmBkB,iBAAnB,CAAqCL,QAArC,CAAvB;AACH,CAFD,CAEE,OAAOM,GAAP,EAAY,CACV;AACH;;AAMC,SAAQlB,OAAR,EAAiBD,UAAjB,G,CAEA"},"metadata":{},"sourceType":"module"}