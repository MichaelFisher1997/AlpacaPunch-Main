{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { useRef, useState, useEffect, useCallback, useMemo } from \"react\";\nimport { useValidators } from \"./useValidators\";\nimport { useMapFields } from \"./useMapFields\";\nimport { useValidationFunction } from \"./commons/useValidationFunction\";\nimport { useValidationFunctionAsync } from \"./commons/useValidationFunctionAsync\";\nimport { updateState } from \"./../utils/updateState\";\nimport { chainReducers } from \"./../utils/chainReducers\";\nimport { noop } from \"./../utils/noop\";\nimport { STATUS, FORM_VALIDATION_LABEL } from \"./../utils/constants\";\nimport { createForm, isFormValid, isFormValidAsync, generateAsynFuncs, shouldRunAsyncValidator, flatAsyncValidationMap } from \"./../utils/formUtils\";\nvar emptyStateValue = {};\nvar validatorsDefault = [];\nexport function useForm(_ref) {\n  var initialState = _ref.initialState,\n      touched = _ref.touched,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$onReset = _ref.onReset,\n      onReset = _ref$onReset === void 0 ? noop : _ref$onReset,\n      _ref$onInit = _ref.onInit,\n      onInit = _ref$onInit === void 0 ? noop : _ref$onInit,\n      _ref$onSubmit = _ref.onSubmit,\n      onSubmit = _ref$onSubmit === void 0 ? noop : _ref$onSubmit,\n      _ref$onValidation = _ref.onValidation,\n      onValidation = _ref$onValidation === void 0 ? noop : _ref$onValidation,\n      _ref$resetSyncErr = _ref.resetSyncErr,\n      resetSyncErr = _ref$resetSyncErr === void 0 ? noop : _ref$resetSyncErr,\n      _ref$validators = _ref.validators,\n      validatorsFuncs = _ref$validators === void 0 ? validatorsDefault : _ref$validators,\n      _ref$resetAsyncErr = _ref.resetAsyncErr,\n      resetAsyncErr = _ref$resetAsyncErr === void 0 ? noop : _ref$resetAsyncErr,\n      asyncValidator = _ref.asyncValidator,\n      _ref$onAsyncValidatio = _ref.onAsyncValidation,\n      onAsyncValidation = _ref$onAsyncValidatio === void 0 ? noop : _ref$onAsyncValidatio,\n      reducers = _ref.reducers,\n      _getInitilaStateForm_ = _ref._getInitilaStateForm_,\n      _onMultipleForm_ = _ref._onMultipleForm_,\n      name = _ref.name,\n      action = _ref.action;\n\n  var _useState = useState(function () {\n    return createForm(initialState);\n  }),\n      formState = _useState[0],\n      dispatch = _useState[1];\n\n  var stateRef = useRef(formState);\n\n  var _useRef = useRef(isUsingMultipleForm(_getInitilaStateForm_, _onMultipleForm_, name)),\n      isMultipleForm = _useRef.current;\n\n  var dispatchFormState = useCallback(function (_ref2) {\n    var state = _ref2.state,\n        status = _ref2.status,\n        rest = _objectWithoutPropertiesLoose(_ref2, [\"state\", \"status\"]);\n\n    var prevState = status === STATUS.ON_RESET ? memoInitialState.current.state : status === STATUS.ON_INIT ? emptyStateValue : stateRef.current.state;\n    var newState = status === STATUS.READY || status === STATUS.ON_SUBMIT ? state : applyReducers(state, prevState, prevState);\n    stateRef.current = _extends({}, rest, {\n      status: status,\n      state: newState\n    });\n    dispatch(stateRef.current);\n  }, []);\n  var memoInitialState = useRef(_extends({}, formState));\n  var isMounted = useRef(false);\n  var stillMounted = useCallback(function () {\n    return isMounted.current;\n  }, []);\n\n  var _useValidators = useValidators(undefined, undefined, isMounted),\n      validators = _useValidators[0],\n      addValidators = _useValidators[1],\n      removeValidators = _useValidators[2];\n\n  var _useValidationFunctio = useValidationFunction(validatorsFuncs),\n      validationMsg = _useValidationFunctio.validationMsg,\n      validationObj = _useValidationFunctio.validationObj,\n      validationFN = _useValidationFunctio.validationFN;\n\n  var _useValidationFunctio2 = useValidationFunctionAsync(asyncValidator, onAsyncValidation),\n      validationFNAsync = _useValidationFunctio2[0];\n\n  var _useValidators2 = useValidators(undefined, undefined, isMounted, true),\n      validatorsAsync = _useValidators2[0],\n      addValidatorsAsync = _useValidators2[1],\n      removeValidatorsAsync = _useValidators2[2],\n      validatorsMapsAsync = _useValidators2[3],\n      updateValidatorsMap = _useValidators2[4],\n      resetValidatorsMap = _useValidators2[5];\n\n  var applyReducers = useMemo(function () {\n    return chainReducers(reducers);\n  }, []);\n\n  var _useMapFields = useMapFields(),\n      unRegisterField = _useMapFields.unRegisterField,\n      mapFields = _useMapFields.mapFields,\n      updateRegisteredField = _useMapFields.updateRegisteredField;\n\n  var changeProp = useCallback(function (nameProp, value, removeMe) {\n    if (removeMe === void 0) {\n      removeMe = false;\n    }\n\n    var newState = updateState(stateRef.current.state, {\n      value: value,\n      nameProp: nameProp,\n      removeMe: removeMe\n    });\n    propagateState(newState, false);\n  }, []);\n  var initProp = useCallback(function (nameProp, value, initialValue) {\n    if (isMounted.current) {\n      // we must update the memoInitialState with the new prop if form is mounted\n      memoInitialState.current.state = updateState(memoInitialState.current.state, {\n        isValid: initialValue,\n        nameProp: nameProp\n      });\n      var newState = updateState(stateRef.current.state, {\n        value: value,\n        nameProp: nameProp\n      });\n      propagateState(newState, false);\n    } else {\n      var newStateInitial = updateState(memoInitialState.current.state, {\n        value: initialValue,\n        nameProp: nameProp\n      });\n\n      var _newState = updateState(stateRef.current.state, {\n        value: value,\n        nameProp: nameProp\n      });\n\n      memoInitialState.current.state = newStateInitial;\n      stateRef.current.state = _newState;\n    }\n  }, []);\n  var removeProp = useCallback(function (namePropExt, _ref3) {\n    var currentState = _ref3.currentState,\n        removeCurrent = _ref3.removeCurrent,\n        initialState = _ref3.initialState,\n        removeInitial = _ref3.removeInitial;\n    var newState = updateState(stateRef.current.state, {\n      value: currentState,\n      nameProp: namePropExt,\n      removeMe: removeCurrent\n    }); // if a prop removed was also a prop already initialized we must update the memoInitialState\n\n    memoInitialState.current.state = updateState(memoInitialState.current.state, {\n      value: initialState,\n      nameProp: namePropExt,\n      removeMe: removeInitial\n    });\n    propagateState(newState);\n  }, []);\n  var propagateState = useCallback(function (state, changePristine, status) {\n    if (status === void 0) {\n      status = STATUS.ON_CHANGE;\n    }\n\n    var pristine = changePristine !== undefined ? changePristine : stateRef.current.pristine;\n    var isValid = isFormValid(validators.current, state) && isFormValidAsync(validatorsMapsAsync.current);\n    dispatchFormState(_extends({}, stateRef.current, {\n      state: state,\n      isValid: isValid,\n      pristine: pristine,\n      status: status\n    }));\n  }, []);\n  var resetObj = useRef({});\n  var registerReset = useCallback(function (nameProp, fnReset) {\n    var _extends2;\n\n    resetObj.current = _extends({}, resetObj.current, (_extends2 = {}, _extends2[nameProp] = fnReset, _extends2));\n  }, []);\n  var unRegisterReset = useCallback(function (nameProp) {\n    delete resetObj.current[nameProp];\n  }, []);\n  var reset = useCallback(function () {\n    var state = Object.keys(resetObj.current).reduce(function (acc, key) {\n      var value = resetObj.current[key](memoInitialState.current.state);\n      if (value !== undefined) acc[key] = value;\n      return acc;\n    }, {});\n    var validatorsMapsAsync = resetValidatorsMap();\n    var isValid = isFormValid(validators.current, state) && isFormValidAsync(validatorsMapsAsync);\n    var status = STATUS.ON_RESET;\n    dispatchFormState(_extends({}, memoInitialState.current, {\n      state: state,\n      status: status,\n      isValid: isValid\n    }));\n  }, []);\n  var onSubmitForm = useCallback(function (e) {\n    e.persist();\n    var _stateRef$current = stateRef.current,\n        isValid = _stateRef$current.isValid,\n        prevAttempts = _stateRef$current.submitAttempts;\n    var status = STATUS.ON_SUBMIT;\n\n    if (typeof action !== \"string\" || !isValid) {\n      e.preventDefault();\n    }\n\n    var submitAttempts = prevAttempts + 1;\n\n    if (isValid && Object.keys(validatorsAsync.current).length > 0 && shouldRunAsyncValidator(validatorsMapsAsync.current)) {\n      var state = stateRef.current.state;\n      var asyncArrayProm = generateAsynFuncs(validatorsAsync.current, validatorsMapsAsync.current, state, updateValidatorsMap);\n      var target = e.target;\n      e.preventDefault(); // Set isValid to false until it ends the async checks\n\n      dispatchFormState(_extends({}, stateRef.current, {\n        isValid: false,\n        isSubmitting: true,\n        submitAttempts: submitAttempts\n      }));\n      Promise.all(asyncArrayProm).then(function () {\n        if (typeof action === \"string\") {\n          target.submit();\n        } else {\n          dispatchFormState(_extends({}, stateRef.current, {\n            status: status,\n            isValid: true\n          }));\n        }\n      }).catch(function () {\n        var isValid = shouldRunAsyncValidator(validatorsMapsAsync.current);\n        var isSubmitting = false;\n        dispatchFormState(_extends({}, stateRef.current, {\n          isValid: isValid,\n          isSubmitting: isSubmitting\n        }));\n      });\n    } else {\n      dispatchFormState(_extends({}, stateRef.current, {\n        status: status,\n        isSubmitting: true,\n        submitAttempts: submitAttempts\n      }));\n    }\n  }, []); // used only to replace the entire Form State\n\n  var dispatchNewState = useCallback(function (nextState) {\n    var newState = nextState;\n\n    if (typeof nextState === \"function\") {\n      var currentState = stateRef.current.state;\n      newState = nextState(currentState);\n    }\n\n    propagateState(newState, false);\n  }, []);\n  var isFormTouchedOnce = useRef(false);\n  var lastStateSyncCheck = useRef(null);\n  var triggerSyncValidation = useCallback(function (omitArg1, omitArg2, touchedEventField) {\n    if (touchedEventField === void 0) {\n      touchedEventField = true;\n    }\n\n    if (lastStateSyncCheck.current !== stateRef.current.state && validationObj.current !== null && (isFormTouchedOnce.current || touched && touchedEventField || !touched)) {\n      isFormTouchedOnce.current = true;\n      lastStateSyncCheck.current = stateRef.current.state;\n      var _validationObj$curren = validationObj.current,\n          isValid = _validationObj$curren.isValid,\n          checks = _validationObj$curren.checks;\n      onValidation(checks, isValid);\n    }\n  }, []); // used to register async validation Actions\n\n  var asyncInitValidation = useRef({});\n  var registerAsyncInitValidation = useCallback(function (nameProp, asyncFunc) {\n    asyncInitValidation.current[nameProp] = asyncFunc;\n  }, []);\n  var runInitialAsyncValidators = useCallback(function () {\n    var keyAsyncValitions = Object.keys(asyncInitValidation.current);\n\n    if (keyAsyncValitions.length > 0) {\n      var status = STATUS.ON_INIT_ASYNC;\n      dispatchFormState(_extends({}, stateRef.current, {\n        status: status\n      }));\n      var promises = flatAsyncValidationMap(asyncInitValidation.current);\n      Promise.all(promises).then(function () {\n        var status = STATUS.READY;\n        var isValid = isFormValid(validators.current, stateRef.current.state);\n        dispatchFormState(_extends({}, stateRef.current, {\n          status: status,\n          isValid: isValid\n        }));\n      }).catch(function () {\n        var status = STATUS.READY;\n        var isValid = false;\n        dispatchFormState(_extends({}, stateRef.current, {\n          status: status,\n          isValid: isValid\n        }));\n      });\n    }\n  }, []);\n  var runSyncValidation = useCallback(function () {\n    var isValid = isFormValid(validators.current, stateRef.current.state);\n    stateRef.current.isValid !== isValid && dispatchFormState(_extends({}, stateRef.current, {\n      isValid: isValid\n    }));\n  }, []);\n  var runAsyncValidation = useCallback(function (_ref4) {\n    var start = _ref4.start,\n        end = _ref4.end;\n\n    if (start) {\n      var status = STATUS.ON_RUN_ASYNC;\n      dispatchFormState(_extends({}, stateRef.current, {\n        isValid: false,\n        status: status\n      }));\n    } else if (end) {\n      var _status = STATUS.ON_ASYNC_END;\n      var isValid = isFormValid(validators.current, stateRef.current.state) && isFormValidAsync(validatorsMapsAsync.current);\n      dispatchFormState(_extends({}, stateRef.current, {\n        isValid: isValid,\n        status: _status\n      }));\n    }\n  }, []); // change status form to READY after being reset\n\n  useEffect(function () {\n    var _stateRef$current2 = stateRef.current,\n        status = _stateRef$current2.status,\n        state = _stateRef$current2.state,\n        isValid = _stateRef$current2.isValid;\n\n    if (status === STATUS.ON_RESET) {\n      onReset(state, isValid);\n      dispatchFormState(_extends({}, stateRef.current, {\n        status: STATUS.RESETTED\n      }));\n    } else if (status === STATUS.ON_CHANGE) {\n      onChange(state, isValid);\n    } else if (status === STATUS.ON_INIT) {\n      runInitialAsyncValidators();\n      onInit(state, isValid);\n    } else if (status === STATUS.ON_SUBMIT) {\n      var common = {\n        isSubmitting: false,\n        status: STATUS.READY\n      };\n\n      if (isValid) {\n        var result = onSubmit(state, isValid);\n\n        if (result && typeof result.then === \"function\") {\n          result.then(function () {\n            var submitted = stateRef.current.submitted + 1;\n            dispatchFormState(_extends({}, stateRef.current, common, {\n              submitted: submitted\n            }));\n          }).catch(function () {\n            return dispatchFormState(_extends({}, stateRef.current, common));\n          });\n        } else {\n          var prevSub = stateRef.current.submitted;\n          var submitted = result === false ? prevSub : prevSub + 1;\n          dispatchFormState(_extends({}, stateRef.current, common, {\n            submitted: submitted\n          }));\n        }\n      } else {\n        dispatchFormState(_extends({}, stateRef.current, common));\n      }\n    }\n\n    if (isMultipleForm && (status === STATUS.ON_RESET || status === STATUS.ON_CHANGE || status === STATUS.ON_INIT || status === STATUS.ON_SUBMIT)) {\n      _onMultipleForm_(name, state);\n    }\n  }, [stateRef.current]); // after form is mounted dispatch the initial state\n\n  useEffect(function () {\n    isMounted.current = true; // Add its own validators\n\n    if (validatorsFuncs.length > 0) {\n      addValidators(FORM_VALIDATION_LABEL, validationFN.current);\n    } // Add its own async validator func\n\n\n    if (typeof asyncValidator === \"function\") {\n      addValidatorsAsync(FORM_VALIDATION_LABEL, validationFNAsync.current, null);\n    }\n\n    var pristine = isMultipleForm && (_getInitilaStateForm_(name) == undefined || Object.keys(_getInitilaStateForm_(name)).length === 0) || !isMultipleForm;\n    var state = isMultipleForm ? _getInitilaStateForm_(name) || stateRef.current.state : stateRef.current.state;\n    var isValid = isFormValid(validators.current, state) && isFormValidAsync(validatorsMapsAsync.current);\n    stateRef.current = _extends({}, stateRef.current, {\n      state: state,\n      isValid: isValid,\n      pristine: pristine,\n      status: STATUS.ON_INIT\n    });\n    dispatchFormState(stateRef.current);\n  }, []);\n  useEffect(function () {\n    var formStatus = formState.status;\n\n    if (formStatus === STATUS.ON_RESET) {\n      isFormTouchedOnce.current = false;\n      lastStateSyncCheck.current = false;\n      resetSyncErr();\n      resetAsyncErr();\n    } else if (formStatus !== STATUS.READY && formStatus !== STATUS.ON_INIT_ASYNC) {\n      if (validationObj.current !== null) {\n        triggerSyncValidation(false, true, false);\n      }\n\n      if (validationObj.current !== null && !validationObj.current.isValid) {\n        resetAsyncErr();\n      }\n    }\n  }, [validationMsg.current, formState.status]);\n  return _extends({}, formState, {\n    // { isValid, state, status, pristine, isSubmitting }\n    formState: formState.state,\n    // pass the global form state down\n    formStatus: formState.status,\n    // pass the global form status down\n    mapFields: mapFields.current,\n    triggerSyncValidation: triggerSyncValidation,\n    unRegisterField: unRegisterField,\n    updateRegisteredField: updateRegisteredField,\n    registerAsyncInitValidation: registerAsyncInitValidation,\n    runAsyncValidation: runAsyncValidation,\n    runSyncValidation: runSyncValidation,\n    dispatchNewState: dispatchNewState,\n    changeProp: changeProp,\n    initProp: initProp,\n    onSubmitForm: onSubmitForm,\n    removeProp: removeProp,\n    stillMounted: stillMounted,\n    reset: reset,\n    addValidators: addValidators,\n    removeValidators: removeValidators,\n    addValidatorsAsync: addValidatorsAsync,\n    removeValidatorsAsync: removeValidatorsAsync,\n    updateValidatorsMap: updateValidatorsMap,\n    registerReset: registerReset,\n    unRegisterReset: unRegisterReset\n  });\n}\n\nfunction isUsingMultipleForm(_getInitilaStateForm_, _onMultipleForm_, name) {\n  return typeof _getInitilaStateForm_ === \"function\" && typeof _onMultipleForm_ === \"function\" && typeof name === \"string\";\n}","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","useRef","useState","useEffect","useCallback","useMemo","useValidators","useMapFields","useValidationFunction","useValidationFunctionAsync","updateState","chainReducers","noop","STATUS","FORM_VALIDATION_LABEL","createForm","isFormValid","isFormValidAsync","generateAsynFuncs","shouldRunAsyncValidator","flatAsyncValidationMap","emptyStateValue","validatorsDefault","useForm","_ref","initialState","touched","_ref$onChange","onChange","_ref$onReset","onReset","_ref$onInit","onInit","_ref$onSubmit","onSubmit","_ref$onValidation","onValidation","_ref$resetSyncErr","resetSyncErr","_ref$validators","validators","validatorsFuncs","_ref$resetAsyncErr","resetAsyncErr","asyncValidator","_ref$onAsyncValidatio","onAsyncValidation","reducers","_getInitilaStateForm_","_onMultipleForm_","name","action","_useState","formState","dispatch","stateRef","_useRef","isUsingMultipleForm","isMultipleForm","current","dispatchFormState","_ref2","state","status","rest","prevState","ON_RESET","memoInitialState","ON_INIT","newState","READY","ON_SUBMIT","applyReducers","isMounted","stillMounted","_useValidators","undefined","addValidators","removeValidators","_useValidationFunctio","validationMsg","validationObj","validationFN","_useValidationFunctio2","validationFNAsync","_useValidators2","validatorsAsync","addValidatorsAsync","removeValidatorsAsync","validatorsMapsAsync","updateValidatorsMap","resetValidatorsMap","_useMapFields","unRegisterField","mapFields","updateRegisteredField","changeProp","nameProp","value","removeMe","propagateState","initProp","initialValue","isValid","newStateInitial","_newState","removeProp","namePropExt","_ref3","currentState","removeCurrent","removeInitial","changePristine","ON_CHANGE","pristine","resetObj","registerReset","fnReset","_extends2","unRegisterReset","reset","reduce","acc","onSubmitForm","e","persist","_stateRef$current","prevAttempts","submitAttempts","preventDefault","asyncArrayProm","isSubmitting","Promise","all","then","submit","catch","dispatchNewState","nextState","isFormTouchedOnce","lastStateSyncCheck","triggerSyncValidation","omitArg1","omitArg2","touchedEventField","_validationObj$curren","checks","asyncInitValidation","registerAsyncInitValidation","asyncFunc","runInitialAsyncValidators","keyAsyncValitions","ON_INIT_ASYNC","promises","runSyncValidation","runAsyncValidation","_ref4","start","end","ON_RUN_ASYNC","_status","ON_ASYNC_END","_stateRef$current2","RESETTED","common","result","submitted","prevSub","formStatus"],"sources":["/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/usetheform/build/es/hooks/useForm.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useRef, useState, useEffect, useCallback, useMemo } from \"react\";\nimport { useValidators } from \"./useValidators\";\nimport { useMapFields } from \"./useMapFields\";\nimport { useValidationFunction } from \"./commons/useValidationFunction\";\nimport { useValidationFunctionAsync } from \"./commons/useValidationFunctionAsync\";\nimport { updateState } from \"./../utils/updateState\";\nimport { chainReducers } from \"./../utils/chainReducers\";\nimport { noop } from \"./../utils/noop\";\nimport { STATUS, FORM_VALIDATION_LABEL } from \"./../utils/constants\";\nimport { createForm, isFormValid, isFormValidAsync, generateAsynFuncs, shouldRunAsyncValidator, flatAsyncValidationMap } from \"./../utils/formUtils\";\nvar emptyStateValue = {};\nvar validatorsDefault = [];\nexport function useForm(_ref) {\n  var initialState = _ref.initialState,\n      touched = _ref.touched,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$onReset = _ref.onReset,\n      onReset = _ref$onReset === void 0 ? noop : _ref$onReset,\n      _ref$onInit = _ref.onInit,\n      onInit = _ref$onInit === void 0 ? noop : _ref$onInit,\n      _ref$onSubmit = _ref.onSubmit,\n      onSubmit = _ref$onSubmit === void 0 ? noop : _ref$onSubmit,\n      _ref$onValidation = _ref.onValidation,\n      onValidation = _ref$onValidation === void 0 ? noop : _ref$onValidation,\n      _ref$resetSyncErr = _ref.resetSyncErr,\n      resetSyncErr = _ref$resetSyncErr === void 0 ? noop : _ref$resetSyncErr,\n      _ref$validators = _ref.validators,\n      validatorsFuncs = _ref$validators === void 0 ? validatorsDefault : _ref$validators,\n      _ref$resetAsyncErr = _ref.resetAsyncErr,\n      resetAsyncErr = _ref$resetAsyncErr === void 0 ? noop : _ref$resetAsyncErr,\n      asyncValidator = _ref.asyncValidator,\n      _ref$onAsyncValidatio = _ref.onAsyncValidation,\n      onAsyncValidation = _ref$onAsyncValidatio === void 0 ? noop : _ref$onAsyncValidatio,\n      reducers = _ref.reducers,\n      _getInitilaStateForm_ = _ref._getInitilaStateForm_,\n      _onMultipleForm_ = _ref._onMultipleForm_,\n      name = _ref.name,\n      action = _ref.action;\n\n  var _useState = useState(function () {\n    return createForm(initialState);\n  }),\n      formState = _useState[0],\n      dispatch = _useState[1];\n\n  var stateRef = useRef(formState);\n\n  var _useRef = useRef(isUsingMultipleForm(_getInitilaStateForm_, _onMultipleForm_, name)),\n      isMultipleForm = _useRef.current;\n\n  var dispatchFormState = useCallback(function (_ref2) {\n    var state = _ref2.state,\n        status = _ref2.status,\n        rest = _objectWithoutPropertiesLoose(_ref2, [\"state\", \"status\"]);\n\n    var prevState = status === STATUS.ON_RESET ? memoInitialState.current.state : status === STATUS.ON_INIT ? emptyStateValue : stateRef.current.state;\n    var newState = status === STATUS.READY || status === STATUS.ON_SUBMIT ? state : applyReducers(state, prevState, prevState);\n    stateRef.current = _extends({}, rest, {\n      status: status,\n      state: newState\n    });\n    dispatch(stateRef.current);\n  }, []);\n  var memoInitialState = useRef(_extends({}, formState));\n  var isMounted = useRef(false);\n  var stillMounted = useCallback(function () {\n    return isMounted.current;\n  }, []);\n\n  var _useValidators = useValidators(undefined, undefined, isMounted),\n      validators = _useValidators[0],\n      addValidators = _useValidators[1],\n      removeValidators = _useValidators[2];\n\n  var _useValidationFunctio = useValidationFunction(validatorsFuncs),\n      validationMsg = _useValidationFunctio.validationMsg,\n      validationObj = _useValidationFunctio.validationObj,\n      validationFN = _useValidationFunctio.validationFN;\n\n  var _useValidationFunctio2 = useValidationFunctionAsync(asyncValidator, onAsyncValidation),\n      validationFNAsync = _useValidationFunctio2[0];\n\n  var _useValidators2 = useValidators(undefined, undefined, isMounted, true),\n      validatorsAsync = _useValidators2[0],\n      addValidatorsAsync = _useValidators2[1],\n      removeValidatorsAsync = _useValidators2[2],\n      validatorsMapsAsync = _useValidators2[3],\n      updateValidatorsMap = _useValidators2[4],\n      resetValidatorsMap = _useValidators2[5];\n\n  var applyReducers = useMemo(function () {\n    return chainReducers(reducers);\n  }, []);\n\n  var _useMapFields = useMapFields(),\n      unRegisterField = _useMapFields.unRegisterField,\n      mapFields = _useMapFields.mapFields,\n      updateRegisteredField = _useMapFields.updateRegisteredField;\n\n  var changeProp = useCallback(function (nameProp, value, removeMe) {\n    if (removeMe === void 0) {\n      removeMe = false;\n    }\n\n    var newState = updateState(stateRef.current.state, {\n      value: value,\n      nameProp: nameProp,\n      removeMe: removeMe\n    });\n    propagateState(newState, false);\n  }, []);\n  var initProp = useCallback(function (nameProp, value, initialValue) {\n    if (isMounted.current) {\n      // we must update the memoInitialState with the new prop if form is mounted\n      memoInitialState.current.state = updateState(memoInitialState.current.state, {\n        isValid: initialValue,\n        nameProp: nameProp\n      });\n      var newState = updateState(stateRef.current.state, {\n        value: value,\n        nameProp: nameProp\n      });\n      propagateState(newState, false);\n    } else {\n      var newStateInitial = updateState(memoInitialState.current.state, {\n        value: initialValue,\n        nameProp: nameProp\n      });\n\n      var _newState = updateState(stateRef.current.state, {\n        value: value,\n        nameProp: nameProp\n      });\n\n      memoInitialState.current.state = newStateInitial;\n      stateRef.current.state = _newState;\n    }\n  }, []);\n  var removeProp = useCallback(function (namePropExt, _ref3) {\n    var currentState = _ref3.currentState,\n        removeCurrent = _ref3.removeCurrent,\n        initialState = _ref3.initialState,\n        removeInitial = _ref3.removeInitial;\n    var newState = updateState(stateRef.current.state, {\n      value: currentState,\n      nameProp: namePropExt,\n      removeMe: removeCurrent\n    }); // if a prop removed was also a prop already initialized we must update the memoInitialState\n\n    memoInitialState.current.state = updateState(memoInitialState.current.state, {\n      value: initialState,\n      nameProp: namePropExt,\n      removeMe: removeInitial\n    });\n    propagateState(newState);\n  }, []);\n  var propagateState = useCallback(function (state, changePristine, status) {\n    if (status === void 0) {\n      status = STATUS.ON_CHANGE;\n    }\n\n    var pristine = changePristine !== undefined ? changePristine : stateRef.current.pristine;\n    var isValid = isFormValid(validators.current, state) && isFormValidAsync(validatorsMapsAsync.current);\n    dispatchFormState(_extends({}, stateRef.current, {\n      state: state,\n      isValid: isValid,\n      pristine: pristine,\n      status: status\n    }));\n  }, []);\n  var resetObj = useRef({});\n  var registerReset = useCallback(function (nameProp, fnReset) {\n    var _extends2;\n\n    resetObj.current = _extends({}, resetObj.current, (_extends2 = {}, _extends2[nameProp] = fnReset, _extends2));\n  }, []);\n  var unRegisterReset = useCallback(function (nameProp) {\n    delete resetObj.current[nameProp];\n  }, []);\n  var reset = useCallback(function () {\n    var state = Object.keys(resetObj.current).reduce(function (acc, key) {\n      var value = resetObj.current[key](memoInitialState.current.state);\n      if (value !== undefined) acc[key] = value;\n      return acc;\n    }, {});\n    var validatorsMapsAsync = resetValidatorsMap();\n    var isValid = isFormValid(validators.current, state) && isFormValidAsync(validatorsMapsAsync);\n    var status = STATUS.ON_RESET;\n    dispatchFormState(_extends({}, memoInitialState.current, {\n      state: state,\n      status: status,\n      isValid: isValid\n    }));\n  }, []);\n  var onSubmitForm = useCallback(function (e) {\n    e.persist();\n    var _stateRef$current = stateRef.current,\n        isValid = _stateRef$current.isValid,\n        prevAttempts = _stateRef$current.submitAttempts;\n    var status = STATUS.ON_SUBMIT;\n\n    if (typeof action !== \"string\" || !isValid) {\n      e.preventDefault();\n    }\n\n    var submitAttempts = prevAttempts + 1;\n\n    if (isValid && Object.keys(validatorsAsync.current).length > 0 && shouldRunAsyncValidator(validatorsMapsAsync.current)) {\n      var state = stateRef.current.state;\n      var asyncArrayProm = generateAsynFuncs(validatorsAsync.current, validatorsMapsAsync.current, state, updateValidatorsMap);\n      var target = e.target;\n      e.preventDefault(); // Set isValid to false until it ends the async checks\n\n      dispatchFormState(_extends({}, stateRef.current, {\n        isValid: false,\n        isSubmitting: true,\n        submitAttempts: submitAttempts\n      }));\n      Promise.all(asyncArrayProm).then(function () {\n        if (typeof action === \"string\") {\n          target.submit();\n        } else {\n          dispatchFormState(_extends({}, stateRef.current, {\n            status: status,\n            isValid: true\n          }));\n        }\n      }).catch(function () {\n        var isValid = shouldRunAsyncValidator(validatorsMapsAsync.current);\n        var isSubmitting = false;\n        dispatchFormState(_extends({}, stateRef.current, {\n          isValid: isValid,\n          isSubmitting: isSubmitting\n        }));\n      });\n    } else {\n      dispatchFormState(_extends({}, stateRef.current, {\n        status: status,\n        isSubmitting: true,\n        submitAttempts: submitAttempts\n      }));\n    }\n  }, []); // used only to replace the entire Form State\n\n  var dispatchNewState = useCallback(function (nextState) {\n    var newState = nextState;\n\n    if (typeof nextState === \"function\") {\n      var currentState = stateRef.current.state;\n      newState = nextState(currentState);\n    }\n\n    propagateState(newState, false);\n  }, []);\n  var isFormTouchedOnce = useRef(false);\n  var lastStateSyncCheck = useRef(null);\n  var triggerSyncValidation = useCallback(function (omitArg1, omitArg2, touchedEventField) {\n    if (touchedEventField === void 0) {\n      touchedEventField = true;\n    }\n\n    if (lastStateSyncCheck.current !== stateRef.current.state && validationObj.current !== null && (isFormTouchedOnce.current || touched && touchedEventField || !touched)) {\n      isFormTouchedOnce.current = true;\n      lastStateSyncCheck.current = stateRef.current.state;\n      var _validationObj$curren = validationObj.current,\n          isValid = _validationObj$curren.isValid,\n          checks = _validationObj$curren.checks;\n      onValidation(checks, isValid);\n    }\n  }, []); // used to register async validation Actions\n\n  var asyncInitValidation = useRef({});\n  var registerAsyncInitValidation = useCallback(function (nameProp, asyncFunc) {\n    asyncInitValidation.current[nameProp] = asyncFunc;\n  }, []);\n  var runInitialAsyncValidators = useCallback(function () {\n    var keyAsyncValitions = Object.keys(asyncInitValidation.current);\n\n    if (keyAsyncValitions.length > 0) {\n      var status = STATUS.ON_INIT_ASYNC;\n      dispatchFormState(_extends({}, stateRef.current, {\n        status: status\n      }));\n      var promises = flatAsyncValidationMap(asyncInitValidation.current);\n      Promise.all(promises).then(function () {\n        var status = STATUS.READY;\n        var isValid = isFormValid(validators.current, stateRef.current.state);\n        dispatchFormState(_extends({}, stateRef.current, {\n          status: status,\n          isValid: isValid\n        }));\n      }).catch(function () {\n        var status = STATUS.READY;\n        var isValid = false;\n        dispatchFormState(_extends({}, stateRef.current, {\n          status: status,\n          isValid: isValid\n        }));\n      });\n    }\n  }, []);\n  var runSyncValidation = useCallback(function () {\n    var isValid = isFormValid(validators.current, stateRef.current.state);\n    stateRef.current.isValid !== isValid && dispatchFormState(_extends({}, stateRef.current, {\n      isValid: isValid\n    }));\n  }, []);\n  var runAsyncValidation = useCallback(function (_ref4) {\n    var start = _ref4.start,\n        end = _ref4.end;\n\n    if (start) {\n      var status = STATUS.ON_RUN_ASYNC;\n      dispatchFormState(_extends({}, stateRef.current, {\n        isValid: false,\n        status: status\n      }));\n    } else if (end) {\n      var _status = STATUS.ON_ASYNC_END;\n      var isValid = isFormValid(validators.current, stateRef.current.state) && isFormValidAsync(validatorsMapsAsync.current);\n      dispatchFormState(_extends({}, stateRef.current, {\n        isValid: isValid,\n        status: _status\n      }));\n    }\n  }, []); // change status form to READY after being reset\n\n  useEffect(function () {\n    var _stateRef$current2 = stateRef.current,\n        status = _stateRef$current2.status,\n        state = _stateRef$current2.state,\n        isValid = _stateRef$current2.isValid;\n\n    if (status === STATUS.ON_RESET) {\n      onReset(state, isValid);\n      dispatchFormState(_extends({}, stateRef.current, {\n        status: STATUS.RESETTED\n      }));\n    } else if (status === STATUS.ON_CHANGE) {\n      onChange(state, isValid);\n    } else if (status === STATUS.ON_INIT) {\n      runInitialAsyncValidators();\n      onInit(state, isValid);\n    } else if (status === STATUS.ON_SUBMIT) {\n      var common = {\n        isSubmitting: false,\n        status: STATUS.READY\n      };\n\n      if (isValid) {\n        var result = onSubmit(state, isValid);\n\n        if (result && typeof result.then === \"function\") {\n          result.then(function () {\n            var submitted = stateRef.current.submitted + 1;\n            dispatchFormState(_extends({}, stateRef.current, common, {\n              submitted: submitted\n            }));\n          }).catch(function () {\n            return dispatchFormState(_extends({}, stateRef.current, common));\n          });\n        } else {\n          var prevSub = stateRef.current.submitted;\n          var submitted = result === false ? prevSub : prevSub + 1;\n          dispatchFormState(_extends({}, stateRef.current, common, {\n            submitted: submitted\n          }));\n        }\n      } else {\n        dispatchFormState(_extends({}, stateRef.current, common));\n      }\n    }\n\n    if (isMultipleForm && (status === STATUS.ON_RESET || status === STATUS.ON_CHANGE || status === STATUS.ON_INIT || status === STATUS.ON_SUBMIT)) {\n      _onMultipleForm_(name, state);\n    }\n  }, [stateRef.current]); // after form is mounted dispatch the initial state\n\n  useEffect(function () {\n    isMounted.current = true; // Add its own validators\n\n    if (validatorsFuncs.length > 0) {\n      addValidators(FORM_VALIDATION_LABEL, validationFN.current);\n    } // Add its own async validator func\n\n\n    if (typeof asyncValidator === \"function\") {\n      addValidatorsAsync(FORM_VALIDATION_LABEL, validationFNAsync.current, null);\n    }\n\n    var pristine = isMultipleForm && (_getInitilaStateForm_(name) == undefined || Object.keys(_getInitilaStateForm_(name)).length === 0) || !isMultipleForm;\n    var state = isMultipleForm ? _getInitilaStateForm_(name) || stateRef.current.state : stateRef.current.state;\n    var isValid = isFormValid(validators.current, state) && isFormValidAsync(validatorsMapsAsync.current);\n    stateRef.current = _extends({}, stateRef.current, {\n      state: state,\n      isValid: isValid,\n      pristine: pristine,\n      status: STATUS.ON_INIT\n    });\n    dispatchFormState(stateRef.current);\n  }, []);\n  useEffect(function () {\n    var formStatus = formState.status;\n\n    if (formStatus === STATUS.ON_RESET) {\n      isFormTouchedOnce.current = false;\n      lastStateSyncCheck.current = false;\n      resetSyncErr();\n      resetAsyncErr();\n    } else if (formStatus !== STATUS.READY && formStatus !== STATUS.ON_INIT_ASYNC) {\n      if (validationObj.current !== null) {\n        triggerSyncValidation(false, true, false);\n      }\n\n      if (validationObj.current !== null && !validationObj.current.isValid) {\n        resetAsyncErr();\n      }\n    }\n  }, [validationMsg.current, formState.status]);\n  return _extends({}, formState, {\n    // { isValid, state, status, pristine, isSubmitting }\n    formState: formState.state,\n    // pass the global form state down\n    formStatus: formState.status,\n    // pass the global form status down\n    mapFields: mapFields.current,\n    triggerSyncValidation: triggerSyncValidation,\n    unRegisterField: unRegisterField,\n    updateRegisteredField: updateRegisteredField,\n    registerAsyncInitValidation: registerAsyncInitValidation,\n    runAsyncValidation: runAsyncValidation,\n    runSyncValidation: runSyncValidation,\n    dispatchNewState: dispatchNewState,\n    changeProp: changeProp,\n    initProp: initProp,\n    onSubmitForm: onSubmitForm,\n    removeProp: removeProp,\n    stillMounted: stillMounted,\n    reset: reset,\n    addValidators: addValidators,\n    removeValidators: removeValidators,\n    addValidatorsAsync: addValidatorsAsync,\n    removeValidatorsAsync: removeValidatorsAsync,\n    updateValidatorsMap: updateValidatorsMap,\n    registerReset: registerReset,\n    unRegisterReset: unRegisterReset\n  });\n}\n\nfunction isUsingMultipleForm(_getInitilaStateForm_, _onMultipleForm_, name) {\n  return typeof _getInitilaStateForm_ === \"function\" && typeof _onMultipleForm_ === \"function\" && typeof name === \"string\";\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}