{"ast":null,"code":"'use strict';\n\nconst {\n  Agent: HttpAgent\n} = require('http');\n\nconst {\n  Agent: HttpsAgent\n} = require('https');\n\nconst {\n  connect: tlsConnect\n} = require('tls');\n\nlet Client;\n\nfor (const ctor of [HttpAgent, HttpsAgent]) {\n  class SSHAgent extends ctor {\n    constructor(connectCfg, agentOptions) {\n      super(agentOptions);\n      this._connectCfg = connectCfg;\n      this._defaultSrcIP = agentOptions && agentOptions.srcIP || 'localhost';\n    }\n\n    createConnection(options, cb) {\n      const srcIP = options && options.localAddress || this._defaultSrcIP;\n      const srcPort = options && options.localPort || 0;\n      const dstIP = options.host;\n      const dstPort = options.port;\n      if (Client === undefined) Client = require('./client.js');\n      const client = new Client();\n      let triedForward = false;\n      client.on('ready', () => {\n        client.forwardOut(srcIP, srcPort, dstIP, dstPort, (err, stream) => {\n          triedForward = true;\n\n          if (err) {\n            client.end();\n            return cb(err);\n          }\n\n          stream.once('close', () => client.end());\n          cb(null, decorateStream(stream, ctor, options));\n        });\n      }).on('error', cb).on('close', () => {\n        if (!triedForward) cb(new Error('Unexpected connection close'));\n      }).connect(this._connectCfg);\n    }\n\n  }\n\n  exports[ctor === HttpAgent ? 'SSHTTPAgent' : 'SSHTTPSAgent'] = SSHAgent;\n}\n\nfunction noop() {}\n\nfunction decorateStream(stream, ctor, options) {\n  if (ctor === HttpAgent) {\n    // HTTP\n    stream.setKeepAlive = noop;\n    stream.setNoDelay = noop;\n    stream.setTimeout = noop;\n    stream.ref = noop;\n    stream.unref = noop;\n    stream.destroySoon = stream.destroy;\n    return stream;\n  } // HTTPS\n\n\n  options.socket = stream;\n  const wrapped = tlsConnect(options); // This is a workaround for a regression in node v12.16.3+\n  // https://github.com/nodejs/node/issues/35904\n\n  const onClose = (() => {\n    let called = false;\n    return () => {\n      if (called) return;\n      called = true;\n      if (stream.isPaused()) stream.resume();\n    };\n  })(); // 'end' listener is needed because 'close' is not emitted in some scenarios\n  // in node v12.x for some unknown reason\n\n\n  wrapped.on('end', onClose).on('close', onClose);\n  return wrapped;\n}","map":{"version":3,"names":["Agent","HttpAgent","require","HttpsAgent","connect","tlsConnect","Client","ctor","SSHAgent","constructor","connectCfg","agentOptions","_connectCfg","_defaultSrcIP","srcIP","createConnection","options","cb","localAddress","srcPort","localPort","dstIP","host","dstPort","port","undefined","client","triedForward","on","forwardOut","err","stream","end","once","decorateStream","Error","exports","noop","setKeepAlive","setNoDelay","setTimeout","ref","unref","destroySoon","destroy","socket","wrapped","onClose","called","isPaused","resume"],"sources":["/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/ssh2/lib/http-agents.js"],"sourcesContent":["'use strict';\n\nconst { Agent: HttpAgent } = require('http');\nconst { Agent: HttpsAgent } = require('https');\nconst { connect: tlsConnect } = require('tls');\n\nlet Client;\n\nfor (const ctor of [HttpAgent, HttpsAgent]) {\n  class SSHAgent extends ctor {\n    constructor(connectCfg, agentOptions) {\n      super(agentOptions);\n\n      this._connectCfg = connectCfg;\n      this._defaultSrcIP = (agentOptions && agentOptions.srcIP) || 'localhost';\n    }\n\n    createConnection(options, cb) {\n      const srcIP = (options && options.localAddress) || this._defaultSrcIP;\n      const srcPort = (options && options.localPort) || 0;\n      const dstIP = options.host;\n      const dstPort = options.port;\n\n      if (Client === undefined)\n        Client = require('./client.js');\n\n      const client = new Client();\n      let triedForward = false;\n      client.on('ready', () => {\n        client.forwardOut(srcIP, srcPort, dstIP, dstPort, (err, stream) => {\n          triedForward = true;\n          if (err) {\n            client.end();\n            return cb(err);\n          }\n          stream.once('close', () => client.end());\n          cb(null, decorateStream(stream, ctor, options));\n        });\n      }).on('error', cb).on('close', () => {\n        if (!triedForward)\n          cb(new Error('Unexpected connection close'));\n      }).connect(this._connectCfg);\n    }\n  }\n\n  exports[ctor === HttpAgent ? 'SSHTTPAgent' : 'SSHTTPSAgent'] = SSHAgent;\n}\n\nfunction noop() {}\n\nfunction decorateStream(stream, ctor, options) {\n  if (ctor === HttpAgent) {\n    // HTTP\n    stream.setKeepAlive = noop;\n    stream.setNoDelay = noop;\n    stream.setTimeout = noop;\n    stream.ref = noop;\n    stream.unref = noop;\n    stream.destroySoon = stream.destroy;\n    return stream;\n  }\n\n  // HTTPS\n  options.socket = stream;\n  const wrapped = tlsConnect(options);\n\n  // This is a workaround for a regression in node v12.16.3+\n  // https://github.com/nodejs/node/issues/35904\n  const onClose = (() => {\n    let called = false;\n    return () => {\n      if (called)\n        return;\n      called = true;\n      if (stream.isPaused())\n        stream.resume();\n    };\n  })();\n  // 'end' listener is needed because 'close' is not emitted in some scenarios\n  // in node v12.x for some unknown reason\n  wrapped.on('end', onClose).on('close', onClose);\n\n  return wrapped;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}