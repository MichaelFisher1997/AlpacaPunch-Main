{"ast":null,"code":"const randomBytes = size => {\n  const crypto = global.crypto;\n\n  if (typeof (crypto === null || crypto === void 0 ? void 0 : crypto.getRandomValues) !== \"function\") {\n    throw new Error(\"Secure random number generator is not available\");\n  }\n\n  const b = Buffer.allocUnsafe(size);\n  const n = b.byteLength; // The requested length must not exceed 65,536 bytes.\n  // https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#exceptions\n\n  const MAX_BYTES = 65536;\n\n  for (let i = 0; i < n; i += MAX_BYTES) {\n    // Note that typedArray is modified in-place, and no copy is made.\n    crypto.getRandomValues(new Uint8Array(b.buffer, i + b.byteOffset, Math.min(n - i, MAX_BYTES)));\n  }\n\n  return b;\n};\n\nexport default randomBytes;","map":null,"metadata":{},"sourceType":"module"}