{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@zilliqa-js/core'), require('@zilliqa-js/util'), require('@zilliqa-js/proto'), require('@zilliqa-js/crypto'), require('bip39'), require('hdkey')) : typeof define === 'function' && define.amd ? define(['exports', 'tslib', '@zilliqa-js/core', '@zilliqa-js/util', '@zilliqa-js/proto', '@zilliqa-js/crypto', 'bip39', 'hdkey'], factory) : factory(global.zjsAccount = {}, global.tslib, global['@zilliqa-js/core'], global['@zilliqa-js/util'], global['@zilliqa-js/proto'], global['@zilliqa-js/crypto'], global.bip39, global.hdkey);\n})(this, function (exports, tslib, core, util, proto, zcrypto, bip39, hdkey) {\n  'use strict';\n\n  bip39 = bip39 && bip39.hasOwnProperty('default') ? bip39['default'] : bip39;\n  hdkey = hdkey && hdkey.hasOwnProperty('default') ? hdkey['default'] : hdkey; //  Copyright (C) 2018 Zilliqa\n\n  var encodeTransactionProto = function (tx) {\n    var msg = {\n      version: tx.version,\n      nonce: tx.nonce || 0,\n      // core protocol Schnorr expects lowercase, non-prefixed address.\n      toaddr: util.bytes.hexToByteArray(tx.toAddr.replace('0x', '').toLowerCase()),\n      senderpubkey: proto.ZilliqaMessage.ByteArray.create({\n        data: util.bytes.hexToByteArray(tx.pubKey || '00')\n      }),\n      amount: proto.ZilliqaMessage.ByteArray.create({\n        data: Uint8Array.from(tx.amount.toArrayLike(Buffer, undefined, 16))\n      }),\n      gasprice: proto.ZilliqaMessage.ByteArray.create({\n        data: Uint8Array.from(tx.gasPrice.toArrayLike(Buffer, undefined, 16))\n      }),\n      gaslimit: tx.gasLimit,\n      code: tx.code && tx.code.length ? Uint8Array.from(tslib.__spreadArray([], tslib.__read(tx.code), false).map(function (c) {\n        return c.charCodeAt(0);\n      })) : null,\n      data: tx.data && tx.data.length ? Uint8Array.from(tslib.__spreadArray([], tslib.__read(tx.data), false).map(function (c) {\n        return c.charCodeAt(0);\n      })) : null\n    };\n    var serialised = proto.ZilliqaMessage.ProtoTransactionCoreInfo.create(msg);\n    return Buffer.from(proto.ZilliqaMessage.ProtoTransactionCoreInfo.encode(serialised).finish());\n  };\n\n  var isTxReceipt = function (x) {\n    return util.validation.isPlainObject(x) && util.validation.matchesObject(x, {});\n  };\n\n  var isTxParams = function (obj) {\n    var validator = {\n      version: [util.validation.required(util.validation.isNumber)],\n      toAddr: [util.validation.required(util.validation.isAddress)],\n      amount: [util.validation.required(util.validation.isBN)],\n      gasPrice: [util.validation.required(util.validation.isBN)],\n      gasLimit: [util.validation.required(util.validation.isLong)],\n      code: [util.validation.isString],\n      data: [util.validation.isString],\n      receipt: [isTxReceipt],\n      nonce: [util.validation.required(util.validation.isNumber)],\n      signature: [util.validation.required(util.validation.isSignature)]\n    };\n    return util.validation.matchesObject(obj, validator);\n  };\n\n  var formatOutgoingTx = function (req) {\n    var e_1, _a; // if batch create transaction, payload is array\n\n\n    if (Array.isArray(req.payload) && req.payload[0].method === core.RPCMethod.CreateTransaction && isTxParams(req.payload[0].params[0])) {\n      // loop thru batch payloads and format the params\n      var payloads = [];\n\n      try {\n        for (var _b = tslib.__values(req.payload), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var txPayload = _c.value;\n          var txConfig = txPayload.params[0];\n          payloads.push(tslib.__assign(tslib.__assign({}, txPayload), {\n            params: [tslib.__assign(tslib.__assign({}, txConfig), {\n              amount: txConfig.amount.toString(),\n              gasLimit: txConfig.gasLimit.toString(),\n              gasPrice: txConfig.gasPrice.toString()\n            })]\n          }));\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      var ret = tslib.__assign(tslib.__assign({}, req), {\n        payload: payloads\n      });\n\n      return ret;\n    } // non-batch create transactions\n\n\n    if (!Array.isArray(req.payload) && req.payload.method === core.RPCMethod.CreateTransaction && isTxParams(req.payload.params[0])) {\n      var txConfig = req.payload.params[0];\n\n      var ret = tslib.__assign(tslib.__assign({}, req), {\n        payload: tslib.__assign(tslib.__assign({}, req.payload), {\n          params: [tslib.__assign(tslib.__assign({}, txConfig), {\n            amount: txConfig.amount.toString(),\n            gasLimit: txConfig.gasLimit.toString(),\n            gasPrice: txConfig.gasPrice.toString()\n          })]\n        })\n      });\n\n      return ret;\n    }\n\n    return req;\n  };\n\n  function sleep(ms) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      return tslib.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve) {\n          setTimeout(function () {\n            return resolve(undefined);\n          }, ms);\n        })];\n      });\n    });\n  }\n\n  var util$1 = /*#__PURE__*/Object.freeze({\n    encodeTransactionProto: encodeTransactionProto,\n    isTxReceipt: isTxReceipt,\n    isTxParams: isTxParams,\n    formatOutgoingTx: formatOutgoingTx,\n    sleep: sleep\n  }); //  Copyright (C) 2018 Zilliqa\n\n  var Account =\n  /** @class */\n  function () {\n    function Account(privateKey) {\n      this.privateKey = this.normalizePrivateKey(privateKey);\n      this.publicKey = zcrypto.getPubKeyFromPrivateKey(this.privateKey);\n      this.address = zcrypto.getAddressFromPublicKey(this.publicKey);\n      this.bech32Address = zcrypto.toBech32Address(this.address);\n    }\n    /**\r\n     * fromFile\r\n     *\r\n     * Takes a JSON-encoded keystore and passphrase, returning a fully\r\n     * instantiated Account instance.\r\n     *\r\n     * @param {string} file\r\n     * @param {string} passphrase\r\n     * @returns {Promise<Account>}\r\n     */\n\n\n    Account.fromFile = function (file, passphrase) {\n      return tslib.__awaiter(this, void 0, void 0, function () {\n        var keystore, privateKey, err_1;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 2,, 3]);\n\n              keystore = JSON.parse(file);\n              return [4\n              /*yield*/\n              , zcrypto.decryptPrivateKey(passphrase, keystore)];\n\n            case 1:\n              privateKey = _a.sent();\n              return [2\n              /*return*/\n              , new Account(privateKey)];\n\n            case 2:\n              err_1 = _a.sent();\n              throw new Error(\"Could not decrypt keystore file.\");\n\n            case 3:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n    /**\r\n     * toFile\r\n     *\r\n     * @param {string} passphrase\r\n     * @param {kdf} 'pbkdf2' | 'scrypt'\r\n     * @returns {Promise<string>}\r\n     */\n\n\n    Account.prototype.toFile = function (passphrase, kdf) {\n      if (kdf === void 0) {\n        kdf = 'scrypt';\n      }\n\n      return tslib.__awaiter(this, void 0, void 0, function () {\n        var keystore;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!passphrase || !passphrase.length) {\n                throw new Error('Passphrase cannot have a length of 0');\n              }\n\n              return [4\n              /*yield*/\n              , zcrypto.encryptPrivateKey(kdf, this.privateKey, passphrase)];\n\n            case 1:\n              keystore = _a.sent();\n              return [2\n              /*return*/\n              , keystore];\n          }\n        });\n      });\n    };\n    /**\r\n     * signTransaction\r\n     *\r\n     * @param {Buffer} bytes - the data to be signed\r\n     *\r\n     * @returns {string} - the hex encoded signature. it is a concatenation of\r\n     * the r and s values in hex, each padded to a length of 64.\r\n     */\n\n\n    Account.prototype.signTransaction = function (bytes) {\n      return zcrypto.sign(bytes, this.privateKey, this.publicKey);\n    };\n\n    Account.prototype.normalizePrivateKey = function (privateKey) {\n      return zcrypto.normalizePrivateKey(privateKey);\n    };\n\n    return Account;\n  }(); //  Copyright (C) 2018 Zilliqa\n\n\n  var Wallet =\n  /** @class */\n  function (_super) {\n    tslib.__extends(Wallet, _super);\n    /**\r\n     * constructor\r\n     *\r\n     * Takes an array of Account objects and instantiates a Wallet instance.\r\n     *\r\n     * @param {Account[]} accounts\r\n     */\n\n\n    function Wallet(provider, accounts) {\n      if (accounts === void 0) {\n        accounts = [];\n      }\n\n      var _this = _super.call(this) || this;\n\n      _this.accounts = {};\n\n      if (accounts.length) {\n        _this.accounts = accounts.reduce(function (acc, account) {\n          var _a;\n\n          return tslib.__assign(tslib.__assign({}, acc), (_a = {}, _a[account.address] = account, _a));\n        }, {});\n      }\n\n      _this.provider = provider;\n      _this.defaultAccount = accounts[0];\n      return _this;\n    }\n    /**\r\n     * create\r\n     *\r\n     * Creates a new keypair with a randomly-generated private key. The new\r\n     * account is accessible by address.\r\n     *\r\n     * @returns {string} - address of the new account\r\n     */\n\n\n    Wallet.prototype.create = function () {\n      var _a;\n\n      var privateKey = zcrypto.schnorr.generatePrivateKey();\n      var newAccount = new Account(privateKey);\n      this.accounts = tslib.__assign(tslib.__assign({}, this.accounts), (_a = {}, _a[newAccount.address] = newAccount, _a));\n\n      if (!this.defaultAccount) {\n        this.defaultAccount = newAccount;\n      }\n\n      return newAccount.address;\n    };\n    /**\r\n     * addByPrivateKey\r\n     *\r\n     * Adds an account to the wallet by private key.\r\n     *\r\n     * @param {string} privateKey - hex-encoded private key\r\n     * @returns {string} - the corresponing address, computer from the private\r\n     * key.\r\n     */\n\n\n    Wallet.prototype.addByPrivateKey = function (privateKey) {\n      var _a;\n\n      var newAccount = new Account(privateKey);\n      this.accounts = tslib.__assign(tslib.__assign({}, this.accounts), (_a = {}, _a[newAccount.address] = newAccount, _a));\n\n      if (!this.defaultAccount) {\n        this.defaultAccount = newAccount;\n      }\n\n      return newAccount.address;\n    };\n    /**\r\n     * addByKeystore\r\n     *\r\n     * Adds an account by keystore. This method is asynchronous and returns\r\n     * a Promise<string>, in order not to block on the underlying decryption\r\n     * operation.\r\n     *\r\n     * @param {string} keystore\r\n     * @param {string} passphrase\r\n     * @returns {Promise<string>}\r\n     */\n\n\n    Wallet.prototype.addByKeystore = function (keystore, passphrase) {\n      return tslib.__awaiter(this, void 0, void 0, function () {\n        var newAccount;\n\n        var _a;\n\n        return tslib.__generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , Account.fromFile(keystore, passphrase)];\n\n            case 1:\n              newAccount = _b.sent();\n              this.accounts = tslib.__assign(tslib.__assign({}, this.accounts), (_a = {}, _a[newAccount.address] = newAccount, _a));\n\n              if (!this.defaultAccount) {\n                this.defaultAccount = newAccount;\n              }\n\n              return [2\n              /*return*/\n              , newAccount.address];\n          }\n        });\n      });\n    };\n    /**\r\n     * addByMnemonic\r\n     *\r\n     * Adds an `Account` by use of a mnemonic as specified in BIP-32 and BIP-39\r\n     *\r\n     * @param {string} phrase - 12-word mnemonic phrase\r\n     * @param {number} index=0 - the number of the child key to add\r\n     * @returns {string} - the corresponding address\r\n     */\n\n\n    Wallet.prototype.addByMnemonic = function (phrase, index) {\n      if (index === void 0) {\n        index = 0;\n      }\n\n      if (!this.isValidMnemonic(phrase)) {\n        throw new Error(\"Invalid mnemonic phrase: \" + phrase);\n      }\n\n      var seed = bip39.mnemonicToSeed(phrase);\n      var hdKey = hdkey.fromMasterSeed(seed);\n      var childKey = hdKey.derive(\"m/44'/313'/0'/0/\" + index);\n      var privateKey = childKey.privateKey.toString('hex');\n      return this.addByPrivateKey(privateKey);\n    };\n    /**\r\n     * addByMnemonicLedger\r\n     *\r\n     * Adds an `Account` by use of a mnemonic as specified in BIP-32 and BIP-39\r\n     * The key derivation path used in Ledger is different from that of\r\n     * addByMnemonic.\r\n     *\r\n     * @param {string} phrase - 12-word mnemonic phrase\r\n     * @param {number} index=0 - the number of the child key to add\r\n     * @returns {string} - the corresponding address\r\n     */\n\n\n    Wallet.prototype.addByMnemonicLedger = function (phrase, index) {\n      if (index === void 0) {\n        index = 0;\n      }\n\n      if (!this.isValidMnemonic(phrase)) {\n        throw new Error(\"Invalid mnemonic phrase: \" + phrase);\n      }\n\n      var seed = bip39.mnemonicToSeed(phrase);\n      var hdKey = hdkey.fromMasterSeed(seed);\n      var childKey = hdKey.derive(\"m/44'/313'/\" + index + \"'/0'/0'\");\n      var privateKey = childKey.privateKey.toString('hex');\n      return this.addByPrivateKey(privateKey);\n    };\n    /**\r\n     * export\r\n     *\r\n     * Exports the specified account as a keystore file.\r\n     *\r\n     * @param {string} address\r\n     * @param {string} passphrase\r\n     * @param {KDF} kdf='scrypt'\r\n     * @returns {Promise<string>}\r\n     */\n\n\n    Wallet.prototype.export = function (address, passphrase, kdf) {\n      if (kdf === void 0) {\n        kdf = 'scrypt';\n      }\n\n      if (!this.accounts[address]) {\n        throw new Error(\"No account with address \" + address + \" exists\");\n      }\n\n      return this.accounts[address].toFile(passphrase, kdf);\n    };\n    /**\r\n     * remove\r\n     *\r\n     * Removes an account from the wallet and returns boolean to indicate\r\n     * failure or success.\r\n     *\r\n     * @param {string} address\r\n     * @returns {boolean}\r\n     */\n\n\n    Wallet.prototype.remove = function (address) {\n      if (this.accounts[address]) {\n        var _a = this.accounts,\n            _b = address,\n            toRemove = _a[_b],\n            rest = tslib.__rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n\n        this.accounts = rest;\n        return true;\n      }\n\n      return false;\n    };\n    /**\r\n     * setDefault\r\n     *\r\n     * Sets the default account of the wallet.\r\n     *\r\n     * @param {string} address\r\n     */\n\n\n    Wallet.prototype.setDefault = function (address) {\n      this.defaultAccount = this.accounts[address];\n    };\n    /**\r\n     * sign\r\n     *\r\n     * signs an unsigned transaction with the default account.\r\n     *\r\n     * @param {Transaction} tx\r\n     * @param {boolean} offlineSign\r\n     * @returns {Transaction}\r\n     */\n\n\n    Wallet.prototype.sign = function (tx, offlineSign) {\n      if (tx.txParams && tx.txParams.pubKey) {\n        // attempt to find the address\n        var senderAddress = zcrypto.getAddressFromPublicKey(tx.txParams.pubKey);\n\n        if (!this.accounts[senderAddress]) {\n          throw new Error(\"Could not sign the transaction with \" + senderAddress + \" as it does not exist\");\n        }\n\n        return this.signWith(tx, senderAddress, offlineSign);\n      }\n\n      if (!this.defaultAccount) {\n        throw new Error('This wallet has no default account.');\n      }\n\n      return this.signWith(tx, this.defaultAccount.address, offlineSign);\n    };\n\n    Wallet.prototype.signBatch = function (txList) {\n      return tslib.__awaiter(this, void 0, void 0, function () {\n        var batchResults, signer_1, balance, nextNonce, _loop_1, this_1, index, err_1;\n\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              batchResults = [];\n\n              if (!this.defaultAccount) {\n                throw new Error('This wallet has no default account.');\n              }\n\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 7,, 8]);\n\n              signer_1 = this.accounts[this.defaultAccount.address];\n              return [4\n              /*yield*/\n              , this.provider.send(core.RPCMethod.GetBalance, signer_1.address.replace('0x', '').toLowerCase())];\n\n            case 2:\n              balance = _a.sent();\n\n              if (balance.result === undefined) {\n                throw new Error('Could not get balance');\n              }\n\n              if (typeof balance.result.nonce !== 'number') {\n                throw new Error('Could not get nonce');\n              }\n\n              nextNonce = balance.result.nonce + 1;\n\n              _loop_1 = function (index) {\n                var currentNonce, withNonceTx, signedTx;\n                return tslib.__generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      currentNonce = index + nextNonce;\n                      withNonceTx = txList[index].map(function (txObj) {\n                        return tslib.__assign(tslib.__assign({}, txObj), {\n                          nonce: currentNonce,\n                          pubKey: signer_1.publicKey\n                        });\n                      });\n                      return [4\n                      /*yield*/\n                      , this_1.sign(withNonceTx)];\n\n                    case 1:\n                      signedTx = _b.sent();\n                      batchResults.push(signedTx);\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              };\n\n              this_1 = this;\n              index = 0;\n              _a.label = 3;\n\n            case 3:\n              if (!(index < txList.length)) return [3\n              /*break*/\n              , 6];\n              return [5\n              /*yield**/\n              , _loop_1(index)];\n\n            case 4:\n              _a.sent();\n\n              _a.label = 5;\n\n            case 5:\n              index++;\n              return [3\n              /*break*/\n              , 3];\n\n            case 6:\n              return [3\n              /*break*/\n              , 8];\n\n            case 7:\n              err_1 = _a.sent();\n              throw err_1;\n\n            case 8:\n              return [2\n              /*return*/\n              , batchResults];\n          }\n        });\n      });\n    };\n    /**\r\n     * signWith\r\n     *\r\n     * @param {Transaction} tx\r\n     * @param {string} account\r\n     * @param {boolean} offlineSign\r\n     * @returns {Transaction}\r\n     */\n\n\n    Wallet.prototype.signWith = function (tx, account, offlineSign) {\n      return tslib.__awaiter(this, void 0, void 0, function () {\n        var signer, gasPrice, gasLimit, debt, currNonce, balance, bal, withNonce_1, withPublicKey, err_2;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!this.accounts[account]) {\n                throw new Error('The selected account does not exist on this Wallet instance.');\n              }\n\n              signer = this.accounts[account];\n              gasPrice = tx.txParams.gasPrice;\n              gasLimit = new util.BN(tx.txParams.gasLimit.toString());\n              debt = gasPrice.mul(gasLimit).add(tx.txParams.amount);\n              currNonce = 0;\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 5,, 6]);\n\n              if (!!tx.txParams.nonce) return [3\n              /*break*/\n              , 4];\n\n              if (offlineSign) {\n                throw new Error('No nonce detected in tx params when signing in offline mode');\n              }\n\n              if (!(typeof offlineSign === 'undefined' || !offlineSign)) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , this.provider.send(core.RPCMethod.GetBalance, signer.address.replace('0x', '').toLowerCase())];\n\n            case 2:\n              balance = _a.sent();\n\n              if (balance.result === undefined) {\n                throw new Error('Could not get balance');\n              }\n\n              bal = new util.BN(balance.result.balance);\n\n              if (debt.gt(bal)) {\n                throw new Error('You do not have enough funds, need ' + debt.toString() + ' but only have ' + bal.toString());\n              }\n\n              if (typeof balance.result.nonce !== 'number') {\n                throw new Error('Could not get nonce');\n              }\n\n              currNonce = balance.result.nonce;\n              _a.label = 3;\n\n            case 3:\n              withNonce_1 = tx.map(function (txObj) {\n                return tslib.__assign(tslib.__assign({}, txObj), {\n                  nonce: txObj.nonce || currNonce + 1,\n                  pubKey: signer.publicKey\n                });\n              });\n              return [2\n              /*return*/\n              , withNonce_1.map(function (txObj) {\n                // @ts-ignore\n                return tslib.__assign(tslib.__assign({}, txObj), {\n                  signature: signer.signTransaction(withNonce_1.bytes)\n                });\n              })];\n\n            case 4:\n              withPublicKey = tx.map(function (txObj) {\n                return tslib.__assign(tslib.__assign({}, txObj), {\n                  pubKey: signer.publicKey\n                });\n              });\n              return [2\n              /*return*/\n              , withPublicKey.map(function (txObj) {\n                return tslib.__assign(tslib.__assign({}, txObj), {\n                  signature: signer.signTransaction(tx.bytes)\n                });\n              })];\n\n            case 5:\n              err_2 = _a.sent();\n              throw err_2;\n\n            case 6:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    Wallet.prototype.isValidMnemonic = function (phrase) {\n      if (phrase.trim().split(/\\s+/g).length < 12) {\n        return false;\n      }\n\n      return bip39.validateMnemonic(phrase);\n    };\n\n    return Wallet;\n  }(core.Signer); //  Copyright (C) 2018 Zilliqa\n\n\n  (function (TxStatus) {\n    TxStatus[TxStatus[\"Initialised\"] = 0] = \"Initialised\";\n    TxStatus[TxStatus[\"Pending\"] = 1] = \"Pending\";\n    TxStatus[TxStatus[\"Confirmed\"] = 2] = \"Confirmed\";\n    TxStatus[TxStatus[\"Rejected\"] = 3] = \"Rejected\";\n  })(exports.TxStatus || (exports.TxStatus = {}));\n\n  (function (TxEventName) {\n    TxEventName[\"Error\"] = \"error\";\n    TxEventName[\"Receipt\"] = \"receipt\";\n    TxEventName[\"Track\"] = \"track\";\n  })(exports.TxEventName || (exports.TxEventName = {}));\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var minimalisticAssert = assert;\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  assert.equal = function assertEqual(l, r, msg) {\n    if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);\n  };\n\n  var inherits_browser = createCommonjsModule(function (module) {\n    if (typeof Object.create === 'function') {\n      // implementation from standard node.js 'util' module\n      module.exports = function inherits(ctor, superCtor) {\n        if (superCtor) {\n          ctor.super_ = superCtor;\n          ctor.prototype = Object.create(superCtor.prototype, {\n            constructor: {\n              value: ctor,\n              enumerable: false,\n              writable: true,\n              configurable: true\n            }\n          });\n        }\n      };\n    } else {\n      // old school shim for old browsers\n      module.exports = function inherits(ctor, superCtor) {\n        if (superCtor) {\n          ctor.super_ = superCtor;\n\n          var TempCtor = function () {};\n\n          TempCtor.prototype = superCtor.prototype;\n          ctor.prototype = new TempCtor();\n          ctor.prototype.constructor = ctor;\n        }\n      };\n    }\n  });\n  var inherits_1 = inherits_browser;\n\n  function isSurrogatePair(msg, i) {\n    if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n      return false;\n    }\n\n    if (i < 0 || i + 1 >= msg.length) {\n      return false;\n    }\n\n    return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n  }\n\n  function toArray(msg, enc) {\n    if (Array.isArray(msg)) return msg.slice();\n    if (!msg) return [];\n    var res = [];\n\n    if (typeof msg === 'string') {\n      if (!enc) {\n        // Inspired by stringToUtf8ByteArray() in closure-library by Google\n        // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n        // Apache License 2.0\n        // https://github.com/google/closure-library/blob/master/LICENSE\n        var p = 0;\n\n        for (var i = 0; i < msg.length; i++) {\n          var c = msg.charCodeAt(i);\n\n          if (c < 128) {\n            res[p++] = c;\n          } else if (c < 2048) {\n            res[p++] = c >> 6 | 192;\n            res[p++] = c & 63 | 128;\n          } else if (isSurrogatePair(msg, i)) {\n            c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n            res[p++] = c >> 18 | 240;\n            res[p++] = c >> 12 & 63 | 128;\n            res[p++] = c >> 6 & 63 | 128;\n            res[p++] = c & 63 | 128;\n          } else {\n            res[p++] = c >> 12 | 224;\n            res[p++] = c >> 6 & 63 | 128;\n            res[p++] = c & 63 | 128;\n          }\n        }\n      } else if (enc === 'hex') {\n        msg = msg.replace(/[^a-z0-9]+/ig, '');\n        if (msg.length % 2 !== 0) msg = '0' + msg;\n\n        for (i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n      }\n    } else {\n      for (i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n    }\n\n    return res;\n  }\n\n  var toArray_1 = toArray;\n\n  function toHex(msg) {\n    var res = '';\n\n    for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n\n    return res;\n  }\n\n  var toHex_1 = toHex;\n\n  function htonl(w) {\n    var res = w >>> 24 | w >>> 8 & 0xff00 | w << 8 & 0xff0000 | (w & 0xff) << 24;\n    return res >>> 0;\n  }\n\n  var htonl_1 = htonl;\n\n  function toHex32(msg, endian) {\n    var res = '';\n\n    for (var i = 0; i < msg.length; i++) {\n      var w = msg[i];\n      if (endian === 'little') w = htonl(w);\n      res += zero8(w.toString(16));\n    }\n\n    return res;\n  }\n\n  var toHex32_1 = toHex32;\n\n  function zero2(word) {\n    if (word.length === 1) return '0' + word;else return word;\n  }\n\n  var zero2_1 = zero2;\n\n  function zero8(word) {\n    if (word.length === 7) return '0' + word;else if (word.length === 6) return '00' + word;else if (word.length === 5) return '000' + word;else if (word.length === 4) return '0000' + word;else if (word.length === 3) return '00000' + word;else if (word.length === 2) return '000000' + word;else if (word.length === 1) return '0000000' + word;else return word;\n  }\n\n  var zero8_1 = zero8;\n\n  function join32(msg, start, end, endian) {\n    var len = end - start;\n    minimalisticAssert(len % 4 === 0);\n    var res = new Array(len / 4);\n\n    for (var i = 0, k = start; i < res.length; i++, k += 4) {\n      var w;\n      if (endian === 'big') w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];\n      res[i] = w >>> 0;\n    }\n\n    return res;\n  }\n\n  var join32_1 = join32;\n\n  function split32(msg, endian) {\n    var res = new Array(msg.length * 4);\n\n    for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n      var m = msg[i];\n\n      if (endian === 'big') {\n        res[k] = m >>> 24;\n        res[k + 1] = m >>> 16 & 0xff;\n        res[k + 2] = m >>> 8 & 0xff;\n        res[k + 3] = m & 0xff;\n      } else {\n        res[k + 3] = m >>> 24;\n        res[k + 2] = m >>> 16 & 0xff;\n        res[k + 1] = m >>> 8 & 0xff;\n        res[k] = m & 0xff;\n      }\n    }\n\n    return res;\n  }\n\n  var split32_1 = split32;\n\n  function rotr32(w, b) {\n    return w >>> b | w << 32 - b;\n  }\n\n  var rotr32_1 = rotr32;\n\n  function rotl32(w, b) {\n    return w << b | w >>> 32 - b;\n  }\n\n  var rotl32_1 = rotl32;\n\n  function sum32(a, b) {\n    return a + b >>> 0;\n  }\n\n  var sum32_1 = sum32;\n\n  function sum32_3(a, b, c) {\n    return a + b + c >>> 0;\n  }\n\n  var sum32_3_1 = sum32_3;\n\n  function sum32_4(a, b, c, d) {\n    return a + b + c + d >>> 0;\n  }\n\n  var sum32_4_1 = sum32_4;\n\n  function sum32_5(a, b, c, d, e) {\n    return a + b + c + d + e >>> 0;\n  }\n\n  var sum32_5_1 = sum32_5;\n\n  function sum64(buf, pos, ah, al) {\n    var bh = buf[pos];\n    var bl = buf[pos + 1];\n    var lo = al + bl >>> 0;\n    var hi = (lo < al ? 1 : 0) + ah + bh;\n    buf[pos] = hi >>> 0;\n    buf[pos + 1] = lo;\n  }\n\n  var sum64_1 = sum64;\n\n  function sum64_hi(ah, al, bh, bl) {\n    var lo = al + bl >>> 0;\n    var hi = (lo < al ? 1 : 0) + ah + bh;\n    return hi >>> 0;\n  }\n\n  var sum64_hi_1 = sum64_hi;\n\n  function sum64_lo(ah, al, bh, bl) {\n    var lo = al + bl;\n    return lo >>> 0;\n  }\n\n  var sum64_lo_1 = sum64_lo;\n\n  function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n    var carry = 0;\n    var lo = al;\n    lo = lo + bl >>> 0;\n    carry += lo < al ? 1 : 0;\n    lo = lo + cl >>> 0;\n    carry += lo < cl ? 1 : 0;\n    lo = lo + dl >>> 0;\n    carry += lo < dl ? 1 : 0;\n    var hi = ah + bh + ch + dh + carry;\n    return hi >>> 0;\n  }\n\n  var sum64_4_hi_1 = sum64_4_hi;\n\n  function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n    var lo = al + bl + cl + dl;\n    return lo >>> 0;\n  }\n\n  var sum64_4_lo_1 = sum64_4_lo;\n\n  function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n    var carry = 0;\n    var lo = al;\n    lo = lo + bl >>> 0;\n    carry += lo < al ? 1 : 0;\n    lo = lo + cl >>> 0;\n    carry += lo < cl ? 1 : 0;\n    lo = lo + dl >>> 0;\n    carry += lo < dl ? 1 : 0;\n    lo = lo + el >>> 0;\n    carry += lo < el ? 1 : 0;\n    var hi = ah + bh + ch + dh + eh + carry;\n    return hi >>> 0;\n  }\n\n  var sum64_5_hi_1 = sum64_5_hi;\n\n  function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n    var lo = al + bl + cl + dl + el;\n    return lo >>> 0;\n  }\n\n  var sum64_5_lo_1 = sum64_5_lo;\n\n  function rotr64_hi(ah, al, num) {\n    var r = al << 32 - num | ah >>> num;\n    return r >>> 0;\n  }\n\n  var rotr64_hi_1 = rotr64_hi;\n\n  function rotr64_lo(ah, al, num) {\n    var r = ah << 32 - num | al >>> num;\n    return r >>> 0;\n  }\n\n  var rotr64_lo_1 = rotr64_lo;\n\n  function shr64_hi(ah, al, num) {\n    return ah >>> num;\n  }\n\n  var shr64_hi_1 = shr64_hi;\n\n  function shr64_lo(ah, al, num) {\n    var r = ah << 32 - num | al >>> num;\n    return r >>> 0;\n  }\n\n  var shr64_lo_1 = shr64_lo;\n  var utils = {\n    inherits: inherits_1,\n    toArray: toArray_1,\n    toHex: toHex_1,\n    htonl: htonl_1,\n    toHex32: toHex32_1,\n    zero2: zero2_1,\n    zero8: zero8_1,\n    join32: join32_1,\n    split32: split32_1,\n    rotr32: rotr32_1,\n    rotl32: rotl32_1,\n    sum32: sum32_1,\n    sum32_3: sum32_3_1,\n    sum32_4: sum32_4_1,\n    sum32_5: sum32_5_1,\n    sum64: sum64_1,\n    sum64_hi: sum64_hi_1,\n    sum64_lo: sum64_lo_1,\n    sum64_4_hi: sum64_4_hi_1,\n    sum64_4_lo: sum64_4_lo_1,\n    sum64_5_hi: sum64_5_hi_1,\n    sum64_5_lo: sum64_5_lo_1,\n    rotr64_hi: rotr64_hi_1,\n    rotr64_lo: rotr64_lo_1,\n    shr64_hi: shr64_hi_1,\n    shr64_lo: shr64_lo_1\n  };\n\n  function BlockHash() {\n    this.pending = null;\n    this.pendingTotal = 0;\n    this.blockSize = this.constructor.blockSize;\n    this.outSize = this.constructor.outSize;\n    this.hmacStrength = this.constructor.hmacStrength;\n    this.padLength = this.constructor.padLength / 8;\n    this.endian = 'big';\n    this._delta8 = this.blockSize / 8;\n    this._delta32 = this.blockSize / 32;\n  }\n\n  var BlockHash_1 = BlockHash;\n\n  BlockHash.prototype.update = function update(msg, enc) {\n    // Convert message to array, pad it, and join into 32bit blocks\n    msg = utils.toArray(msg, enc);\n    if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);\n    this.pendingTotal += msg.length; // Enough data, try updating\n\n    if (this.pending.length >= this._delta8) {\n      msg = this.pending; // Process pending data in blocks\n\n      var r = msg.length % this._delta8;\n      this.pending = msg.slice(msg.length - r, msg.length);\n      if (this.pending.length === 0) this.pending = null;\n      msg = utils.join32(msg, 0, msg.length - r, this.endian);\n\n      for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);\n    }\n\n    return this;\n  };\n\n  BlockHash.prototype.digest = function digest(enc) {\n    this.update(this._pad());\n    minimalisticAssert(this.pending === null);\n    return this._digest(enc);\n  };\n\n  BlockHash.prototype._pad = function pad() {\n    var len = this.pendingTotal;\n    var bytes = this._delta8;\n    var k = bytes - (len + this.padLength) % bytes;\n    var res = new Array(k + this.padLength);\n    res[0] = 0x80;\n\n    for (var i = 1; i < k; i++) res[i] = 0; // Append length\n\n\n    len <<= 3;\n\n    if (this.endian === 'big') {\n      for (var t = 8; t < this.padLength; t++) res[i++] = 0;\n\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = len >>> 24 & 0xff;\n      res[i++] = len >>> 16 & 0xff;\n      res[i++] = len >>> 8 & 0xff;\n      res[i++] = len & 0xff;\n    } else {\n      res[i++] = len & 0xff;\n      res[i++] = len >>> 8 & 0xff;\n      res[i++] = len >>> 16 & 0xff;\n      res[i++] = len >>> 24 & 0xff;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n\n      for (t = 8; t < this.padLength; t++) res[i++] = 0;\n    }\n\n    return res;\n  };\n\n  var common = {\n    BlockHash: BlockHash_1\n  };\n  var rotr32$1 = utils.rotr32;\n\n  function ft_1(s, x, y, z) {\n    if (s === 0) return ch32(x, y, z);\n    if (s === 1 || s === 3) return p32(x, y, z);\n    if (s === 2) return maj32(x, y, z);\n  }\n\n  var ft_1_1 = ft_1;\n\n  function ch32(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n\n  var ch32_1 = ch32;\n\n  function maj32(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n\n  var maj32_1 = maj32;\n\n  function p32(x, y, z) {\n    return x ^ y ^ z;\n  }\n\n  var p32_1 = p32;\n\n  function s0_256(x) {\n    return rotr32$1(x, 2) ^ rotr32$1(x, 13) ^ rotr32$1(x, 22);\n  }\n\n  var s0_256_1 = s0_256;\n\n  function s1_256(x) {\n    return rotr32$1(x, 6) ^ rotr32$1(x, 11) ^ rotr32$1(x, 25);\n  }\n\n  var s1_256_1 = s1_256;\n\n  function g0_256(x) {\n    return rotr32$1(x, 7) ^ rotr32$1(x, 18) ^ x >>> 3;\n  }\n\n  var g0_256_1 = g0_256;\n\n  function g1_256(x) {\n    return rotr32$1(x, 17) ^ rotr32$1(x, 19) ^ x >>> 10;\n  }\n\n  var g1_256_1 = g1_256;\n  var common$1 = {\n    ft_1: ft_1_1,\n    ch32: ch32_1,\n    maj32: maj32_1,\n    p32: p32_1,\n    s0_256: s0_256_1,\n    s1_256: s1_256_1,\n    g0_256: g0_256_1,\n    g1_256: g1_256_1\n  };\n  var rotl32$1 = utils.rotl32;\n  var sum32$1 = utils.sum32;\n  var sum32_5$1 = utils.sum32_5;\n  var ft_1$1 = common$1.ft_1;\n  var BlockHash$1 = common.BlockHash;\n  var sha1_K = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\n  function SHA1() {\n    if (!(this instanceof SHA1)) return new SHA1();\n    BlockHash$1.call(this);\n    this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n    this.W = new Array(80);\n  }\n\n  utils.inherits(SHA1, BlockHash$1);\n  var _1 = SHA1;\n  SHA1.blockSize = 512;\n  SHA1.outSize = 160;\n  SHA1.hmacStrength = 80;\n  SHA1.padLength = 64;\n\n  SHA1.prototype._update = function _update(msg, start) {\n    var W = this.W;\n\n    for (var i = 0; i < 16; i++) W[i] = msg[start + i];\n\n    for (; i < W.length; i++) W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n    var a = this.h[0];\n    var b = this.h[1];\n    var c = this.h[2];\n    var d = this.h[3];\n    var e = this.h[4];\n\n    for (i = 0; i < W.length; i++) {\n      var s = ~~(i / 20);\n      var t = sum32_5$1(rotl32$1(a, 5), ft_1$1(s, b, c, d), e, W[i], sha1_K[s]);\n      e = d;\n      d = c;\n      c = rotl32$1(b, 30);\n      b = a;\n      a = t;\n    }\n\n    this.h[0] = sum32$1(this.h[0], a);\n    this.h[1] = sum32$1(this.h[1], b);\n    this.h[2] = sum32$1(this.h[2], c);\n    this.h[3] = sum32$1(this.h[3], d);\n    this.h[4] = sum32$1(this.h[4], e);\n  };\n\n  SHA1.prototype._digest = function digest(enc) {\n    if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n  };\n\n  var sum32$2 = utils.sum32;\n  var sum32_4$1 = utils.sum32_4;\n  var sum32_5$2 = utils.sum32_5;\n  var ch32$1 = common$1.ch32;\n  var maj32$1 = common$1.maj32;\n  var s0_256$1 = common$1.s0_256;\n  var s1_256$1 = common$1.s1_256;\n  var g0_256$1 = common$1.g0_256;\n  var g1_256$1 = common$1.g1_256;\n  var BlockHash$2 = common.BlockHash;\n  var sha256_K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  function SHA256() {\n    if (!(this instanceof SHA256)) return new SHA256();\n    BlockHash$2.call(this);\n    this.h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\n    this.k = sha256_K;\n    this.W = new Array(64);\n  }\n\n  utils.inherits(SHA256, BlockHash$2);\n  var _256 = SHA256;\n  SHA256.blockSize = 512;\n  SHA256.outSize = 256;\n  SHA256.hmacStrength = 192;\n  SHA256.padLength = 64;\n\n  SHA256.prototype._update = function _update(msg, start) {\n    var W = this.W;\n\n    for (var i = 0; i < 16; i++) W[i] = msg[start + i];\n\n    for (; i < W.length; i++) W[i] = sum32_4$1(g1_256$1(W[i - 2]), W[i - 7], g0_256$1(W[i - 15]), W[i - 16]);\n\n    var a = this.h[0];\n    var b = this.h[1];\n    var c = this.h[2];\n    var d = this.h[3];\n    var e = this.h[4];\n    var f = this.h[5];\n    var g = this.h[6];\n    var h = this.h[7];\n    minimalisticAssert(this.k.length === W.length);\n\n    for (i = 0; i < W.length; i++) {\n      var T1 = sum32_5$2(h, s1_256$1(e), ch32$1(e, f, g), this.k[i], W[i]);\n      var T2 = sum32$2(s0_256$1(a), maj32$1(a, b, c));\n      h = g;\n      g = f;\n      f = e;\n      e = sum32$2(d, T1);\n      d = c;\n      c = b;\n      b = a;\n      a = sum32$2(T1, T2);\n    }\n\n    this.h[0] = sum32$2(this.h[0], a);\n    this.h[1] = sum32$2(this.h[1], b);\n    this.h[2] = sum32$2(this.h[2], c);\n    this.h[3] = sum32$2(this.h[3], d);\n    this.h[4] = sum32$2(this.h[4], e);\n    this.h[5] = sum32$2(this.h[5], f);\n    this.h[6] = sum32$2(this.h[6], g);\n    this.h[7] = sum32$2(this.h[7], h);\n  };\n\n  SHA256.prototype._digest = function digest(enc) {\n    if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n  };\n\n  function SHA224() {\n    if (!(this instanceof SHA224)) return new SHA224();\n\n    _256.call(this);\n\n    this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];\n  }\n\n  utils.inherits(SHA224, _256);\n  var _224 = SHA224;\n  SHA224.blockSize = 512;\n  SHA224.outSize = 224;\n  SHA224.hmacStrength = 192;\n  SHA224.padLength = 64;\n\n  SHA224.prototype._digest = function digest(enc) {\n    // Just truncate output\n    if (enc === 'hex') return utils.toHex32(this.h.slice(0, 7), 'big');else return utils.split32(this.h.slice(0, 7), 'big');\n  };\n\n  var rotr64_hi$1 = utils.rotr64_hi;\n  var rotr64_lo$1 = utils.rotr64_lo;\n  var shr64_hi$1 = utils.shr64_hi;\n  var shr64_lo$1 = utils.shr64_lo;\n  var sum64$1 = utils.sum64;\n  var sum64_hi$1 = utils.sum64_hi;\n  var sum64_lo$1 = utils.sum64_lo;\n  var sum64_4_hi$1 = utils.sum64_4_hi;\n  var sum64_4_lo$1 = utils.sum64_4_lo;\n  var sum64_5_hi$1 = utils.sum64_5_hi;\n  var sum64_5_lo$1 = utils.sum64_5_lo;\n  var BlockHash$3 = common.BlockHash;\n  var sha512_K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];\n\n  function SHA512() {\n    if (!(this instanceof SHA512)) return new SHA512();\n    BlockHash$3.call(this);\n    this.h = [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179];\n    this.k = sha512_K;\n    this.W = new Array(160);\n  }\n\n  utils.inherits(SHA512, BlockHash$3);\n  var _512 = SHA512;\n  SHA512.blockSize = 1024;\n  SHA512.outSize = 512;\n  SHA512.hmacStrength = 192;\n  SHA512.padLength = 128;\n\n  SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n    var W = this.W; // 32 x 32bit words\n\n    for (var i = 0; i < 32; i++) W[i] = msg[start + i];\n\n    for (; i < W.length; i += 2) {\n      var c0_hi = g1_512_hi(W[i - 4], W[i - 3]); // i - 2\n\n      var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n      var c1_hi = W[i - 14]; // i - 7\n\n      var c1_lo = W[i - 13];\n      var c2_hi = g0_512_hi(W[i - 30], W[i - 29]); // i - 15\n\n      var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n      var c3_hi = W[i - 32]; // i - 16\n\n      var c3_lo = W[i - 31];\n      W[i] = sum64_4_hi$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n      W[i + 1] = sum64_4_lo$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n    }\n  };\n\n  SHA512.prototype._update = function _update(msg, start) {\n    this._prepareBlock(msg, start);\n\n    var W = this.W;\n    var ah = this.h[0];\n    var al = this.h[1];\n    var bh = this.h[2];\n    var bl = this.h[3];\n    var ch = this.h[4];\n    var cl = this.h[5];\n    var dh = this.h[6];\n    var dl = this.h[7];\n    var eh = this.h[8];\n    var el = this.h[9];\n    var fh = this.h[10];\n    var fl = this.h[11];\n    var gh = this.h[12];\n    var gl = this.h[13];\n    var hh = this.h[14];\n    var hl = this.h[15];\n    minimalisticAssert(this.k.length === W.length);\n\n    for (var i = 0; i < W.length; i += 2) {\n      var c0_hi = hh;\n      var c0_lo = hl;\n      var c1_hi = s1_512_hi(eh, el);\n      var c1_lo = s1_512_lo(eh, el);\n      var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n      var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n      var c3_hi = this.k[i];\n      var c3_lo = this.k[i + 1];\n      var c4_hi = W[i];\n      var c4_lo = W[i + 1];\n      var T1_hi = sum64_5_hi$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n      var T1_lo = sum64_5_lo$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n      c0_hi = s0_512_hi(ah, al);\n      c0_lo = s0_512_lo(ah, al);\n      c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n      c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n      var T2_hi = sum64_hi$1(c0_hi, c0_lo, c1_hi, c1_lo);\n      var T2_lo = sum64_lo$1(c0_hi, c0_lo, c1_hi, c1_lo);\n      hh = gh;\n      hl = gl;\n      gh = fh;\n      gl = fl;\n      fh = eh;\n      fl = el;\n      eh = sum64_hi$1(dh, dl, T1_hi, T1_lo);\n      el = sum64_lo$1(dl, dl, T1_hi, T1_lo);\n      dh = ch;\n      dl = cl;\n      ch = bh;\n      cl = bl;\n      bh = ah;\n      bl = al;\n      ah = sum64_hi$1(T1_hi, T1_lo, T2_hi, T2_lo);\n      al = sum64_lo$1(T1_hi, T1_lo, T2_hi, T2_lo);\n    }\n\n    sum64$1(this.h, 0, ah, al);\n    sum64$1(this.h, 2, bh, bl);\n    sum64$1(this.h, 4, ch, cl);\n    sum64$1(this.h, 6, dh, dl);\n    sum64$1(this.h, 8, eh, el);\n    sum64$1(this.h, 10, fh, fl);\n    sum64$1(this.h, 12, gh, gl);\n    sum64$1(this.h, 14, hh, hl);\n  };\n\n  SHA512.prototype._digest = function digest(enc) {\n    if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n  };\n\n  function ch64_hi(xh, xl, yh, yl, zh) {\n    var r = xh & yh ^ ~xh & zh;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function ch64_lo(xh, xl, yh, yl, zh, zl) {\n    var r = xl & yl ^ ~xl & zl;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function maj64_hi(xh, xl, yh, yl, zh) {\n    var r = xh & yh ^ xh & zh ^ yh & zh;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function maj64_lo(xh, xl, yh, yl, zh, zl) {\n    var r = xl & yl ^ xl & zl ^ yl & zl;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function s0_512_hi(xh, xl) {\n    var c0_hi = rotr64_hi$1(xh, xl, 28);\n    var c1_hi = rotr64_hi$1(xl, xh, 2); // 34\n\n    var c2_hi = rotr64_hi$1(xl, xh, 7); // 39\n\n    var r = c0_hi ^ c1_hi ^ c2_hi;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function s0_512_lo(xh, xl) {\n    var c0_lo = rotr64_lo$1(xh, xl, 28);\n    var c1_lo = rotr64_lo$1(xl, xh, 2); // 34\n\n    var c2_lo = rotr64_lo$1(xl, xh, 7); // 39\n\n    var r = c0_lo ^ c1_lo ^ c2_lo;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function s1_512_hi(xh, xl) {\n    var c0_hi = rotr64_hi$1(xh, xl, 14);\n    var c1_hi = rotr64_hi$1(xh, xl, 18);\n    var c2_hi = rotr64_hi$1(xl, xh, 9); // 41\n\n    var r = c0_hi ^ c1_hi ^ c2_hi;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function s1_512_lo(xh, xl) {\n    var c0_lo = rotr64_lo$1(xh, xl, 14);\n    var c1_lo = rotr64_lo$1(xh, xl, 18);\n    var c2_lo = rotr64_lo$1(xl, xh, 9); // 41\n\n    var r = c0_lo ^ c1_lo ^ c2_lo;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function g0_512_hi(xh, xl) {\n    var c0_hi = rotr64_hi$1(xh, xl, 1);\n    var c1_hi = rotr64_hi$1(xh, xl, 8);\n    var c2_hi = shr64_hi$1(xh, xl, 7);\n    var r = c0_hi ^ c1_hi ^ c2_hi;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function g0_512_lo(xh, xl) {\n    var c0_lo = rotr64_lo$1(xh, xl, 1);\n    var c1_lo = rotr64_lo$1(xh, xl, 8);\n    var c2_lo = shr64_lo$1(xh, xl, 7);\n    var r = c0_lo ^ c1_lo ^ c2_lo;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function g1_512_hi(xh, xl) {\n    var c0_hi = rotr64_hi$1(xh, xl, 19);\n    var c1_hi = rotr64_hi$1(xl, xh, 29); // 61\n\n    var c2_hi = shr64_hi$1(xh, xl, 6);\n    var r = c0_hi ^ c1_hi ^ c2_hi;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function g1_512_lo(xh, xl) {\n    var c0_lo = rotr64_lo$1(xh, xl, 19);\n    var c1_lo = rotr64_lo$1(xl, xh, 29); // 61\n\n    var c2_lo = shr64_lo$1(xh, xl, 6);\n    var r = c0_lo ^ c1_lo ^ c2_lo;\n    if (r < 0) r += 0x100000000;\n    return r;\n  }\n\n  function SHA384() {\n    if (!(this instanceof SHA384)) return new SHA384();\n\n    _512.call(this);\n\n    this.h = [0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4];\n  }\n\n  utils.inherits(SHA384, _512);\n  var _384 = SHA384;\n  SHA384.blockSize = 1024;\n  SHA384.outSize = 384;\n  SHA384.hmacStrength = 192;\n  SHA384.padLength = 128;\n\n  SHA384.prototype._digest = function digest(enc) {\n    if (enc === 'hex') return utils.toHex32(this.h.slice(0, 12), 'big');else return utils.split32(this.h.slice(0, 12), 'big');\n  };\n\n  var sha1 = _1;\n  var sha224 = _224;\n  var sha256 = _256;\n  var sha384 = _384;\n  var sha512 = _512;\n  var sha = {\n    sha1: sha1,\n    sha224: sha224,\n    sha256: sha256,\n    sha384: sha384,\n    sha512: sha512\n  };\n  var rotl32$2 = utils.rotl32;\n  var sum32$3 = utils.sum32;\n  var sum32_3$1 = utils.sum32_3;\n  var sum32_4$2 = utils.sum32_4;\n  var BlockHash$4 = common.BlockHash;\n\n  function RIPEMD160() {\n    if (!(this instanceof RIPEMD160)) return new RIPEMD160();\n    BlockHash$4.call(this);\n    this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n    this.endian = 'little';\n  }\n\n  utils.inherits(RIPEMD160, BlockHash$4);\n  var ripemd160 = RIPEMD160;\n  RIPEMD160.blockSize = 512;\n  RIPEMD160.outSize = 160;\n  RIPEMD160.hmacStrength = 192;\n  RIPEMD160.padLength = 64;\n\n  RIPEMD160.prototype._update = function update(msg, start) {\n    var A = this.h[0];\n    var B = this.h[1];\n    var C = this.h[2];\n    var D = this.h[3];\n    var E = this.h[4];\n    var Ah = A;\n    var Bh = B;\n    var Ch = C;\n    var Dh = D;\n    var Eh = E;\n\n    for (var j = 0; j < 80; j++) {\n      var T = sum32$3(rotl32$2(sum32_4$2(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);\n      A = E;\n      E = D;\n      D = rotl32$2(C, 10);\n      C = B;\n      B = T;\n      T = sum32$3(rotl32$2(sum32_4$2(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);\n      Ah = Eh;\n      Eh = Dh;\n      Dh = rotl32$2(Ch, 10);\n      Ch = Bh;\n      Bh = T;\n    }\n\n    T = sum32_3$1(this.h[1], C, Dh);\n    this.h[1] = sum32_3$1(this.h[2], D, Eh);\n    this.h[2] = sum32_3$1(this.h[3], E, Ah);\n    this.h[3] = sum32_3$1(this.h[4], A, Bh);\n    this.h[4] = sum32_3$1(this.h[0], B, Ch);\n    this.h[0] = T;\n  };\n\n  RIPEMD160.prototype._digest = function digest(enc) {\n    if (enc === 'hex') return utils.toHex32(this.h, 'little');else return utils.split32(this.h, 'little');\n  };\n\n  function f(j, x, y, z) {\n    if (j <= 15) return x ^ y ^ z;else if (j <= 31) return x & y | ~x & z;else if (j <= 47) return (x | ~y) ^ z;else if (j <= 63) return x & z | y & ~z;else return x ^ (y | ~z);\n  }\n\n  function K(j) {\n    if (j <= 15) return 0x00000000;else if (j <= 31) return 0x5a827999;else if (j <= 47) return 0x6ed9eba1;else if (j <= 63) return 0x8f1bbcdc;else return 0xa953fd4e;\n  }\n\n  function Kh(j) {\n    if (j <= 15) return 0x50a28be6;else if (j <= 31) return 0x5c4dd124;else if (j <= 47) return 0x6d703ef3;else if (j <= 63) return 0x7a6d76e9;else return 0x00000000;\n  }\n\n  var r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\n  var rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\n  var s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\n  var sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];\n  var ripemd = {\n    ripemd160: ripemd160\n  };\n\n  function Hmac(hash, key, enc) {\n    if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);\n    this.Hash = hash;\n    this.blockSize = hash.blockSize / 8;\n    this.outSize = hash.outSize / 8;\n    this.inner = null;\n    this.outer = null;\n\n    this._init(utils.toArray(key, enc));\n  }\n\n  var hmac = Hmac;\n\n  Hmac.prototype._init = function init(key) {\n    // Shorten key, if needed\n    if (key.length > this.blockSize) key = new this.Hash().update(key).digest();\n    minimalisticAssert(key.length <= this.blockSize); // Add padding to key\n\n    for (var i = key.length; i < this.blockSize; i++) key.push(0);\n\n    for (i = 0; i < key.length; i++) key[i] ^= 0x36;\n\n    this.inner = new this.Hash().update(key); // 0x36 ^ 0x5c = 0x6a\n\n    for (i = 0; i < key.length; i++) key[i] ^= 0x6a;\n\n    this.outer = new this.Hash().update(key);\n  };\n\n  Hmac.prototype.update = function update(msg, enc) {\n    this.inner.update(msg, enc);\n    return this;\n  };\n\n  Hmac.prototype.digest = function digest(enc) {\n    this.outer.update(this.inner.digest());\n    return this.outer.digest(enc);\n  };\n\n  var hash_1 = createCommonjsModule(function (module, exports) {\n    var hash = exports;\n    hash.utils = utils;\n    hash.common = common;\n    hash.sha = sha;\n    hash.ripemd = ripemd;\n    hash.hmac = hmac; // Proxy hash functions to the main object\n\n    hash.sha1 = hash.sha.sha1;\n    hash.sha256 = hash.sha.sha256;\n    hash.sha224 = hash.sha.sha224;\n    hash.sha384 = hash.sha.sha384;\n    hash.sha512 = hash.sha.sha512;\n    hash.ripemd160 = hash.ripemd.ripemd160;\n  }); //  Copyright (C) 2018 Zilliqa\n\n  /**\r\n   * Transaction\r\n   *\r\n   * Transaction is a functor. Its purpose is to encode the possible states a\r\n   * Transaction can be in:  Confirmed, Rejected, Pending, or Initialised (i.e., not broadcasted).\r\n   */\n\n  var Transaction =\n  /** @class */\n  function () {\n    function Transaction(params, provider, status, toDS, enableSecureToAddress) {\n      if (status === void 0) {\n        status = exports.TxStatus.Initialised;\n      }\n\n      if (toDS === void 0) {\n        toDS = false;\n      }\n\n      if (enableSecureToAddress === void 0) {\n        enableSecureToAddress = true;\n      }\n\n      this.code = '';\n      this.data = ''; // private members\n\n      this.version = params.version;\n      this.toAddr = enableSecureToAddress ? zcrypto.normaliseAddress(params.toAddr) : zcrypto.toChecksumAddress(params.toAddr);\n      this.nonce = params.nonce;\n      this.pubKey = params.pubKey;\n      this.amount = params.amount;\n      this.code = params.code || '';\n      this.data = params.data || '';\n      this.signature = params.signature;\n      this.gasPrice = params.gasPrice;\n      this.gasLimit = params.gasLimit;\n      this.receipt = params.receipt; // public members\n\n      this.provider = provider;\n      this.status = status;\n      this.toDS = toDS;\n      this.blockConfirmation = 0;\n      this.eventEmitter = new core.EventEmitter();\n    }\n    /**\r\n     * confirm\r\n     *\r\n     * constructs an already-confirmed transaction.\r\n     *\r\n     * @static\r\n     * @param {BaseTx} params\r\n     */\n\n\n    Transaction.confirm = function (params, provider) {\n      return new Transaction(params, provider, exports.TxStatus.Confirmed);\n    };\n    /**\r\n     * reject\r\n     *\r\n     * constructs an already-rejected transaction.\r\n     *\r\n     * @static\r\n     * @param {BaseTx} params\r\n     */\n\n\n    Transaction.reject = function (params, provider) {\n      return new Transaction(params, provider, exports.TxStatus.Rejected);\n    };\n\n    Object.defineProperty(Transaction.prototype, \"hash\", {\n      /**\r\n       * to get hash or transaction id of this transaction\r\n       * this can be identical returned by zilliqa network while calling CreateTransaction\r\n       */\n      get: function () {\n        var payload = this.bytes.toString('hex');\n        return hash_1.sha256().update(payload, 'hex').digest('hex');\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(Transaction.prototype, \"bytes\", {\n      get: function () {\n        return encodeTransactionProto(this.txParams);\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(Transaction.prototype, \"senderAddress\", {\n      get: function () {\n        if (!this.pubKey) {\n          return '0'.repeat(40);\n        }\n\n        return zcrypto.getAddressFromPublicKey(this.pubKey);\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(Transaction.prototype, \"txParams\", {\n      get: function () {\n        return {\n          version: this.version,\n          toAddr: zcrypto.normaliseAddress(this.toAddr),\n          nonce: this.nonce,\n          pubKey: this.pubKey,\n          amount: this.amount,\n          gasPrice: this.gasPrice,\n          gasLimit: this.gasLimit,\n          code: this.code,\n          data: this.data,\n          signature: this.signature,\n          receipt: this.receipt\n        };\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(Transaction.prototype, \"payload\", {\n      get: function () {\n        return {\n          version: this.version,\n          toAddr: this.toAddr,\n          nonce: this.nonce,\n          pubKey: this.pubKey,\n          amount: this.amount.toString(),\n          gasPrice: this.gasPrice.toString(),\n          gasLimit: this.gasLimit.toString(),\n          code: this.code,\n          data: this.data,\n          signature: this.signature,\n          receipt: this.receipt\n        };\n      },\n      enumerable: false,\n      configurable: true\n    });\n    /**\r\n     * isPending\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n    Transaction.prototype.isPending = function () {\n      return this.status === exports.TxStatus.Pending;\n    };\n    /**\r\n     * isInitialised\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n\n    Transaction.prototype.isInitialised = function () {\n      return this.status === exports.TxStatus.Initialised;\n    };\n\n    Transaction.prototype.getReceipt = function () {\n      return this.receipt;\n    };\n    /**\r\n     * isConfirmed\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n\n    Transaction.prototype.isConfirmed = function () {\n      return this.status === exports.TxStatus.Confirmed;\n    };\n    /**\r\n     * isRejected\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n\n    Transaction.prototype.isRejected = function () {\n      return this.status === exports.TxStatus.Rejected;\n    };\n    /**\r\n     * setProvider\r\n     *\r\n     * Sets the provider on this instance.\r\n     *\r\n     * @param {Provider} provider\r\n     */\n\n\n    Transaction.prototype.setProvider = function (provider) {\n      this.provider = provider;\n    };\n    /**\r\n     * setStatus\r\n     *\r\n     * Escape hatch to imperatively set the state of the transaction.\r\n     *\r\n     * @param {TxStatus} status\r\n     * @returns {undefined}\r\n     */\n\n\n    Transaction.prototype.setStatus = function (status) {\n      this.status = status;\n      return this;\n    };\n\n    Transaction.prototype.observed = function () {\n      return this.eventEmitter;\n    };\n    /**\r\n     * blockConfirm\r\n     *\r\n     * Use `RPCMethod.GetLatestBlock` to get latest blockNumber\r\n     * Use interval to get the latestBlockNumber\r\n     * After BlockNumber change, then we use `RPCMethod.GetTransaction` to get the receipt\r\n     *\r\n     * @param {string} txHash\r\n     * @param {number} maxblockCount\r\n     * @param {number} interval interval in milliseconds\r\n     * @returns {Promise<Transaction>}\r\n     */\n\n\n    Transaction.prototype.blockConfirm = function (txHash, maxblockCount, interval) {\n      if (maxblockCount === void 0) {\n        maxblockCount = 4;\n      }\n\n      if (interval === void 0) {\n        interval = 1000;\n      }\n\n      return tslib.__awaiter(this, void 0, void 0, function () {\n        var blockStart, blockChecked, attempt, blockLatest, blockNext, err_1, blockFailed, errorMessage;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this.status = exports.TxStatus.Pending;\n              return [4\n              /*yield*/\n              , this.getBlockNumber()];\n\n            case 1:\n              blockStart = _a.sent();\n              blockChecked = blockStart;\n              attempt = 0;\n              _a.label = 2;\n\n            case 2:\n              if (!(attempt < maxblockCount)) return [3\n              /*break*/\n              , 12];\n              _a.label = 3;\n\n            case 3:\n              _a.trys.push([3, 8,, 9]);\n\n              return [4\n              /*yield*/\n              , this.getBlockNumber()];\n\n            case 4:\n              blockLatest = _a.sent();\n              blockNext = blockChecked.add(new util.BN(attempt === 0 ? attempt : 1));\n              if (!blockLatest.gte(blockNext)) return [3\n              /*break*/\n              , 6];\n              blockChecked = blockLatest;\n              this.emit(exports.TxEventName.Track, {\n                txHash: txHash,\n                attempt: attempt,\n                currentBlock: blockChecked.toString()\n              });\n              return [4\n              /*yield*/\n              , this.trackTx(txHash)];\n\n            case 5:\n              if (_a.sent()) {\n                this.blockConfirmation = blockLatest.sub(blockStart).toNumber();\n                return [2\n                /*return*/\n                , this];\n              }\n\n              return [3\n              /*break*/\n              , 7];\n\n            case 6:\n              attempt = attempt - 1 >= 0 ? attempt - 1 : 0;\n              _a.label = 7;\n\n            case 7:\n              return [3\n              /*break*/\n              , 9];\n\n            case 8:\n              err_1 = _a.sent();\n              this.status = exports.TxStatus.Rejected;\n              throw err_1;\n\n            case 9:\n              if (!(attempt + 1 < maxblockCount)) return [3\n              /*break*/\n              , 11];\n              return [4\n              /*yield*/\n              , sleep(interval)];\n\n            case 10:\n              _a.sent();\n\n              _a.label = 11;\n\n            case 11:\n              attempt += 1;\n              return [3\n              /*break*/\n              , 2];\n\n            case 12:\n              return [4\n              /*yield*/\n              , this.getBlockNumber()];\n\n            case 13:\n              blockFailed = _a.sent();\n              this.blockConfirmation = blockFailed.sub(blockStart).toNumber();\n              this.status = exports.TxStatus.Rejected;\n              errorMessage = \"The transaction is still not confirmed after \" + maxblockCount + \" blocks.\";\n              throw new Error(errorMessage);\n          }\n        });\n      });\n    };\n    /**\r\n     * confirmReceipt\r\n     *\r\n     * Similar to the Promise API. This sets the Transaction instance to a state\r\n     * of pending. Calling this function kicks off a passive loop that polls the\r\n     * lookup node for confirmation on the txHash.\r\n     *\r\n     * The polls are performed with a linear backoff:\r\n     *\r\n     * `const delay = interval * attempt`\r\n     *\r\n     * This is a low-level method that you should generally not have to use\r\n     * directly.\r\n     *\r\n     * @param {string} txHash\r\n     * @param {number} maxAttempts\r\n     * @param {number} initial interval in milliseconds\r\n     * @returns {Promise<Transaction>}\r\n     */\n\n\n    Transaction.prototype.confirm = function (txHash, maxAttempts, interval) {\n      if (maxAttempts === void 0) {\n        maxAttempts = core.GET_TX_ATTEMPTS;\n      }\n\n      if (interval === void 0) {\n        interval = 1000;\n      }\n\n      return tslib.__awaiter(this, void 0, void 0, function () {\n        var attempt, err_2, errorMessage;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this.status = exports.TxStatus.Pending;\n              attempt = 0;\n              _a.label = 1;\n\n            case 1:\n              if (!(attempt < maxAttempts)) return [3\n              /*break*/\n              , 8];\n              this.emit(exports.TxEventName.Track, {\n                txHash: txHash,\n                attempt: attempt\n              });\n              _a.label = 2;\n\n            case 2:\n              _a.trys.push([2, 4,, 5]);\n\n              return [4\n              /*yield*/\n              , this.trackTx(txHash)];\n\n            case 3:\n              if (_a.sent()) {\n                return [2\n                /*return*/\n                , this];\n              }\n\n              return [3\n              /*break*/\n              , 5];\n\n            case 4:\n              err_2 = _a.sent();\n              this.status = exports.TxStatus.Rejected;\n              throw err_2;\n\n            case 5:\n              if (!(attempt + 1 < maxAttempts)) return [3\n              /*break*/\n              , 7];\n              return [4\n              /*yield*/\n              , sleep(interval * attempt)];\n\n            case 6:\n              _a.sent();\n\n              _a.label = 7;\n\n            case 7:\n              attempt++;\n              return [3\n              /*break*/\n              , 1];\n\n            case 8:\n              this.status = exports.TxStatus.Rejected;\n              errorMessage = \"The transaction is still not confirmed after \" + maxAttempts + \" attempts.\";\n              throw new Error(errorMessage);\n          }\n        });\n      });\n    };\n    /**\r\n     * map\r\n     *\r\n     * maps over the transaction, allowing for manipulation.\r\n     *\r\n     * @param {(prev: TxParams) => TxParams} fn - mapper\r\n     * @returns {Transaction}\r\n     */\n\n\n    Transaction.prototype.map = function (fn) {\n      var newParams = fn(this.txParams);\n      this.setParams(newParams);\n      return this;\n    };\n\n    Transaction.prototype.setParams = function (params) {\n      this.version = params.version;\n      this.toAddr = zcrypto.normaliseAddress(params.toAddr);\n      this.nonce = params.nonce;\n      this.pubKey = params.pubKey;\n      this.amount = params.amount;\n      this.code = params.code || '';\n      this.data = params.data || '';\n      this.signature = params.signature;\n      this.gasPrice = params.gasPrice;\n      this.gasLimit = params.gasLimit;\n      this.receipt = params.receipt;\n    };\n\n    Transaction.prototype.trackTx = function (txHash) {\n      return tslib.__awaiter(this, void 0, void 0, function () {\n        var res;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.provider.send(core.RPCMethod.GetTransaction, txHash)];\n\n            case 1:\n              res = _a.sent();\n\n              if (res.error) {\n                this.emit(exports.TxEventName.Error, res.error);\n                return [2\n                /*return*/\n                , false];\n              }\n\n              this.id = res.result.ID;\n              this.receipt = tslib.__assign(tslib.__assign({}, res.result.receipt), {\n                cumulative_gas: parseInt(res.result.receipt.cumulative_gas, 10)\n              });\n              this.emit(exports.TxEventName.Receipt, this.receipt);\n              this.status = this.receipt && this.receipt.success ? exports.TxStatus.Confirmed : exports.TxStatus.Rejected;\n              return [2\n              /*return*/\n              , true];\n          }\n        });\n      });\n    };\n\n    Transaction.prototype.getBlockNumber = function () {\n      return tslib.__awaiter(this, void 0, void 0, function () {\n        var res, error_1;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 2,, 3]);\n\n              return [4\n              /*yield*/\n              , this.provider.send(core.RPCMethod.GetLatestTxBlock)];\n\n            case 1:\n              res = _a.sent();\n\n              if (res.error === undefined && res.result.header.BlockNum) {\n                // if blockNumber is too high, we use BN to be safer\n                return [2\n                /*return*/\n                , new util.BN(res.result.header.BlockNum)];\n              } else {\n                throw new Error('Can not get latest BlockNumber');\n              }\n\n              return [3\n              /*break*/\n              , 3];\n\n            case 2:\n              error_1 = _a.sent();\n              throw error_1;\n\n            case 3:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    Transaction.prototype.emit = function (event, txEvent) {\n      this.eventEmitter.emit(event, tslib.__assign(tslib.__assign({}, txEvent), {\n        event: event\n      }));\n    };\n\n    return Transaction;\n  }(); //  Copyright (C) 2018 Zilliqa\n\n\n  var TransactionFactory =\n  /** @class */\n  function () {\n    function TransactionFactory(provider, signer) {\n      this.provider = provider;\n      this.provider.middleware.request.use(formatOutgoingTx, core.RPCMethod.CreateTransaction);\n      this.signer = signer;\n    }\n\n    TransactionFactory.prototype.new = function (txParams, toDs, enableSecureAddress) {\n      if (toDs === void 0) {\n        toDs = false;\n      }\n\n      if (enableSecureAddress === void 0) {\n        enableSecureAddress = true;\n      }\n\n      return new Transaction(txParams, this.provider, exports.TxStatus.Initialised, toDs, enableSecureAddress);\n    };\n    /**\r\n     * This constructor could help you to check if there is a default account to be used, and further more, if it has\r\n     * sufficient fund to do the transfer.\r\n     * @param txParams\r\n     */\n\n\n    TransactionFactory.prototype.payment = function (txParams) {\n      return tslib.__awaiter(this, void 0, void 0, function () {\n        var defaultAccount, addr, response, fund;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              defaultAccount = this.signer.defaultAccount;\n              if (!(defaultAccount !== undefined)) return [3\n              /*break*/\n              , 2];\n              addr = defaultAccount.address;\n              return [4\n              /*yield*/\n              , this.provider.send(core.RPCMethod.GetBalance, addr.replace('0x', '').toLowerCase())];\n\n            case 1:\n              response = _a.sent();\n\n              if (response.error) {\n                throw response.error;\n              }\n\n              fund = new util.BN(response.result.balance);\n\n              if (txParams.amount.cmp(fund) === 1) {\n                throw new Error('No sufficient fund');\n              }\n\n              return [3\n              /*break*/\n              , 3];\n\n            case 2:\n              throw new Error('No default wallet');\n\n            case 3:\n              return [2\n              /*return*/\n              , this.new(txParams, true)];\n          }\n        });\n      });\n    };\n\n    return TransactionFactory;\n  }(); //  Copyright (C) 2018 Zilliqa\n\n\n  exports.util = util$1;\n  exports.Account = Account;\n  exports.Wallet = Wallet;\n  exports.Transaction = Transaction;\n  exports.TransactionFactory = TransactionFactory;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"mappings":"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","names":["encodeTransactionProto","tx","msg","version","nonce","toaddr","bytes","hexToByteArray","toAddr","replace","toLowerCase","senderpubkey","ZilliqaMessage","ByteArray","create","data","pubKey","amount","Uint8Array","from","toArrayLike","Buffer","undefined","gasprice","gasPrice","gaslimit","gasLimit","code","length","__spreadArray","map","c","charCodeAt","serialised","ProtoTransactionCoreInfo","encode","finish","isTxReceipt","x","validation","isPlainObject","matchesObject","isTxParams","obj","validator","required","isNumber","isAddress","isBN","isLong","isString","receipt","signature","isSignature","formatOutgoingTx","req","Array","isArray","payload","method","RPCMethod","CreateTransaction","params","payloads","__values","_c","txPayload","txConfig","push","tslib","toString","ret","sleep","ms","Promise","resolve","setTimeout","privateKey","normalizePrivateKey","publicKey","zcrypto.getPubKeyFromPrivateKey","address","zcrypto.getAddressFromPublicKey","bech32Address","zcrypto.toBech32Address","Account","file","passphrase","keystore","JSON","parse","zcrypto.decryptPrivateKey","_a","Error","kdf","zcrypto.encryptPrivateKey","zcrypto.sign","zcrypto.normalizePrivateKey","__extends","provider","accounts","_super","_this","reduce","acc","account","defaultAccount","Wallet","zcrypto.schnorr","generatePrivateKey","newAccount","fromFile","_b","phrase","index","isValidMnemonic","seed","bip39","mnemonicToSeed","hdKey","hdkey","fromMasterSeed","childKey","derive","addByPrivateKey","toFile","toRemove","rest","offlineSign","txParams","senderAddress","signWith","txList","batchResults","signer_1","send","GetBalance","balance","result","nextNonce","currentNonce","withNonceTx","txObj","this_1","sign","signedTx","err_1","signer","BN","debt","mul","add","currNonce","bal","gt","withNonce_1","signTransaction","withPublicKey","err_2","trim","split","validateMnemonic","Signer","TxStatus","TxEventName","assert","val","equal","assertEqual","l","r","Object","module","inherits","ctor","superCtor","super_","prototype","constructor","value","enumerable","writable","configurable","TempCtor","isSurrogatePair","i","toArray","enc","slice","res","p","parseInt","toHex","zero2","htonl","w","toHex32","endian","zero8","word","join32","start","end","len","k","split32","m","rotr32","b","rotl32","sum32","a","sum32_3","sum32_4","d","sum32_5","e","sum64","buf","pos","ah","al","bh","bl","lo","hi","sum64_hi","sum64_lo","sum64_4_hi","ch","cl","dh","dl","carry","sum64_4_lo","sum64_5_hi","eh","el","sum64_5_lo","rotr64_hi","num","rotr64_lo","shr64_hi","shr64_lo","BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","update","utils","concat","_update","digest","_pad","_digest","pad","t","ft_1","s","y","z","ch32","p32","maj32","s0_256","s1_256","g0_256","g1_256","shaCommon","common","sha1_K","SHA1","call","h","W","sha256_K","SHA256","f","g","T1","T2","SHA224","sha512_K","SHA512","_prepareBlock","c0_hi","g1_512_hi","c0_lo","g1_512_lo","c1_hi","c1_lo","c2_hi","g0_512_hi","c2_lo","g0_512_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","s1_512_hi","s1_512_lo","ch64_hi","ch64_lo","c4_hi","c4_lo","T1_hi","T1_lo","s0_512_hi","s0_512_lo","maj64_hi","maj64_lo","T2_hi","T2_lo","xh","xl","yh","yl","zh","zl","SHA384","require$$0","require$$1","require$$2","require$$3","require$$4","RIPEMD160","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","j","T","K","rh","Kh","sh","Hmac","hash","key","Hash","inner","outer","_init","init","exports","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","status","toDS","enableSecureToAddress","Initialised","normaliseAddress","toChecksumAddress","blockConfirmation","eventEmitter","EventEmitter","Transaction","Confirmed","Rejected","hashjs","repeat","getAddressFromPublicKey","Pending","txHash","maxblockCount","interval","getBlockNumber","blockStart","blockChecked","attempt","blockLatest","blockNext","gte","emit","Track","currentBlock","trackTx","sub","toNumber","blockFailed","errorMessage","maxAttempts","fn","newParams","setParams","GetTransaction","error","id","ID","cumulative_gas","Receipt","success","GetLatestTxBlock","header","BlockNum","error_1","event","txEvent","middleware","request","use","TransactionFactory","toDs","enableSecureAddress","addr","response","fund","cmp","new"],"sources":["/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/account/src/util.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/account/src/account.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/account/src/wallet.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/account/src/types.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/minimalistic-assert/index.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/inherits/inherits_browser.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/hash.js/lib/hash/utils.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/hash.js/lib/hash/common.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/hash.js/lib/hash/sha/common.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/hash.js/lib/hash/sha/1.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/hash.js/lib/hash/sha/256.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/hash.js/lib/hash/sha/224.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/hash.js/lib/hash/sha/512.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/hash.js/lib/hash/sha/384.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/hash.js/lib/hash/sha.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/hash.js/lib/hash/ripemd.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/hash.js/lib/hash/hmac.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/hash.js/lib/hash.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/account/src/transaction.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/account/src/transactionFactory.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/account/src/index.ts"],"sourcesContent":["//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { ReqMiddlewareFn, RPCMethod } from '@zilliqa-js/core';\nimport { bytes, validation } from '@zilliqa-js/util';\nimport { ZilliqaMessage } from '@zilliqa-js/proto';\nimport { TxReceipt, TxParams } from './types';\n\nexport const encodeTransactionProto = (tx: TxParams): Buffer => {\n  const msg = {\n    version: tx.version,\n    nonce: tx.nonce || 0,\n    // core protocol Schnorr expects lowercase, non-prefixed address.\n    toaddr: bytes.hexToByteArray(tx.toAddr.replace('0x', '').toLowerCase()),\n    senderpubkey: ZilliqaMessage.ByteArray.create({\n      data: bytes.hexToByteArray(tx.pubKey || '00'),\n    }),\n    amount: ZilliqaMessage.ByteArray.create({\n      data: Uint8Array.from(tx.amount.toArrayLike(Buffer, undefined, 16)),\n    }),\n    gasprice: ZilliqaMessage.ByteArray.create({\n      data: Uint8Array.from(tx.gasPrice.toArrayLike(Buffer, undefined, 16)),\n    }),\n    gaslimit: tx.gasLimit,\n    code:\n      tx.code && tx.code.length\n        ? Uint8Array.from([...tx.code].map((c) => <number>c.charCodeAt(0)))\n        : null,\n    data:\n      tx.data && tx.data.length\n        ? Uint8Array.from([...tx.data].map((c) => <number>c.charCodeAt(0)))\n        : null,\n  };\n\n  const serialised = ZilliqaMessage.ProtoTransactionCoreInfo.create(msg);\n\n  return Buffer.from(\n    ZilliqaMessage.ProtoTransactionCoreInfo.encode(serialised).finish(),\n  );\n};\n\nexport const isTxReceipt = (x: unknown): x is TxReceipt => {\n  return validation.isPlainObject(x) && validation.matchesObject(x, {});\n};\n\nexport const isTxParams = (obj: unknown): obj is TxParams => {\n  const validator = {\n    version: [validation.required(validation.isNumber)],\n    toAddr: [validation.required(validation.isAddress)],\n    amount: [validation.required(validation.isBN)],\n    gasPrice: [validation.required(validation.isBN)],\n    gasLimit: [validation.required(validation.isLong)],\n    code: [validation.isString],\n    data: [validation.isString],\n    receipt: [isTxReceipt],\n    nonce: [validation.required(validation.isNumber)],\n    signature: [validation.required(validation.isSignature)],\n  };\n\n  return validation.matchesObject(obj, validator);\n};\n\nexport const formatOutgoingTx: ReqMiddlewareFn<[TxParams]> = (req) => {\n  // if batch create transaction, payload is array\n  if (\n    Array.isArray(req.payload) &&\n    req.payload[0].method === RPCMethod.CreateTransaction &&\n    isTxParams(req.payload[0].params[0])\n  ) {\n    // loop thru batch payloads and format the params\n    const payloads = [];\n    for (const txPayload of req.payload) {\n      const txConfig = txPayload.params[0];\n      payloads.push({\n        ...txPayload,\n        params: [\n          {\n            ...txConfig,\n            amount: txConfig.amount.toString(),\n            gasLimit: txConfig.gasLimit.toString(),\n            gasPrice: txConfig.gasPrice.toString(),\n          },\n        ],\n      });\n    }\n\n    const ret = {\n      ...req,\n      payload: payloads,\n    };\n\n    return ret;\n  }\n\n  // non-batch create transactions\n  if (\n    !Array.isArray(req.payload) &&\n    req.payload.method === RPCMethod.CreateTransaction &&\n    isTxParams(req.payload.params[0])\n  ) {\n    const txConfig = req.payload.params[0];\n\n    const ret = {\n      ...req,\n      payload: {\n        ...req.payload,\n        params: [\n          {\n            ...txConfig,\n            amount: txConfig.amount.toString(),\n            gasLimit: txConfig.gasLimit.toString(),\n            gasPrice: txConfig.gasPrice.toString(),\n          },\n        ],\n      },\n    };\n\n    return ret;\n  }\n\n  return req;\n};\n\nexport async function sleep(ms: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(undefined), ms);\n  });\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport * as zcrypto from '@zilliqa-js/crypto';\n\nexport class Account {\n  /**\n   * fromFile\n   *\n   * Takes a JSON-encoded keystore and passphrase, returning a fully\n   * instantiated Account instance.\n   *\n   * @param {string} file\n   * @param {string} passphrase\n   * @returns {Promise<Account>}\n   */\n  static async fromFile(file: string, passphrase: string): Promise<Account> {\n    try {\n      const keystore = JSON.parse(file);\n      const privateKey = await zcrypto.decryptPrivateKey(passphrase, keystore);\n\n      return new Account(privateKey);\n    } catch (err) {\n      throw new Error(`Could not decrypt keystore file.`);\n    }\n  }\n\n  privateKey: string;\n  publicKey: string;\n  address: string;\n  bech32Address: string;\n\n  constructor(privateKey: string) {\n    this.privateKey = this.normalizePrivateKey(privateKey);\n    this.publicKey = zcrypto.getPubKeyFromPrivateKey(this.privateKey);\n    this.address = zcrypto.getAddressFromPublicKey(this.publicKey);\n    this.bech32Address = zcrypto.toBech32Address(this.address);\n  }\n\n  /**\n   * toFile\n   *\n   * @param {string} passphrase\n   * @param {kdf} 'pbkdf2' | 'scrypt'\n   * @returns {Promise<string>}\n   */\n  async toFile(\n    passphrase: string,\n    kdf: 'pbkdf2' | 'scrypt' = 'scrypt',\n  ): Promise<string> {\n    if (!passphrase || !passphrase.length) {\n      throw new Error('Passphrase cannot have a length of 0');\n    }\n\n    const keystore = await zcrypto.encryptPrivateKey(\n      kdf,\n      this.privateKey,\n      passphrase,\n    );\n\n    return keystore;\n  }\n\n  /**\n   * signTransaction\n   *\n   * @param {Buffer} bytes - the data to be signed\n   *\n   * @returns {string} - the hex encoded signature. it is a concatenation of\n   * the r and s values in hex, each padded to a length of 64.\n   */\n  signTransaction(bytes: Buffer) {\n    return zcrypto.sign(bytes, this.privateKey, this.publicKey);\n  }\n\n  private normalizePrivateKey(privateKey: string) {\n    return zcrypto.normalizePrivateKey(privateKey);\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport bip39 from 'bip39';\nimport hdkey from 'hdkey';\nimport { Signer, Provider, RPCMethod } from '@zilliqa-js/core';\nimport * as zcrypto from '@zilliqa-js/crypto';\n\nimport { Account } from './account';\nimport { Transaction } from './transaction';\nimport { BN } from '@zilliqa-js/util';\n\nexport class Wallet extends Signer {\n  accounts: { [address: string]: Account } = {};\n  defaultAccount?: Account;\n  provider: Provider;\n\n  /**\n   * constructor\n   *\n   * Takes an array of Account objects and instantiates a Wallet instance.\n   *\n   * @param {Account[]} accounts\n   */\n  constructor(provider: Provider, accounts: Account[] = []) {\n    super();\n    if (accounts.length) {\n      this.accounts = accounts.reduce((acc, account) => {\n        return { ...acc, [account.address]: account };\n      }, {} as any);\n    }\n\n    this.provider = provider;\n    this.defaultAccount = accounts[0];\n  }\n\n  /**\n   * create\n   *\n   * Creates a new keypair with a randomly-generated private key. The new\n   * account is accessible by address.\n   *\n   * @returns {string} - address of the new account\n   */\n  create(): string {\n    const privateKey = zcrypto.schnorr.generatePrivateKey();\n    const newAccount = new Account(privateKey);\n\n    this.accounts = { ...this.accounts, [newAccount.address]: newAccount };\n\n    if (!this.defaultAccount) {\n      this.defaultAccount = newAccount;\n    }\n\n    return newAccount.address;\n  }\n\n  /**\n   * addByPrivateKey\n   *\n   * Adds an account to the wallet by private key.\n   *\n   * @param {string} privateKey - hex-encoded private key\n   * @returns {string} - the corresponing address, computer from the private\n   * key.\n   */\n  addByPrivateKey(privateKey: string): string {\n    const newAccount = new Account(privateKey);\n    this.accounts = { ...this.accounts, [newAccount.address]: newAccount };\n\n    if (!this.defaultAccount) {\n      this.defaultAccount = newAccount;\n    }\n\n    return newAccount.address;\n  }\n\n  /**\n   * addByKeystore\n   *\n   * Adds an account by keystore. This method is asynchronous and returns\n   * a Promise<string>, in order not to block on the underlying decryption\n   * operation.\n   *\n   * @param {string} keystore\n   * @param {string} passphrase\n   * @returns {Promise<string>}\n   */\n  async addByKeystore(keystore: string, passphrase: string): Promise<string> {\n    const newAccount = await Account.fromFile(keystore, passphrase);\n    this.accounts = { ...this.accounts, [newAccount.address]: newAccount };\n\n    if (!this.defaultAccount) {\n      this.defaultAccount = newAccount;\n    }\n\n    return newAccount.address;\n  }\n\n  /**\n   * addByMnemonic\n   *\n   * Adds an `Account` by use of a mnemonic as specified in BIP-32 and BIP-39\n   *\n   * @param {string} phrase - 12-word mnemonic phrase\n   * @param {number} index=0 - the number of the child key to add\n   * @returns {string} - the corresponding address\n   */\n  addByMnemonic(phrase: string, index: number = 0): string {\n    if (!this.isValidMnemonic(phrase)) {\n      throw new Error(`Invalid mnemonic phrase: ${phrase}`);\n    }\n    const seed = bip39.mnemonicToSeed(phrase);\n    const hdKey = hdkey.fromMasterSeed(seed);\n    const childKey = hdKey.derive(`m/44'/313'/0'/0/${index}`);\n    const privateKey = childKey.privateKey.toString('hex');\n    return this.addByPrivateKey(privateKey);\n  }\n\n  /**\n   * addByMnemonicLedger\n   *\n   * Adds an `Account` by use of a mnemonic as specified in BIP-32 and BIP-39\n   * The key derivation path used in Ledger is different from that of\n   * addByMnemonic.\n   *\n   * @param {string} phrase - 12-word mnemonic phrase\n   * @param {number} index=0 - the number of the child key to add\n   * @returns {string} - the corresponding address\n   */\n  addByMnemonicLedger(phrase: string, index: number = 0): string {\n    if (!this.isValidMnemonic(phrase)) {\n      throw new Error(`Invalid mnemonic phrase: ${phrase}`);\n    }\n    const seed = bip39.mnemonicToSeed(phrase);\n    const hdKey = hdkey.fromMasterSeed(seed);\n    const childKey = hdKey.derive(`m/44'/313'/${index}'/0'/0'`);\n    const privateKey = childKey.privateKey.toString('hex');\n    return this.addByPrivateKey(privateKey);\n  }\n\n  /**\n   * export\n   *\n   * Exports the specified account as a keystore file.\n   *\n   * @param {string} address\n   * @param {string} passphrase\n   * @param {KDF} kdf='scrypt'\n   * @returns {Promise<string>}\n   */\n  export(\n    address: string,\n    passphrase: string,\n    kdf: zcrypto.KDF = 'scrypt',\n  ): Promise<string> {\n    if (!this.accounts[address]) {\n      throw new Error(`No account with address ${address} exists`);\n    }\n\n    return this.accounts[address].toFile(passphrase, kdf);\n  }\n\n  /**\n   * remove\n   *\n   * Removes an account from the wallet and returns boolean to indicate\n   * failure or success.\n   *\n   * @param {string} address\n   * @returns {boolean}\n   */\n  remove(address: string): boolean {\n    if (this.accounts[address]) {\n      const { [address]: toRemove, ...rest } = this.accounts;\n\n      this.accounts = rest;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * setDefault\n   *\n   * Sets the default account of the wallet.\n   *\n   * @param {string} address\n   */\n  setDefault(address: string) {\n    this.defaultAccount = this.accounts[address];\n  }\n\n  /**\n   * sign\n   *\n   * signs an unsigned transaction with the default account.\n   *\n   * @param {Transaction} tx\n   * @param {boolean} offlineSign\n   * @returns {Transaction}\n   */\n  sign(tx: Transaction, offlineSign?: boolean): Promise<Transaction> {\n    if (tx.txParams && tx.txParams.pubKey) {\n      // attempt to find the address\n      const senderAddress = zcrypto.getAddressFromPublicKey(tx.txParams.pubKey);\n\n      if (!this.accounts[senderAddress]) {\n        throw new Error(\n          `Could not sign the transaction with ${senderAddress} as it does not exist`,\n        );\n      }\n\n      return this.signWith(tx, senderAddress, offlineSign);\n    }\n\n    if (!this.defaultAccount) {\n      throw new Error('This wallet has no default account.');\n    }\n\n    return this.signWith(tx, this.defaultAccount.address, offlineSign);\n  }\n\n  async signBatch(txList: Transaction[]): Promise<Transaction[]> {\n    const batchResults = [];\n    if (!this.defaultAccount) {\n      throw new Error('This wallet has no default account.');\n    }\n\n    try {\n      // nonce is assumed to come from default account\n      const signer = this.accounts[this.defaultAccount.address];\n      const balance = await this.provider.send(\n        RPCMethod.GetBalance,\n        signer.address.replace('0x', '').toLowerCase(),\n      );\n\n      if (balance.result === undefined) {\n        throw new Error('Could not get balance');\n      }\n\n      if (typeof balance.result.nonce !== 'number') {\n        throw new Error('Could not get nonce');\n      }\n\n      const nextNonce = balance.result.nonce + 1;\n\n      for (let index = 0; index < txList.length; index++) {\n        // increment nonce for each new transaction\n        const currentNonce = index + nextNonce;\n        const withNonceTx = txList[index].map((txObj) => {\n          return {\n            ...txObj,\n            nonce: currentNonce,\n            pubKey: signer.publicKey,\n          };\n        });\n        const signedTx = await this.sign(withNonceTx);\n        batchResults.push(signedTx);\n      }\n    } catch (err) {\n      throw err;\n    }\n    return batchResults;\n  }\n\n  /**\n   * signWith\n   *\n   * @param {Transaction} tx\n   * @param {string} account\n   * @param {boolean} offlineSign\n   * @returns {Transaction}\n   */\n  async signWith(\n    tx: Transaction,\n    account: string,\n    offlineSign?: boolean,\n  ): Promise<Transaction> {\n    if (!this.accounts[account]) {\n      throw new Error(\n        'The selected account does not exist on this Wallet instance.',\n      );\n    }\n\n    const signer = this.accounts[account];\n    const gasPrice = tx.txParams.gasPrice;\n    const gasLimit = new BN(tx.txParams.gasLimit.toString());\n    const debt = gasPrice.mul(gasLimit).add(tx.txParams.amount);\n    let currNonce: number = 0;\n\n    try {\n      if (!tx.txParams.nonce) {\n        if (offlineSign) {\n          throw new Error(\n            'No nonce detected in tx params when signing in offline mode',\n          );\n        }\n\n        if (typeof offlineSign === 'undefined' || !offlineSign) {\n          // retrieve latest nonce\n          const balance = await this.provider.send(\n            RPCMethod.GetBalance,\n            signer.address.replace('0x', '').toLowerCase(),\n          );\n\n          if (balance.result === undefined) {\n            throw new Error('Could not get balance');\n          }\n\n          const bal = new BN(balance.result.balance);\n          if (debt.gt(bal)) {\n            throw new Error(\n              'You do not have enough funds, need ' +\n                debt.toString() +\n                ' but only have ' +\n                bal.toString(),\n            );\n          }\n\n          if (typeof balance.result.nonce !== 'number') {\n            throw new Error('Could not get nonce');\n          }\n\n          currNonce = balance.result.nonce;\n        }\n\n        const withNonce = tx.map((txObj) => {\n          return {\n            ...txObj,\n            nonce: txObj.nonce || currNonce + 1,\n            pubKey: signer.publicKey,\n          };\n        });\n\n        return withNonce.map((txObj) => {\n          // @ts-ignore\n          return {\n            ...txObj,\n            signature: signer.signTransaction(withNonce.bytes),\n          };\n        });\n      }\n\n      const withPublicKey = tx.map((txObj) => {\n        return {\n          ...txObj,\n          pubKey: signer.publicKey,\n        };\n      });\n\n      return withPublicKey.map((txObj) => {\n        return {\n          ...txObj,\n          signature: signer.signTransaction(tx.bytes),\n        };\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  private isValidMnemonic(phrase: string): boolean {\n    if (phrase.trim().split(/\\s+/g).length < 12) {\n      return false;\n    }\n    return bip39.validateMnemonic(phrase);\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { BN, Long } from '@zilliqa-js/util';\nimport { TransactionReceiptObj } from '@zilliqa-js/core';\n\nexport enum TxStatus {\n  Initialised,\n  Pending,\n  Confirmed,\n  Rejected,\n}\n\nexport interface TxCreated {\n  Info: string;\n  TranID: string;\n  ContractAddress?: string;\n}\n\nexport interface TxRejected {\n  Error: string;\n}\n\nexport type TxReceipt = TransactionReceiptObj<number>;\n\nexport interface TxIncluded {\n  ID: string;\n  receipt: TransactionReceiptObj;\n}\n\nexport interface TxParams {\n  version: number;\n  toAddr: string;\n  amount: BN;\n  gasPrice: BN;\n  gasLimit: Long;\n\n  code?: string;\n  data?: string;\n  receipt?: TxReceipt;\n  nonce?: number;\n  pubKey?: string;\n  signature?: string;\n}\n\nexport enum TxEventName {\n  Error = 'error',\n  Receipt = 'receipt',\n  Track = 'track',\n}\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport {\n  EventEmitter,\n  GET_TX_ATTEMPTS,\n  Provider,\n  RPCMethod,\n  RPCResponse,\n  Signable,\n  TxBlockObj,\n} from '@zilliqa-js/core';\nimport {\n  getAddressFromPublicKey,\n  normaliseAddress,\n  toChecksumAddress,\n} from '@zilliqa-js/crypto';\nimport { BN, Long } from '@zilliqa-js/util';\n\nimport {\n  TxEventName,\n  TxIncluded,\n  TxParams,\n  TxReceipt,\n  TxStatus,\n} from './types';\nimport { encodeTransactionProto, sleep } from './util';\n\nimport hashjs from 'hash.js';\n\n/**\n * Transaction\n *\n * Transaction is a functor. Its purpose is to encode the possible states a\n * Transaction can be in:  Confirmed, Rejected, Pending, or Initialised (i.e., not broadcasted).\n */\nexport class Transaction implements Signable {\n  /**\n   * confirm\n   *\n   * constructs an already-confirmed transaction.\n   *\n   * @static\n   * @param {BaseTx} params\n   */\n  static confirm(params: TxParams, provider: Provider) {\n    return new Transaction(params, provider, TxStatus.Confirmed);\n  }\n\n  /**\n   * reject\n   *\n   * constructs an already-rejected transaction.\n   *\n   * @static\n   * @param {BaseTx} params\n   */\n  static reject(params: TxParams, provider: Provider) {\n    return new Transaction(params, provider, TxStatus.Rejected);\n  }\n\n  provider: Provider;\n  eventEmitter: EventEmitter<Transaction>;\n  id?: string;\n  status: TxStatus;\n  toDS: boolean;\n  blockConfirmation?: number;\n\n  // parameters\n  private version: number;\n  private nonce?: number;\n  private toAddr: string;\n  private pubKey?: string;\n  private amount: BN;\n  private gasPrice: BN;\n  private gasLimit: Long;\n  private code: string = '';\n  private data: string = '';\n  private receipt?: TxReceipt;\n  private signature?: string;\n\n  /**\n   * to get hash or transaction id of this transaction\n   * this can be identical returned by zilliqa network while calling CreateTransaction\n   */\n  get hash(): string {\n    const payload = this.bytes.toString('hex');\n    return hashjs.sha256().update(payload, 'hex').digest('hex');\n  }\n\n  get bytes(): Buffer {\n    return encodeTransactionProto(this.txParams);\n  }\n\n  get senderAddress(): string {\n    if (!this.pubKey) {\n      return '0'.repeat(40);\n    }\n\n    return getAddressFromPublicKey(this.pubKey);\n  }\n\n  get txParams(): TxParams {\n    return {\n      version: this.version,\n      toAddr: normaliseAddress(this.toAddr),\n      nonce: this.nonce,\n      pubKey: this.pubKey,\n      amount: this.amount,\n      gasPrice: this.gasPrice,\n      gasLimit: this.gasLimit,\n      code: this.code,\n      data: this.data,\n      signature: this.signature,\n      receipt: this.receipt,\n    };\n  }\n\n  get payload() {\n    return {\n      version: this.version,\n      toAddr: this.toAddr,\n      nonce: this.nonce,\n      pubKey: this.pubKey,\n      amount: this.amount.toString(),\n      gasPrice: this.gasPrice.toString(),\n      gasLimit: this.gasLimit.toString(),\n      code: this.code,\n      data: this.data,\n      signature: this.signature,\n      receipt: this.receipt,\n    };\n  }\n\n  constructor(\n    params: TxParams,\n    provider: Provider,\n    status: TxStatus = TxStatus.Initialised,\n    toDS: boolean = false,\n    enableSecureToAddress: boolean = true,\n  ) {\n    // private members\n    this.version = params.version;\n    this.toAddr = enableSecureToAddress\n      ? normaliseAddress(params.toAddr)\n      : toChecksumAddress(params.toAddr);\n    this.nonce = params.nonce;\n    this.pubKey = params.pubKey;\n    this.amount = params.amount;\n    this.code = params.code || '';\n    this.data = params.data || '';\n    this.signature = params.signature;\n    this.gasPrice = params.gasPrice;\n    this.gasLimit = params.gasLimit;\n    this.receipt = params.receipt;\n    // public members\n    this.provider = provider;\n    this.status = status;\n    this.toDS = toDS;\n    this.blockConfirmation = 0;\n    this.eventEmitter = new EventEmitter();\n  }\n\n  /**\n   * isPending\n   *\n   * @returns {boolean}\n   */\n  isPending(): boolean {\n    return this.status === TxStatus.Pending;\n  }\n\n  /**\n   * isInitialised\n   *\n   * @returns {boolean}\n   */\n  isInitialised(): boolean {\n    return this.status === TxStatus.Initialised;\n  }\n\n  getReceipt(): TxReceipt | undefined {\n    return this.receipt;\n  }\n\n  /**\n   * isConfirmed\n   *\n   * @returns {boolean}\n   */\n  isConfirmed(): boolean {\n    return this.status === TxStatus.Confirmed;\n  }\n\n  /**\n   * isRejected\n   *\n   * @returns {boolean}\n   */\n  isRejected(): boolean {\n    return this.status === TxStatus.Rejected;\n  }\n\n  /**\n   * setProvider\n   *\n   * Sets the provider on this instance.\n   *\n   * @param {Provider} provider\n   */\n  setProvider(provider: Provider) {\n    this.provider = provider;\n  }\n\n  /**\n   * setStatus\n   *\n   * Escape hatch to imperatively set the state of the transaction.\n   *\n   * @param {TxStatus} status\n   * @returns {undefined}\n   */\n  setStatus(status: TxStatus) {\n    this.status = status;\n    return this;\n  }\n\n  observed(): EventEmitter<Transaction> {\n    return this.eventEmitter;\n  }\n  /**\n   * blockConfirm\n   *\n   * Use `RPCMethod.GetLatestBlock` to get latest blockNumber\n   * Use interval to get the latestBlockNumber\n   * After BlockNumber change, then we use `RPCMethod.GetTransaction` to get the receipt\n   *\n   * @param {string} txHash\n   * @param {number} maxblockCount\n   * @param {number} interval interval in milliseconds\n   * @returns {Promise<Transaction>}\n   */\n  async blockConfirm(\n    txHash: string,\n    maxblockCount: number = 4,\n    interval: number = 1000,\n  ) {\n    this.status = TxStatus.Pending;\n    const blockStart: BN = await this.getBlockNumber();\n    let blockChecked = blockStart;\n    for (let attempt = 0; attempt < maxblockCount; attempt += 1) {\n      try {\n        const blockLatest: BN = await this.getBlockNumber();\n        const blockNext: BN = blockChecked.add(\n          new BN(attempt === 0 ? attempt : 1),\n        );\n        if (blockLatest.gte(blockNext)) {\n          blockChecked = blockLatest;\n          this.emit(TxEventName.Track, {\n            txHash,\n            attempt,\n            currentBlock: blockChecked.toString(),\n          });\n          if (await this.trackTx(txHash)) {\n            this.blockConfirmation = blockLatest.sub(blockStart).toNumber();\n            return this;\n          }\n        } else {\n          attempt = attempt - 1 >= 0 ? attempt - 1 : 0;\n        }\n      } catch (err) {\n        this.status = TxStatus.Rejected;\n        throw err;\n      }\n\n      if (attempt + 1 < maxblockCount) {\n        await sleep(interval);\n      }\n    }\n\n    // if failed\n    const blockFailed: BN = await this.getBlockNumber();\n    this.blockConfirmation = blockFailed.sub(blockStart).toNumber();\n    this.status = TxStatus.Rejected;\n    const errorMessage = `The transaction is still not confirmed after ${maxblockCount} blocks.`;\n\n    throw new Error(errorMessage);\n  }\n\n  /**\n   * confirmReceipt\n   *\n   * Similar to the Promise API. This sets the Transaction instance to a state\n   * of pending. Calling this function kicks off a passive loop that polls the\n   * lookup node for confirmation on the txHash.\n   *\n   * The polls are performed with a linear backoff:\n   *\n   * `const delay = interval * attempt`\n   *\n   * This is a low-level method that you should generally not have to use\n   * directly.\n   *\n   * @param {string} txHash\n   * @param {number} maxAttempts\n   * @param {number} initial interval in milliseconds\n   * @returns {Promise<Transaction>}\n   */\n  async confirm(\n    txHash: string,\n    maxAttempts = GET_TX_ATTEMPTS,\n    interval = 1000,\n  ): Promise<Transaction> {\n    this.status = TxStatus.Pending;\n    for (let attempt = 0; attempt < maxAttempts; attempt++) {\n      this.emit(TxEventName.Track, {\n        txHash,\n        attempt,\n      });\n      try {\n        if (await this.trackTx(txHash)) {\n          return this;\n        }\n      } catch (err) {\n        this.status = TxStatus.Rejected;\n        throw err;\n      }\n      if (attempt + 1 < maxAttempts) {\n        await sleep(interval * attempt);\n      }\n    }\n    this.status = TxStatus.Rejected;\n    const errorMessage = `The transaction is still not confirmed after ${maxAttempts} attempts.`;\n    throw new Error(errorMessage);\n  }\n\n  /**\n   * map\n   *\n   * maps over the transaction, allowing for manipulation.\n   *\n   * @param {(prev: TxParams) => TxParams} fn - mapper\n   * @returns {Transaction}\n   */\n  map(fn: (prev: TxParams) => TxParams): Transaction {\n    const newParams = fn(this.txParams);\n    this.setParams(newParams);\n\n    return this;\n  }\n\n  private setParams(params: TxParams) {\n    this.version = params.version;\n    this.toAddr = normaliseAddress(params.toAddr);\n    this.nonce = params.nonce;\n    this.pubKey = params.pubKey;\n    this.amount = params.amount;\n    this.code = params.code || '';\n    this.data = params.data || '';\n    this.signature = params.signature;\n    this.gasPrice = params.gasPrice;\n    this.gasLimit = params.gasLimit;\n    this.receipt = params.receipt;\n  }\n\n  private async trackTx(txHash: string): Promise<boolean> {\n    const res: RPCResponse<TxIncluded, string> = await this.provider.send(\n      RPCMethod.GetTransaction,\n      txHash,\n    );\n\n    if (res.error) {\n      this.emit(TxEventName.Error, res.error);\n      return false;\n    }\n\n    this.id = res.result.ID;\n    this.receipt = {\n      ...res.result.receipt,\n      cumulative_gas: parseInt(res.result.receipt.cumulative_gas, 10),\n    };\n    this.emit(TxEventName.Receipt, this.receipt);\n    this.status =\n      this.receipt && this.receipt.success\n        ? TxStatus.Confirmed\n        : TxStatus.Rejected;\n    return true;\n  }\n\n  private async getBlockNumber(): Promise<BN> {\n    try {\n      const res: RPCResponse<TxBlockObj, string> = await this.provider.send(\n        RPCMethod.GetLatestTxBlock,\n      );\n      if (res.error === undefined && res.result.header.BlockNum) {\n        // if blockNumber is too high, we use BN to be safer\n        return new BN(res.result.header.BlockNum);\n      } else {\n        throw new Error('Can not get latest BlockNumber');\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private emit(event: TxEventName | string, txEvent: any) {\n    this.eventEmitter.emit(event, { ...txEvent, event });\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Provider, RPCMethod, ZilliqaModule } from '@zilliqa-js/core';\nimport { Transaction } from './transaction';\nimport { TxParams, TxStatus } from './types';\nimport { formatOutgoingTx } from './util';\nimport { Wallet } from './wallet';\nimport { BN } from '@zilliqa-js/util';\n\nexport class TransactionFactory implements ZilliqaModule {\n  provider: Provider;\n  signer: Wallet;\n\n  constructor(provider: Provider, signer: Wallet) {\n    this.provider = provider;\n    this.provider.middleware.request.use(\n      formatOutgoingTx,\n      RPCMethod.CreateTransaction,\n    );\n    this.signer = signer;\n  }\n\n  new(\n    txParams: TxParams,\n    toDs: boolean = false,\n    enableSecureAddress: boolean = true,\n  ) {\n    return new Transaction(\n      txParams,\n      this.provider,\n      TxStatus.Initialised,\n      toDs,\n      enableSecureAddress,\n    );\n  }\n\n  /**\n   * This constructor could help you to check if there is a default account to be used, and further more, if it has\n   * sufficient fund to do the transfer.\n   * @param txParams\n   */\n  async payment(txParams: TxParams) {\n    const defaultAccount = this.signer.defaultAccount;\n    if (defaultAccount !== undefined) {\n      const addr = defaultAccount.address;\n      const response = await this.provider.send(\n        RPCMethod.GetBalance,\n        addr.replace('0x', '').toLowerCase(),\n      );\n      if (response.error) {\n        throw response.error;\n      }\n      const fund = new BN(response.result.balance);\n      if (txParams.amount.cmp(fund) === 1) {\n        throw new Error('No sufficient fund');\n      }\n    } else {\n      throw new Error('No default wallet');\n    }\n    return this.new(txParams, true);\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport * as util from './util';\n\nexport * from './account';\nexport * from './wallet';\nexport * from './transaction';\nexport * from './transactionFactory';\nexport * from './types';\n\nexport { util };\n"]},"metadata":{},"sourceType":"script"}