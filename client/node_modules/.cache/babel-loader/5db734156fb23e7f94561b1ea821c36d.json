{"ast":null,"code":"import { isValidValue } from \"./isValidValue\";\nimport { isValidIndex } from \"./isValidIndex\";\nvar validationPropsFuncs = [asyncValidatorProp, valueProp, nameProp, contextTypeProp, typeProp];\nexport function validateProps(target, props, contextType) {\n  var errors = validationPropsFuncs.map(function (fn) {\n    return fn(target, props, contextType);\n  }).filter(Boolean);\n\n  if (errors.length > 0) {\n    throw new Error(errors[0]);\n  }\n}\n\nfunction asyncValidatorProp(target, _ref) {\n  var type = _ref.type,\n      asyncValidator = _ref.asyncValidator;\n\n  if (typeof asyncValidator !== \"undefined\" && typeof asyncValidator !== \"function\") {\n    return \"The prop \\\"asyncValidator\\\" -> \\\"\" + asyncValidator + \"\\\" passed to \\\"\" + target + \"\\\" of type: \" + type + \" is not allowed. It must be a function\";\n  }\n}\n\nfunction valueProp(target, _ref2) {\n  var type = _ref2.type,\n      value = _ref2.value;\n\n  if (typeof value !== \"undefined\" && (type === \"array\" && value.constructor !== Array || type === \"object\" && typeof value !== \"object\")) {\n    return \"The prop \\\"value\\\": \" + value + \" of type \\\"\" + type + \"\\\" passed to \\\"\" + target + \"\\\" it is not allowed as initial value.\";\n  }\n}\n\nfunction nameProp(target, _ref3, contextType) {\n  var name = _ref3.name;\n\n  if (!isValidValue(name, contextType)) {\n    return \"The prop \\\"name\\\": \" + name + \" of type \\\"\" + typeof name + \"\\\" passed to \\\"\" + target + \"\\\" it is not allowed within context a of type \\\"\" + contextType + \"\\\".\";\n  }\n}\n\nfunction contextTypeProp(target, _ref4, contextType) {\n  var type = _ref4.type,\n      index = _ref4.index;\n\n  if (contextType === \"array\" && !isValidIndex(index)) {\n    return \"The prop \\\"index\\\": \" + index + \" of type \\\"\" + typeof index + \"\\\" passed to a \" + target + \" \\\"\" + type + \"\\\" must be either a string or number represent as integers.\";\n  }\n}\n\nfunction typeProp(target, _ref5) {\n  var name = _ref5.name,\n      value = _ref5.value,\n      checked = _ref5.checked,\n      type = _ref5.type;\n\n  if (typeof type === \"undefined\") {\n    return \"The prop \\\"type\\\" -> \\\"\" + type + \"\\\"\\\" passed to \\\"\" + target + \"\\\" is not allowed. It must be a string.\";\n  }\n\n  if (type === \"file\" && value && value !== \"\") {\n    return \"The prop \\\"value\\\" -> \\\"\" + value + \"\\\" passed to \\\"\" + target + \"\\\": \" + name + \" of type: \" + type + \" is not allowed. Input of type \\\"file\\\" does not support any default value.\";\n  }\n\n  if (type === \"radio\" && (value === undefined || typeof value === \"string\" && value.replace(/ /g, \"\") === \"\")) {\n    return target + \" of type => \" + type + \", must have a valid prop \\\"value\\\".\";\n  }\n\n  if (type !== \"checkbox\" && type !== \"radio\" && checked) {\n    return \"The prop \\\"checked\\\" -> \\\"\" + checked + \"\\\" passed to \\\"\" + target + \"\\\": \" + name + \" of type: \" + type + \" is not allowed. You can use \\\"value\\\" prop instead to set an initial value.\";\n  }\n}","map":{"version":3,"names":["isValidValue","isValidIndex","validationPropsFuncs","asyncValidatorProp","valueProp","nameProp","contextTypeProp","typeProp","validateProps","target","props","contextType","errors","map","fn","filter","Boolean","length","Error","_ref","type","asyncValidator","_ref2","value","constructor","Array","_ref3","name","_ref4","index","_ref5","checked","undefined","replace"],"sources":["/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/usetheform/build/es/utils/validateProps.js"],"sourcesContent":["import { isValidValue } from \"./isValidValue\";\nimport { isValidIndex } from \"./isValidIndex\";\nvar validationPropsFuncs = [asyncValidatorProp, valueProp, nameProp, contextTypeProp, typeProp];\nexport function validateProps(target, props, contextType) {\n  var errors = validationPropsFuncs.map(function (fn) {\n    return fn(target, props, contextType);\n  }).filter(Boolean);\n\n  if (errors.length > 0) {\n    throw new Error(errors[0]);\n  }\n}\n\nfunction asyncValidatorProp(target, _ref) {\n  var type = _ref.type,\n      asyncValidator = _ref.asyncValidator;\n\n  if (typeof asyncValidator !== \"undefined\" && typeof asyncValidator !== \"function\") {\n    return \"The prop \\\"asyncValidator\\\" -> \\\"\" + asyncValidator + \"\\\" passed to \\\"\" + target + \"\\\" of type: \" + type + \" is not allowed. It must be a function\";\n  }\n}\n\nfunction valueProp(target, _ref2) {\n  var type = _ref2.type,\n      value = _ref2.value;\n\n  if (typeof value !== \"undefined\" && (type === \"array\" && value.constructor !== Array || type === \"object\" && typeof value !== \"object\")) {\n    return \"The prop \\\"value\\\": \" + value + \" of type \\\"\" + type + \"\\\" passed to \\\"\" + target + \"\\\" it is not allowed as initial value.\";\n  }\n}\n\nfunction nameProp(target, _ref3, contextType) {\n  var name = _ref3.name;\n\n  if (!isValidValue(name, contextType)) {\n    return \"The prop \\\"name\\\": \" + name + \" of type \\\"\" + typeof name + \"\\\" passed to \\\"\" + target + \"\\\" it is not allowed within context a of type \\\"\" + contextType + \"\\\".\";\n  }\n}\n\nfunction contextTypeProp(target, _ref4, contextType) {\n  var type = _ref4.type,\n      index = _ref4.index;\n\n  if (contextType === \"array\" && !isValidIndex(index)) {\n    return \"The prop \\\"index\\\": \" + index + \" of type \\\"\" + typeof index + \"\\\" passed to a \" + target + \" \\\"\" + type + \"\\\" must be either a string or number represent as integers.\";\n  }\n}\n\nfunction typeProp(target, _ref5) {\n  var name = _ref5.name,\n      value = _ref5.value,\n      checked = _ref5.checked,\n      type = _ref5.type;\n\n  if (typeof type === \"undefined\") {\n    return \"The prop \\\"type\\\" -> \\\"\" + type + \"\\\"\\\" passed to \\\"\" + target + \"\\\" is not allowed. It must be a string.\";\n  }\n\n  if (type === \"file\" && value && value !== \"\") {\n    return \"The prop \\\"value\\\" -> \\\"\" + value + \"\\\" passed to \\\"\" + target + \"\\\": \" + name + \" of type: \" + type + \" is not allowed. Input of type \\\"file\\\" does not support any default value.\";\n  }\n\n  if (type === \"radio\" && (value === undefined || typeof value === \"string\" && value.replace(/ /g, \"\") === \"\")) {\n    return target + \" of type => \" + type + \", must have a valid prop \\\"value\\\".\";\n  }\n\n  if (type !== \"checkbox\" && type !== \"radio\" && checked) {\n    return \"The prop \\\"checked\\\" -> \\\"\" + checked + \"\\\" passed to \\\"\" + target + \"\\\": \" + name + \" of type: \" + type + \" is not allowed. You can use \\\"value\\\" prop instead to set an initial value.\";\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}