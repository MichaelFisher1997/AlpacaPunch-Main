{"ast":null,"code":"//const { Transaction } = require('@zilliqa-js/account');\nconst {\n  BN,\n  Long,\n  bytes,\n  units\n} = require('@zilliqa-js/util');\n\nconst {\n  Zilliqa\n} = require('@zilliqa-js/zilliqa');\n\nconst CP = require('@zilliqa-js/crypto');\n\nconst zilliqa = new Zilliqa('http://localhost:4201'); // These are set by the core protocol, and may vary per-chain.\n// These numbers are JUST AN EXAMPLE. They will NOT WORK on the developer testnet\n// or mainnet.\n// For more information: https://apidocs.zilliqa.com/?shell#getnetworkid\n\nconst CHAIN_ID = 2;\nconst MSG_VERSION = 1;\nconst VERSION = bytes.pack(CHAIN_ID, MSG_VERSION); // Populate the wallet with an account\n\n_c = VERSION;\nconst privkey = '2BEE3DD04CEFD25EE17190075C1693F011CA5AAF0C50D3EA2D0934482872AB72';\nzilliqa.wallet.addByPrivateKey(privkey);\nconst address = CP.getAddressFromPrivateKey(privkey);\nconsole.log(\"Your account address is:\");\nconsole.log(`0x${address}`);\n\nasync function testBlockchain() {\n  // Get Balance\n  const balance = await zilliqa.blockchain.getBalance(address); // Get Minimum Gas Price from blockchain\n\n  const minGasPrice = await zilliqa.blockchain.getMinimumGasPrice();\n  console.log(`Your account balance is:`);\n  console.log(balance.result);\n  console.log(`Current Minimum Gas Price: ${minGasPrice.result}`);\n  const myGasPrice = units.toQa('1000', units.Units.Li); // Gas Price that will be used by all transactions\n\n  console.log(`My Gas Price ${myGasPrice.toString()}`);\n  console.log('Sufficient Gas Price?');\n  console.log(myGasPrice.gte(new BN(minGasPrice.result))); // Checks if your gas price is less than the minimum gas price\n  // Send a transaction to the network\n\n  const tx = await zilliqa.blockchain.createTransaction(zilliqa.transactions.new({\n    version: VERSION,\n    toAddr: \"zil1eff6xw0czq44wkdf70zru7l3ftp53tp77qt32k\",\n    amount: new BN(units.toQa(\"100000\", units.Units.Zil)),\n    // Sending an amount in Zil (1) and converting the amount to Qa\n    gasPrice: myGasPrice,\n    // Minimum gasPrice veries. Check the `GetMinimumGasPrice` on the blockchain\n    gasLimit: Long.fromNumber(1)\n  }));\n  console.log(`The transaction status is:`);\n  console.log(tx.receipt);\n}\n\nexport default testBlockchain;\n\nvar _c;\n\n$RefreshReg$(_c, \"VERSION\");","map":{"version":3,"names":["BN","Long","bytes","units","require","Zilliqa","CP","zilliqa","CHAIN_ID","MSG_VERSION","VERSION","pack","privkey","wallet","addByPrivateKey","address","getAddressFromPrivateKey","console","log","testBlockchain","balance","blockchain","getBalance","minGasPrice","getMinimumGasPrice","result","myGasPrice","toQa","Units","Li","toString","gte","tx","createTransaction","transactions","new","version","toAddr","amount","Zil","gasPrice","gasLimit","fromNumber","receipt"],"sources":["/home/micqdf/AlpacaPunchTests/maintest/test1/client/src/components/Navbar/ZilAssets/PayableZil.js"],"sourcesContent":["//const { Transaction } = require('@zilliqa-js/account');\nconst { BN, Long, bytes, units } = require('@zilliqa-js/util');\nconst { Zilliqa } = require('@zilliqa-js/zilliqa');\nconst CP = require ('@zilliqa-js/crypto');\n\nconst zilliqa = new Zilliqa('http://localhost:4201');\n\n// These are set by the core protocol, and may vary per-chain.\n// These numbers are JUST AN EXAMPLE. They will NOT WORK on the developer testnet\n// or mainnet.\n// For more information: https://apidocs.zilliqa.com/?shell#getnetworkid\nconst CHAIN_ID = 2;\nconst MSG_VERSION = 1;\nconst VERSION = bytes.pack(CHAIN_ID, MSG_VERSION);\n\n// Populate the wallet with an account\nconst privkey = '2BEE3DD04CEFD25EE17190075C1693F011CA5AAF0C50D3EA2D0934482872AB72';\n\nzilliqa.wallet.addByPrivateKey(\n  privkey\n);\n\nconst address = CP.getAddressFromPrivateKey(privkey);\nconsole.log(\"Your account address is:\");\nconsole.log(`0x${address}`);\n\nasync function testBlockchain() {\n    // Get Balance\n    const balance = await zilliqa.blockchain.getBalance(address);\n    // Get Minimum Gas Price from blockchain\n    const minGasPrice = await zilliqa.blockchain.getMinimumGasPrice();\n    console.log(`Your account balance is:`);\n    console.log(balance.result)\n    console.log(`Current Minimum Gas Price: ${minGasPrice.result}`);\n    const myGasPrice = units.toQa('1000', units.Units.Li); // Gas Price that will be used by all transactions\n    console.log(`My Gas Price ${myGasPrice.toString()}`)\n    console.log('Sufficient Gas Price?');\n    console.log(myGasPrice.gte(new BN(minGasPrice.result))); // Checks if your gas price is less than the minimum gas price\n\n    // Send a transaction to the network\n    const tx = await zilliqa.blockchain.createTransaction(\n      zilliqa.transactions.new({\n        version: VERSION,\n        toAddr: \"zil1eff6xw0czq44wkdf70zru7l3ftp53tp77qt32k\",\n        amount: new BN(units.toQa(\"100000\", units.Units.Zil)), // Sending an amount in Zil (1) and converting the amount to Qa\n        gasPrice: myGasPrice, // Minimum gasPrice veries. Check the `GetMinimumGasPrice` on the blockchain\n        gasLimit: Long.fromNumber(1)\n      })\n    );\n\n\n    console.log(`The transaction status is:`);\n    console.log(tx.receipt);\n}\n\nexport default testBlockchain;"],"mappings":"AAAA;AACA,MAAM;EAAEA,EAAF;EAAMC,IAAN;EAAYC,KAAZ;EAAmBC;AAAnB,IAA6BC,OAAO,CAAC,kBAAD,CAA1C;;AACA,MAAM;EAAEC;AAAF,IAAcD,OAAO,CAAC,qBAAD,CAA3B;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAE,oBAAF,CAAlB;;AAEA,MAAMG,OAAO,GAAG,IAAIF,OAAJ,CAAY,uBAAZ,CAAhB,C,CAEA;AACA;AACA;AACA;;AACA,MAAMG,QAAQ,GAAG,CAAjB;AACA,MAAMC,WAAW,GAAG,CAApB;AACA,MAAMC,OAAO,GAAGR,KAAK,CAACS,IAAN,CAAWH,QAAX,EAAqBC,WAArB,CAAhB,C,CAEA;;KAFMC,O;AAGN,MAAME,OAAO,GAAG,kEAAhB;AAEAL,OAAO,CAACM,MAAR,CAAeC,eAAf,CACEF,OADF;AAIA,MAAMG,OAAO,GAAGT,EAAE,CAACU,wBAAH,CAA4BJ,OAA5B,CAAhB;AACAK,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,OAAO,CAACC,GAAR,CAAa,KAAIH,OAAQ,EAAzB;;AAEA,eAAeI,cAAf,GAAgC;EAC5B;EACA,MAAMC,OAAO,GAAG,MAAMb,OAAO,CAACc,UAAR,CAAmBC,UAAnB,CAA8BP,OAA9B,CAAtB,CAF4B,CAG5B;;EACA,MAAMQ,WAAW,GAAG,MAAMhB,OAAO,CAACc,UAAR,CAAmBG,kBAAnB,EAA1B;EACAP,OAAO,CAACC,GAAR,CAAa,0BAAb;EACAD,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACK,MAApB;EACAR,OAAO,CAACC,GAAR,CAAa,8BAA6BK,WAAW,CAACE,MAAO,EAA7D;EACA,MAAMC,UAAU,GAAGvB,KAAK,CAACwB,IAAN,CAAW,MAAX,EAAmBxB,KAAK,CAACyB,KAAN,CAAYC,EAA/B,CAAnB,CAR4B,CAQ2B;;EACvDZ,OAAO,CAACC,GAAR,CAAa,gBAAeQ,UAAU,CAACI,QAAX,EAAsB,EAAlD;EACAb,OAAO,CAACC,GAAR,CAAY,uBAAZ;EACAD,OAAO,CAACC,GAAR,CAAYQ,UAAU,CAACK,GAAX,CAAe,IAAI/B,EAAJ,CAAOuB,WAAW,CAACE,MAAnB,CAAf,CAAZ,EAX4B,CAW6B;EAEzD;;EACA,MAAMO,EAAE,GAAG,MAAMzB,OAAO,CAACc,UAAR,CAAmBY,iBAAnB,CACf1B,OAAO,CAAC2B,YAAR,CAAqBC,GAArB,CAAyB;IACvBC,OAAO,EAAE1B,OADc;IAEvB2B,MAAM,EAAE,4CAFe;IAGvBC,MAAM,EAAE,IAAItC,EAAJ,CAAOG,KAAK,CAACwB,IAAN,CAAW,QAAX,EAAqBxB,KAAK,CAACyB,KAAN,CAAYW,GAAjC,CAAP,CAHe;IAGgC;IACvDC,QAAQ,EAAEd,UAJa;IAID;IACtBe,QAAQ,EAAExC,IAAI,CAACyC,UAAL,CAAgB,CAAhB;EALa,CAAzB,CADe,CAAjB;EAWAzB,OAAO,CAACC,GAAR,CAAa,4BAAb;EACAD,OAAO,CAACC,GAAR,CAAYc,EAAE,CAACW,OAAf;AACH;;AAED,eAAexB,cAAf"},"metadata":{},"sourceType":"module"}