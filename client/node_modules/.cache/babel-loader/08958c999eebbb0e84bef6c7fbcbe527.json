{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('mitt')) : typeof define === 'function' && define.amd ? define(['exports', 'tslib', 'mitt'], factory) : factory(global.zjsCore = {}, global.tslib, global.mitt);\n})(this, function (exports, tslib, mitt) {\n  'use strict';\n\n  mitt = mitt && mitt.hasOwnProperty('default') ? mitt['default'] : mitt; //  Copyright (C) 2018 Zilliqa\n  //\n  //  This file is part of zilliqa-js\n  //\n  //  This program is free software: you can redistribute it and/or modify\n  //  it under the terms of the GNU General Public License as published by\n  //  the Free Software Foundation, either version 3 of the License, or\n  //  (at your option) any later version.\n  //\n  //  This program is distributed in the hope that it will be useful,\n  //  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  //  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  //  GNU General Public License for more details.\n  //\n  //  You should have received a copy of the GNU General Public License\n  //  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n  var Signer =\n  /** @class */\n  function () {\n    function Signer() {}\n\n    return Signer;\n  }();\n\n  (function (TransactionError) {\n    TransactionError[TransactionError[\"CHECKER_FAILED\"] = 0] = \"CHECKER_FAILED\";\n    TransactionError[TransactionError[\"RUNNER_FAILED\"] = 1] = \"RUNNER_FAILED\";\n    TransactionError[TransactionError[\"BALANCE_TRANSFER_FAILED\"] = 2] = \"BALANCE_TRANSFER_FAILED\";\n    TransactionError[TransactionError[\"EXECUTE_CMD_FAILED\"] = 3] = \"EXECUTE_CMD_FAILED\";\n    TransactionError[TransactionError[\"EXECUTE_CMD_TIMEOUT\"] = 4] = \"EXECUTE_CMD_TIMEOUT\";\n    TransactionError[TransactionError[\"NO_GAS_REMAINING_FOUND\"] = 5] = \"NO_GAS_REMAINING_FOUND\";\n    TransactionError[TransactionError[\"NO_ACCEPTED_FOUND\"] = 6] = \"NO_ACCEPTED_FOUND\";\n    TransactionError[TransactionError[\"CALL_CONTRACT_FAILED\"] = 7] = \"CALL_CONTRACT_FAILED\";\n    TransactionError[TransactionError[\"CREATE_CONTRACT_FAILED\"] = 8] = \"CREATE_CONTRACT_FAILED\";\n    TransactionError[TransactionError[\"JSON_OUTPUT_CORRUPTED\"] = 9] = \"JSON_OUTPUT_CORRUPTED\";\n    TransactionError[TransactionError[\"CONTRACT_NOT_EXIST\"] = 10] = \"CONTRACT_NOT_EXIST\";\n    TransactionError[TransactionError[\"STATE_CORRUPTED\"] = 11] = \"STATE_CORRUPTED\";\n    TransactionError[TransactionError[\"LOG_ENTRY_INSTALL_FAILED\"] = 12] = \"LOG_ENTRY_INSTALL_FAILED\";\n    TransactionError[TransactionError[\"MESSAGE_CORRUPTED\"] = 13] = \"MESSAGE_CORRUPTED\";\n    TransactionError[TransactionError[\"RECEIPT_IS_NULL\"] = 14] = \"RECEIPT_IS_NULL\";\n    TransactionError[TransactionError[\"MAX_DEPTH_REACHED\"] = 15] = \"MAX_DEPTH_REACHED\";\n    TransactionError[TransactionError[\"CHAIN_CALL_DIFF_SHARD\"] = 16] = \"CHAIN_CALL_DIFF_SHARD\";\n    TransactionError[TransactionError[\"PREPARATION_FAILED\"] = 17] = \"PREPARATION_FAILED\";\n    TransactionError[TransactionError[\"NO_OUTPUT\"] = 18] = \"NO_OUTPUT\";\n    TransactionError[TransactionError[\"OUTPUT_ILLEGAL\"] = 19] = \"OUTPUT_ILLEGAL\";\n  })(exports.TransactionError || (exports.TransactionError = {})); //  Copyright (C) 2018 Zilliqa\n\n  /**\r\n   * sign\r\n   *\r\n   * This decorates a method by attempting to sign the first argument of the\r\n   * intercepted method.\r\n   *\r\n   * @param {T} target\r\n   * @param {K} key\r\n   * @param {PropertyDescriptor} descriptor\r\n   * @returns {PropertyDescriptor | undefined}\r\n   */\n\n\n  var sign = function (target, key, descriptor) {\n    var original = descriptor.value;\n\n    function interceptor(arg) {\n      var args = [];\n\n      for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n      }\n\n      return tslib.__awaiter(this, void 0, void 0, function () {\n        var signed;\n        return tslib.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!(original && arg.bytes)) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , this.signer.sign(arg)];\n\n            case 1:\n              signed = _a.sent();\n              return [2\n              /*return*/\n              , original.call.apply(original, tslib.__spreadArray([this, signed], tslib.__read(args), false))];\n\n            case 2:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n\n    descriptor.value = interceptor;\n    return descriptor;\n  }; //  Copyright (C) 2018 Zilliqa\n\n\n  (function (self) {\n    if (self.fetch) {\n      return;\n    }\n\n    var support = {\n      searchParams: 'URLSearchParams' in self,\n      iterable: 'Symbol' in self && 'iterator' in Symbol,\n      blob: 'FileReader' in self && 'Blob' in self && function () {\n        try {\n          new Blob();\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }(),\n      formData: 'FormData' in self,\n      arrayBuffer: 'ArrayBuffer' in self\n    };\n\n    if (support.arrayBuffer) {\n      var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n\n      var isDataView = function (obj) {\n        return obj && DataView.prototype.isPrototypeOf(obj);\n      };\n\n      var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n      };\n    }\n\n    function normalizeName(name) {\n      if (typeof name !== 'string') {\n        name = String(name);\n      }\n\n      if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError('Invalid character in header field name');\n      }\n\n      return name.toLowerCase();\n    }\n\n    function normalizeValue(value) {\n      if (typeof value !== 'string') {\n        value = String(value);\n      }\n\n      return value;\n    } // Build a destructive iterator for the value list\n\n\n    function iteratorFor(items) {\n      var iterator = {\n        next: function () {\n          var value = items.shift();\n          return {\n            done: value === undefined,\n            value: value\n          };\n        }\n      };\n\n      if (support.iterable) {\n        iterator[Symbol.iterator] = function () {\n          return iterator;\n        };\n      }\n\n      return iterator;\n    }\n\n    function Headers(headers) {\n      this.map = {};\n\n      if (headers instanceof Headers) {\n        headers.forEach(function (value, name) {\n          this.append(name, value);\n        }, this);\n      } else if (Array.isArray(headers)) {\n        headers.forEach(function (header) {\n          this.append(header[0], header[1]);\n        }, this);\n      } else if (headers) {\n        Object.getOwnPropertyNames(headers).forEach(function (name) {\n          this.append(name, headers[name]);\n        }, this);\n      }\n    }\n\n    Headers.prototype.append = function (name, value) {\n      name = normalizeName(name);\n      value = normalizeValue(value);\n      var oldValue = this.map[name];\n      this.map[name] = oldValue ? oldValue + ',' + value : value;\n    };\n\n    Headers.prototype['delete'] = function (name) {\n      delete this.map[normalizeName(name)];\n    };\n\n    Headers.prototype.get = function (name) {\n      name = normalizeName(name);\n      return this.has(name) ? this.map[name] : null;\n    };\n\n    Headers.prototype.has = function (name) {\n      return this.map.hasOwnProperty(normalizeName(name));\n    };\n\n    Headers.prototype.set = function (name, value) {\n      this.map[normalizeName(name)] = normalizeValue(value);\n    };\n\n    Headers.prototype.forEach = function (callback, thisArg) {\n      for (var name in this.map) {\n        if (this.map.hasOwnProperty(name)) {\n          callback.call(thisArg, this.map[name], name, this);\n        }\n      }\n    };\n\n    Headers.prototype.keys = function () {\n      var items = [];\n      this.forEach(function (value, name) {\n        items.push(name);\n      });\n      return iteratorFor(items);\n    };\n\n    Headers.prototype.values = function () {\n      var items = [];\n      this.forEach(function (value) {\n        items.push(value);\n      });\n      return iteratorFor(items);\n    };\n\n    Headers.prototype.entries = function () {\n      var items = [];\n      this.forEach(function (value, name) {\n        items.push([name, value]);\n      });\n      return iteratorFor(items);\n    };\n\n    if (support.iterable) {\n      Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n    }\n\n    function consumed(body) {\n      if (body.bodyUsed) {\n        return Promise.reject(new TypeError('Already read'));\n      }\n\n      body.bodyUsed = true;\n    }\n\n    function fileReaderReady(reader) {\n      return new Promise(function (resolve, reject) {\n        reader.onload = function () {\n          resolve(reader.result);\n        };\n\n        reader.onerror = function () {\n          reject(reader.error);\n        };\n      });\n    }\n\n    function readBlobAsArrayBuffer(blob) {\n      var reader = new FileReader();\n      var promise = fileReaderReady(reader);\n      reader.readAsArrayBuffer(blob);\n      return promise;\n    }\n\n    function readBlobAsText(blob) {\n      var reader = new FileReader();\n      var promise = fileReaderReady(reader);\n      reader.readAsText(blob);\n      return promise;\n    }\n\n    function readArrayBufferAsText(buf) {\n      var view = new Uint8Array(buf);\n      var chars = new Array(view.length);\n\n      for (var i = 0; i < view.length; i++) {\n        chars[i] = String.fromCharCode(view[i]);\n      }\n\n      return chars.join('');\n    }\n\n    function bufferClone(buf) {\n      if (buf.slice) {\n        return buf.slice(0);\n      } else {\n        var view = new Uint8Array(buf.byteLength);\n        view.set(new Uint8Array(buf));\n        return view.buffer;\n      }\n    }\n\n    function Body() {\n      this.bodyUsed = false;\n\n      this._initBody = function (body) {\n        this._bodyInit = body;\n\n        if (!body) {\n          this._bodyText = '';\n        } else if (typeof body === 'string') {\n          this._bodyText = body;\n        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n          this._bodyBlob = body;\n        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n          this._bodyFormData = body;\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this._bodyText = body.toString();\n        } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n          this._bodyArrayBuffer = bufferClone(body.buffer); // IE 10-11 can't handle a DataView body.\n\n          this._bodyInit = new Blob([this._bodyArrayBuffer]);\n        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n          this._bodyArrayBuffer = bufferClone(body);\n        } else {\n          throw new Error('unsupported BodyInit type');\n        }\n\n        if (!this.headers.get('content-type')) {\n          if (typeof body === 'string') {\n            this.headers.set('content-type', 'text/plain;charset=UTF-8');\n          } else if (this._bodyBlob && this._bodyBlob.type) {\n            this.headers.set('content-type', this._bodyBlob.type);\n          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n          }\n        }\n      };\n\n      if (support.blob) {\n        this.blob = function () {\n          var rejected = consumed(this);\n\n          if (rejected) {\n            return rejected;\n          }\n\n          if (this._bodyBlob) {\n            return Promise.resolve(this._bodyBlob);\n          } else if (this._bodyArrayBuffer) {\n            return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n          } else if (this._bodyFormData) {\n            throw new Error('could not read FormData body as blob');\n          } else {\n            return Promise.resolve(new Blob([this._bodyText]));\n          }\n        };\n\n        this.arrayBuffer = function () {\n          if (this._bodyArrayBuffer) {\n            return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n          } else {\n            return this.blob().then(readBlobAsArrayBuffer);\n          }\n        };\n      }\n\n      this.text = function () {\n        var rejected = consumed(this);\n\n        if (rejected) {\n          return rejected;\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob);\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text');\n        } else {\n          return Promise.resolve(this._bodyText);\n        }\n      };\n\n      if (support.formData) {\n        this.formData = function () {\n          return this.text().then(decode);\n        };\n      }\n\n      this.json = function () {\n        return this.text().then(JSON.parse);\n      };\n\n      return this;\n    } // HTTP methods whose capitalization should be normalized\n\n\n    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n    function normalizeMethod(method) {\n      var upcased = method.toUpperCase();\n      return methods.indexOf(upcased) > -1 ? upcased : method;\n    }\n\n    function Request(input, options) {\n      options = options || {};\n      var body = options.body;\n\n      if (input instanceof Request) {\n        if (input.bodyUsed) {\n          throw new TypeError('Already read');\n        }\n\n        this.url = input.url;\n        this.credentials = input.credentials;\n\n        if (!options.headers) {\n          this.headers = new Headers(input.headers);\n        }\n\n        this.method = input.method;\n        this.mode = input.mode;\n\n        if (!body && input._bodyInit != null) {\n          body = input._bodyInit;\n          input.bodyUsed = true;\n        }\n      } else {\n        this.url = String(input);\n      }\n\n      this.credentials = options.credentials || this.credentials || 'omit';\n\n      if (options.headers || !this.headers) {\n        this.headers = new Headers(options.headers);\n      }\n\n      this.method = normalizeMethod(options.method || this.method || 'GET');\n      this.mode = options.mode || this.mode || null;\n      this.referrer = null;\n\n      if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n        throw new TypeError('Body not allowed for GET or HEAD requests');\n      }\n\n      this._initBody(body);\n    }\n\n    Request.prototype.clone = function () {\n      return new Request(this, {\n        body: this._bodyInit\n      });\n    };\n\n    function decode(body) {\n      var form = new FormData();\n      body.trim().split('&').forEach(function (bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n      return form;\n    }\n\n    function parseHeaders(rawHeaders) {\n      var headers = new Headers(); // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n      // https://tools.ietf.org/html/rfc7230#section-3.2\n\n      var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n      preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n        var parts = line.split(':');\n        var key = parts.shift().trim();\n\n        if (key) {\n          var value = parts.join(':').trim();\n          headers.append(key, value);\n        }\n      });\n      return headers;\n    }\n\n    Body.call(Request.prototype);\n\n    function Response(bodyInit, options) {\n      if (!options) {\n        options = {};\n      }\n\n      this.type = 'default';\n      this.status = options.status === undefined ? 200 : options.status;\n      this.ok = this.status >= 200 && this.status < 300;\n      this.statusText = 'statusText' in options ? options.statusText : 'OK';\n      this.headers = new Headers(options.headers);\n      this.url = options.url || '';\n\n      this._initBody(bodyInit);\n    }\n\n    Body.call(Response.prototype);\n\n    Response.prototype.clone = function () {\n      return new Response(this._bodyInit, {\n        status: this.status,\n        statusText: this.statusText,\n        headers: new Headers(this.headers),\n        url: this.url\n      });\n    };\n\n    Response.error = function () {\n      var response = new Response(null, {\n        status: 0,\n        statusText: ''\n      });\n      response.type = 'error';\n      return response;\n    };\n\n    var redirectStatuses = [301, 302, 303, 307, 308];\n\n    Response.redirect = function (url, status) {\n      if (redirectStatuses.indexOf(status) === -1) {\n        throw new RangeError('Invalid status code');\n      }\n\n      return new Response(null, {\n        status: status,\n        headers: {\n          location: url\n        }\n      });\n    };\n\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n\n    self.fetch = function (input, init) {\n      return new Promise(function (resolve, reject) {\n        var request = new Request(input, init);\n        var xhr = new XMLHttpRequest();\n\n        xhr.onload = function () {\n          var options = {\n            status: xhr.status,\n            statusText: xhr.statusText,\n            headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n          };\n          options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n          var body = 'response' in xhr ? xhr.response : xhr.responseText;\n          resolve(new Response(body, options));\n        };\n\n        xhr.onerror = function () {\n          reject(new TypeError('Network request failed'));\n        };\n\n        xhr.ontimeout = function () {\n          reject(new TypeError('Network request failed'));\n        };\n\n        xhr.open(request.method, request.url, true);\n\n        if (request.credentials === 'include') {\n          xhr.withCredentials = true;\n        } else if (request.credentials === 'omit') {\n          xhr.withCredentials = false;\n        }\n\n        if ('responseType' in xhr && support.blob) {\n          xhr.responseType = 'blob';\n        }\n\n        request.headers.forEach(function (value, name) {\n          xhr.setRequestHeader(name, value);\n        });\n        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n      });\n    };\n\n    self.fetch.polyfill = true;\n  })(typeof self !== 'undefined' ? self : undefined);\n\n  (function (RPCMethod) {\n    // Network-related methods\n    RPCMethod[\"GetNetworkId\"] = \"GetNetworkId\"; // Blockchain-related methods\n\n    RPCMethod[\"GetBlockchainInfo\"] = \"GetBlockchainInfo\";\n    RPCMethod[\"GetShardingStructure\"] = \"GetShardingStructure\";\n    RPCMethod[\"GetDSBlock\"] = \"GetDsBlock\";\n    RPCMethod[\"GetLatestDSBlock\"] = \"GetLatestDsBlock\";\n    RPCMethod[\"GetNumDSBlocks\"] = \"GetNumDSBlocks\";\n    RPCMethod[\"GetDSBlockRate\"] = \"GetDSBlockRate\";\n    RPCMethod[\"DSBlockListing\"] = \"DSBlockListing\";\n    RPCMethod[\"GetTxBlock\"] = \"GetTxBlock\";\n    RPCMethod[\"GetLatestTxBlock\"] = \"GetLatestTxBlock\";\n    RPCMethod[\"GetNumTxBlocks\"] = \"GetNumTxBlocks\";\n    RPCMethod[\"GetTxBlockRate\"] = \"GetTxBlockRate\";\n    RPCMethod[\"TxBlockListing\"] = \"TxBlockListing\";\n    RPCMethod[\"GetNumTransactions\"] = \"GetNumTransactions\";\n    RPCMethod[\"GetTransactionRate\"] = \"GetTransactionRate\";\n    RPCMethod[\"GetCurrentMiniEpoch\"] = \"GetCurrentMiniEpoch\";\n    RPCMethod[\"GetCurrentDSEpoch\"] = \"GetCurrentDSEpoch\";\n    RPCMethod[\"GetPrevDifficulty\"] = \"GetPrevDifficulty\";\n    RPCMethod[\"GetPrevDSDifficulty\"] = \"GetPrevDSDifficulty\";\n    RPCMethod[\"GetTotalCoinSupply\"] = \"GetTotalCoinSupply\";\n    RPCMethod[\"GetMinerInfo\"] = \"GetMinerInfo\"; // Transaction-related methods\n\n    RPCMethod[\"CreateTransaction\"] = \"CreateTransaction\";\n    RPCMethod[\"GetTransaction\"] = \"GetTransaction\";\n    RPCMethod[\"GetTransactionStatus\"] = \"GetTransactionStatus\";\n    RPCMethod[\"GetRecentTransactions\"] = \"GetRecentTransactions\";\n    RPCMethod[\"GetTransactionsForTxBlock\"] = \"GetTransactionsForTxBlock\";\n    RPCMethod[\"GetTransactionsForTxBlockEx\"] = \"GetTransactionsForTxBlockEx\";\n    RPCMethod[\"GetTxnBodiesForTxBlock\"] = \"GetTxnBodiesForTxBlock\";\n    RPCMethod[\"GetTxnBodiesForTxBlockEx\"] = \"GetTxnBodiesForTxBlockEx\";\n    RPCMethod[\"GetNumTxnsTxEpoch\"] = \"GetNumTxnsTxEpoch\";\n    RPCMethod[\"GetNumTxnsDSEpoch\"] = \"GetNumTxnsDSEpoch\";\n    RPCMethod[\"GetMinimumGasPrice\"] = \"GetMinimumGasPrice\"; // Contract-related methods\n\n    RPCMethod[\"GetContractAddressFromTransactionID\"] = \"GetContractAddressFromTransactionID\";\n    RPCMethod[\"GetSmartContracts\"] = \"GetSmartContracts\";\n    RPCMethod[\"GetSmartContractCode\"] = \"GetSmartContractCode\";\n    RPCMethod[\"GetSmartContractInit\"] = \"GetSmartContractInit\";\n    RPCMethod[\"GetSmartContractState\"] = \"GetSmartContractState\";\n    RPCMethod[\"GetSmartContractSubState\"] = \"GetSmartContractSubState\";\n    RPCMethod[\"GetStateProof\"] = \"GetStateProof\"; // Account-related methods\n\n    RPCMethod[\"GetBalance\"] = \"GetBalance\";\n  })(exports.RPCMethod || (exports.RPCMethod = {}));\n\n  (function (RPCErrorCode) {\n    // Standard JSON-RPC 2.0 errors\n    // RPC_INVALID_REQUEST is internally mapped to HTTP_BAD_REQUEST (400).\n    // It should not be used for application-layer errors.\n    RPCErrorCode[RPCErrorCode[\"RPC_INVALID_REQUEST\"] = -32600] = \"RPC_INVALID_REQUEST\"; // RPC_METHOD_NOT_FOUND is internally mapped to HTTP_NOT_FOUND (404).\n    // It should not be used for application-layer errors.\n\n    RPCErrorCode[RPCErrorCode[\"RPC_METHOD_NOT_FOUND\"] = -32601] = \"RPC_METHOD_NOT_FOUND\";\n    RPCErrorCode[RPCErrorCode[\"RPC_INVALID_PARAMS\"] = -32602] = \"RPC_INVALID_PARAMS\"; // RPC_INTERNAL_ERROR should only be used for genuine errors in bitcoind\n    // (for example datadir corruption).\n\n    RPCErrorCode[RPCErrorCode[\"RPC_INTERNAL_ERROR\"] = -32603] = \"RPC_INTERNAL_ERROR\";\n    RPCErrorCode[RPCErrorCode[\"RPC_PARSE_ERROR\"] = -32700] = \"RPC_PARSE_ERROR\"; // General application defined errors\n\n    RPCErrorCode[RPCErrorCode[\"RPC_MISC_ERROR\"] = -1] = \"RPC_MISC_ERROR\";\n    RPCErrorCode[RPCErrorCode[\"RPC_TYPE_ERROR\"] = -3] = \"RPC_TYPE_ERROR\";\n    RPCErrorCode[RPCErrorCode[\"RPC_INVALID_ADDRESS_OR_KEY\"] = -5] = \"RPC_INVALID_ADDRESS_OR_KEY\";\n    RPCErrorCode[RPCErrorCode[\"RPC_INVALID_PARAMETER\"] = -8] = \"RPC_INVALID_PARAMETER\";\n    RPCErrorCode[RPCErrorCode[\"RPC_DATABASE_ERROR\"] = -20] = \"RPC_DATABASE_ERROR\";\n    RPCErrorCode[RPCErrorCode[\"RPC_DESERIALIZATION_ERROR\"] = -22] = \"RPC_DESERIALIZATION_ERROR\";\n    RPCErrorCode[RPCErrorCode[\"RPC_VERIFY_ERROR\"] = -25] = \"RPC_VERIFY_ERROR\";\n    RPCErrorCode[RPCErrorCode[\"RPC_VERIFY_REJECTED\"] = -26] = \"RPC_VERIFY_REJECTED\";\n    RPCErrorCode[RPCErrorCode[\"RPC_IN_WARMUP\"] = -28] = \"RPC_IN_WARMUP\";\n    RPCErrorCode[RPCErrorCode[\"RPC_METHOD_DEPRECATED\"] = -32] = \"RPC_METHOD_DEPRECATED\";\n  })(exports.RPCErrorCode || (exports.RPCErrorCode = {}));\n\n  var DEFAULT_HEADERS = {\n    'Content-Type': 'application/json'\n  };\n\n  var performRPC = function (request, handler) {\n    return tslib.__awaiter(void 0, void 0, void 0, function () {\n      var response, err_1;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , fetch(request.url, {\n              method: 'POST',\n              cache: 'no-cache',\n              mode: 'cors',\n              redirect: 'follow',\n              referrer: 'no-referrer',\n              body: JSON.stringify(request.payload),\n              headers: tslib.__assign(tslib.__assign({}, DEFAULT_HEADERS), request.options && request.options.headers || {})\n            })];\n\n          case 1:\n            response = _a.sent();\n            return [2\n            /*return*/\n            , response.json().then(function (body) {\n              return tslib.__assign(tslib.__assign({}, body), {\n                req: request\n              });\n            }).then(handler)];\n\n          case 2:\n            err_1 = _a.sent();\n            throw err_1;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // identical to performRPC; difference is the response\n\n\n  var performBatchRPC = function (request, handler) {\n    return tslib.__awaiter(void 0, void 0, void 0, function () {\n      var response, err_2;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , fetch(request.url, {\n              method: 'POST',\n              cache: 'no-cache',\n              mode: 'cors',\n              redirect: 'follow',\n              referrer: 'no-referrer',\n              body: JSON.stringify(request.payload),\n              headers: tslib.__assign(tslib.__assign({}, DEFAULT_HEADERS), request.options && request.options.headers || {})\n            })];\n\n          case 1:\n            response = _a.sent();\n            return [2\n            /*return*/\n            , response.json().then(function (batch_result) {\n              return {\n                batch_result: batch_result,\n                req: request\n              };\n            }) // no handler as compared to performRPC to preserve the body array\n            // e.g. response\n\n            /*\r\n            { body:\r\n            [ { id: 1, jsonrpc: '2.0', result: [Object] },\r\n              { id: 1, jsonrpc: '2.0', result: [Object] } ],\r\n            req:\r\n            { url: 'https://dev-api.zilliqa.com',\r\n              payload: [ [Object], [Object] ] } }\r\n            */\n            .then()];\n\n          case 2:\n            err_2 = _a.sent();\n            throw err_2;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; //  Copyright (C) 2018 Zilliqa\n  //\n  //  This file is part of zilliqa-js\n  //\n  //  This program is free software: you can redistribute it and/or modify\n  //  it under the terms of the GNU General Public License as published by\n  //  the Free Software Foundation, either version 3 of the License, or\n  //  (at your option) any later version.\n  //\n  //  This program is distributed in the hope that it will be useful,\n  //  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  //  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  //  GNU General Public License for more details.\n  //\n  //  You should have received a copy of the GNU General Public License\n  //  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n\n  function isValidResponse(response) {\n    if (response.jsonrpc === '2.0' && (response.id === '1' || response.id === 1) && (response.error || response.result)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function composeMiddleware() {\n    var fns = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      fns[_i] = arguments[_i];\n    }\n\n    if (fns.length === 0) {\n      return function (arg) {\n        return arg;\n      };\n    }\n\n    if (fns.length === 1) {\n      return fns[0];\n    }\n\n    return fns.reduce(function (a, b) {\n      return function (arg) {\n        return a(b(arg));\n      };\n    });\n  } //  Copyright (C) 2018 Zilliqa\n\n\n  var MiddlewareType;\n\n  (function (MiddlewareType) {\n    MiddlewareType[MiddlewareType[\"REQ\"] = 0] = \"REQ\";\n    MiddlewareType[MiddlewareType[\"RES\"] = 1] = \"RES\";\n  })(MiddlewareType || (MiddlewareType = {}));\n\n  var BaseProvider =\n  /** @class */\n  function () {\n    function BaseProvider(nodeURL, reqMiddleware, resMiddleware) {\n      var _this = this;\n\n      if (reqMiddleware === void 0) {\n        reqMiddleware = new Map();\n      }\n\n      if (resMiddleware === void 0) {\n        resMiddleware = new Map();\n      }\n\n      this.middleware = {\n        request: {\n          use: function (fn, match) {\n            if (match === void 0) {\n              match = '*';\n            }\n\n            _this.pushMiddleware(fn, 0\n            /* REQ */\n            , match);\n          }\n        },\n        response: {\n          use: function (fn, match) {\n            if (match === void 0) {\n              match = '*';\n            }\n\n            _this.pushMiddleware(fn, 1\n            /* RES */\n            , match);\n          }\n        }\n      };\n      this.nodeURL = nodeURL;\n      this.reqMiddleware = reqMiddleware;\n      this.resMiddleware = resMiddleware;\n    }\n    /**\r\n     * pushMiddleware\r\n     *\r\n     * Adds the middleware to the appropriate middleware map.\r\n     *\r\n     * @param {ResMiddlewareFn}\r\n     * @param {T} type\r\n     * @param {Matcher} match\r\n     * @returns {void}\r\n     */\n\n\n    BaseProvider.prototype.pushMiddleware = function (fn, type, match) {\n      if (type !== 0\n      /* REQ */\n      && type !== 1\n      /* RES */\n      ) {\n        throw new Error('Please specify the type of middleware being added');\n      }\n\n      if (type === 0\n      /* REQ */\n      ) {\n        var current = this.reqMiddleware.get(match) || [];\n        this.reqMiddleware.set(match, tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(current), false), [fn], false));\n      } else {\n        var current = this.resMiddleware.get(match) || [];\n        this.resMiddleware.set(match, tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(current), false), [fn], false));\n      }\n    };\n    /**\r\n     * getMiddleware\r\n     *\r\n     * Returns the middleware that matches the matcher provided. Note that\r\n     * middleware are called in order of specificity: string -> regexp ->\r\n     * wildcard.\r\n     *\r\n     * @param {Matcher} match\r\n     * @returns {[ReqMiddlewareFn[], ResMiddlewareFn[]]}\r\n     */\n\n\n    BaseProvider.prototype.getMiddleware = function (method) {\n      var e_1, _a, e_2, _b;\n\n      var reqFns = [];\n      var resFns = [];\n\n      try {\n        for (var _c = tslib.__values(this.reqMiddleware.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var _e = tslib.__read(_d.value, 2),\n              key = _e[0],\n              transformers = _e[1];\n\n          if (typeof key === 'string' && key !== '*' && key === method) {\n            reqFns.push.apply(reqFns, tslib.__spreadArray([], tslib.__read(transformers), false));\n          }\n\n          if (key instanceof RegExp && key.test(method)) {\n            reqFns.push.apply(reqFns, tslib.__spreadArray([], tslib.__read(transformers), false));\n          }\n\n          if (key === '*') {\n            reqFns.push.apply(reqFns, tslib.__spreadArray([], tslib.__read(transformers), false));\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      try {\n        for (var _f = tslib.__values(this.resMiddleware.entries()), _g = _f.next(); !_g.done; _g = _f.next()) {\n          var _h = tslib.__read(_g.value, 2),\n              key = _h[0],\n              transformers = _h[1];\n\n          if (typeof key === 'string' && key !== '*' && key === method) {\n            resFns.push.apply(resFns, tslib.__spreadArray([], tslib.__read(transformers), false));\n          }\n\n          if (key instanceof RegExp && key.test(method)) {\n            resFns.push.apply(resFns, tslib.__spreadArray([], tslib.__read(transformers), false));\n          }\n\n          if (key === '*') {\n            resFns.push.apply(resFns, tslib.__spreadArray([], tslib.__read(transformers), false));\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n\n      return [reqFns, resFns];\n    };\n\n    return BaseProvider;\n  }(); //  Copyright (C) 2018 Zilliqa\n\n\n  var HTTPProvider =\n  /** @class */\n  function (_super) {\n    tslib.__extends(HTTPProvider, _super);\n\n    function HTTPProvider() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    HTTPProvider.prototype.buildPayload = function (method, params) {\n      return {\n        url: this.nodeURL,\n        payload: {\n          id: 1,\n          jsonrpc: '2.0',\n          method: method,\n          params: params\n        }\n      };\n    };\n\n    HTTPProvider.prototype.buildBatchPayload = function (method, paramsList) {\n      var payloads = [];\n\n      for (var i = 0; i < paramsList.length; i++) {\n        // most of the payloads should be a single param, e.g. GetTransaction\n        // however, there are special cases e.g. GetSmartContractSubState & GetTransactionsForTxBlockEx\n        // where the param field is a list\n        var payloadParams = paramsList[i];\n        var params = void 0;\n\n        if (Array.isArray(payloadParams)) {\n          // for those param field that is already a list\n          params = payloadParams;\n        } else {\n          params = [payloadParams];\n        } // id start from index 1\n\n\n        payloads.push({\n          id: i + 1,\n          jsonrpc: '2.0',\n          method: method,\n          params: params\n        });\n      }\n\n      return {\n        url: this.nodeURL,\n        payload: payloads\n      };\n    };\n\n    HTTPProvider.prototype.send = function (method) {\n      var params = [];\n\n      for (var _i = 1; _i < arguments.length; _i++) {\n        params[_i - 1] = arguments[_i];\n      }\n\n      var _a = tslib.__read(this.getMiddleware(method), 2),\n          tReq = _a[0],\n          tRes = _a[1];\n\n      var reqMiddleware = composeMiddleware.apply(void 0, tslib.__spreadArray([], tslib.__read(tReq), false));\n      var resMiddleware = composeMiddleware.apply(void 0, tslib.__spreadArray([], tslib.__read(tRes), false));\n      var req = reqMiddleware(this.buildPayload(method, params));\n      return performRPC(req, resMiddleware);\n    };\n\n    HTTPProvider.prototype.sendBatch = function (method, params) {\n      var _a = tslib.__read(this.getMiddleware(method), 2),\n          tReq = _a[0],\n          tRes = _a[1];\n\n      var reqMiddleware = composeMiddleware.apply(void 0, tslib.__spreadArray([], tslib.__read(tReq), false));\n      var resMiddleware = composeMiddleware.apply(void 0, tslib.__spreadArray([], tslib.__read(tRes), false));\n      var batchPayload = this.buildBatchPayload(method, params);\n      var req = reqMiddleware(batchPayload);\n      return performBatchRPC(req, resMiddleware);\n    };\n\n    HTTPProvider.prototype.subscribe = function (event, subscriber) {\n      throw new Error('HTTPProvider does not support subscriptions.');\n    };\n\n    HTTPProvider.prototype.unsubscribe = function (token) {\n      throw new Error('HTTPProvider does not support subscriptions.');\n    };\n\n    return HTTPProvider;\n  }(BaseProvider); //  Copyright (C) 2018 Zilliqa\n  //\n  //  This file is part of zilliqa-js\n  //\n  //  This program is free software: you can redistribute it and/or modify\n  //  it under the terms of the GNU General Public License as published by\n  //  the Free Software Foundation, either version 3 of the License, or\n  //  (at your option) any later version.\n  //\n  //  This program is distributed in the hope that it will be useful,\n  //  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  //  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  //  GNU General Public License for more details.\n  //\n  //  You should have received a copy of the GNU General Public License\n  //  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n  // this constant is used to indicate the number of times to poll the\n  // blockchain for a transaction confirmation. this number has been selected by\n  // using a heuristic to calculate the approximate maximum amount of time it\n  // should take for a transaction to be confirmed, even during a PoW submission\n  // round.\n\n\n  var GET_TX_ATTEMPTS = 33; //  Copyright (C) 2018 Zilliqa\n\n  var EventEmitter =\n  /** @class */\n  function () {\n    function EventEmitter() {\n      var _this = this;\n\n      this.handlers = {};\n      this.emitter = new mitt(this.handlers);\n      this.off = this.emitter.off.bind(this);\n      this.emit = this.emitter.emit.bind(this);\n      this.promise = new Promise(function (resolve, reject) {\n        _this.resolve = resolve;\n        _this.reject = reject;\n      });\n      this.then = this.promise.then.bind(this.promise);\n    }\n\n    EventEmitter.prototype.resetHandlers = function () {\n      for (var i in this.handlers) {\n        delete this.handlers[i];\n      }\n    };\n\n    EventEmitter.prototype.on = function (type, handler) {\n      this.emitter.on(type, handler);\n      return this;\n    };\n\n    EventEmitter.prototype.once = function (type, handler) {\n      var _this = this;\n\n      this.emitter.on(type, function (e) {\n        handler(e);\n\n        _this.removeEventListener(type);\n      });\n    };\n\n    EventEmitter.prototype.addEventListener = function (type, handler) {\n      this.emitter.on(type, handler);\n    };\n\n    EventEmitter.prototype.removeEventListener = function (type, handler) {\n      if (!type) {\n        this.handlers = {};\n        return;\n      }\n\n      if (!handler) {\n        delete this.handlers[type];\n      } else {\n        return this.emitter.off(type, handler);\n      }\n    };\n\n    EventEmitter.prototype.onError = function (error) {\n      this.emitter.on('error', error);\n      this.removeEventListener('*');\n    };\n\n    EventEmitter.prototype.onData = function (data) {\n      this.emitter.on('data', data);\n      this.removeEventListener('*');\n    };\n\n    EventEmitter.prototype.listenerCount = function (listenKey) {\n      var count = 0;\n      Object.keys(this.handlers).forEach(function (val) {\n        if (listenKey === val) {\n          count += 1;\n        }\n      });\n      return count;\n    };\n\n    return EventEmitter;\n  }(); //  Copyright (C) 2018 Zilliqa\n\n\n  exports.Signer = Signer;\n  exports.sign = sign;\n  exports.performRPC = performRPC;\n  exports.performBatchRPC = performBatchRPC;\n  exports.isValidResponse = isValidResponse;\n  exports.composeMiddleware = composeMiddleware;\n  exports.HTTPProvider = HTTPProvider;\n  exports.GET_TX_ATTEMPTS = GET_TX_ATTEMPTS;\n  exports.EventEmitter = EventEmitter;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"mappings":";;;;;0EAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EA4BA;EAAA;EAAA;IAAA,mBAEC;;IAAD;EAAC,CAFD;;EA8IA,WAAYA,gBAAZ,EAA4B;IAC1BA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;EACD,CArBD,EAAYA,wDAAgB,EAAhBA,CAAZ,GCzLA;;EAmBA;;;;;;;;;;;;;EAWA,IAAaC,IAAI,GAAG,UAClBC,MADkB,EAElBC,GAFkB,EAGlBC,UAHkB,EAGY;IAE9B,IAAMC,QAAQ,GAAGD,UAAU,CAACE,KAA5B;;IAEA,SAAeC,WAAf,CAEEC,GAFF,EAEe;MACb;;WAAA,yCAAc;QAAdC;;;;;;;;oBAEIJ,QAAQ,IAAIG,GAAG,CAACE,QAAhB;cAAA;cAAA;cACa;cAAA;cAAA,EAAM,KAAKC,MAAL,CAAYV,IAAZ,CAAiBO,GAAjB,CAAN;;;cAATI,MAAM,GAAGC,SAAT;cACN;cAAA;cAAA,EAAOR,QAAQ,CAACS,IAAT,CAAaC,KAAb,WAAQC,qBAAM,IAAN,EAAYJ,MAAZ,GAAkBI,aAAKP,IAAL,CAAlB,EAA2B,KAA3B,CAAR,CAAP;;;;;;;;;IAEH;;IAEDL,UAAU,CAACE,KAAX,GAAmBC,WAAnB;IACA,OAAOH,UAAP;EACD,CApBD,EC9BA;;;ECAA,CAAC,UAASa,IAAT,EAAe;IAEd,IAAIA,IAAI,CAACC,KAAT,EAAgB;MACd;IACD;;IAED,IAAIC,OAAO,GAAG;MACZC,YAAY,EAAE,qBAAqBH,IADvB;MAEZI,QAAQ,EAAE,YAAYJ,IAAZ,IAAoB,cAAcK,MAFhC;MAGZC,IAAI,EAAE,gBAAgBN,IAAhB,IAAwB,UAAUA,IAAlC,IAA2C,YAAW;QAC1D,IAAI;UACF,IAAIO,IAAJ;UACA,OAAO,IAAP;QACD,CAHD,CAGE,OAAMC,CAAN,EAAS;UACT,OAAO,KAAP;QACD;MACF,CAP+C,EAHpC;MAWZC,QAAQ,EAAE,cAAcT,IAXZ;MAYZU,WAAW,EAAE,iBAAiBV;IAZlB,CAAd;;IAeA,IAAIE,OAAO,CAACQ,WAAZ,EAAyB;MACvB,IAAIC,WAAW,GAAG,CAChB,oBADgB,EAEhB,qBAFgB,EAGhB,4BAHgB,EAIhB,qBAJgB,EAKhB,sBALgB,EAMhB,qBANgB,EAOhB,sBAPgB,EAQhB,uBARgB,EAShB,uBATgB,CAAlB;;MAYA,IAAIC,UAAU,GAAG,UAASC,GAAT,EAAc;QAC7B,OAAOA,GAAG,IAAIC,QAAQ,CAACC,SAAT,CAAmBC,aAAnB,CAAiCH,GAAjC,CAAd;MACD,CAFD;;MAIA,IAAII,iBAAiB,GAAGC,WAAW,CAACC,MAAZ,IAAsB,UAASN,GAAT,EAAc;QAC1D,OAAOA,GAAG,IAAIF,WAAW,CAACS,OAAZ,CAAoBC,MAAM,CAACN,SAAP,CAAiBO,QAAjB,CAA0BzB,IAA1B,CAA+BgB,GAA/B,CAApB,IAA2D,CAAC,CAA1E;MACD,CAFD;IAGD;;IAED,SAASU,aAAT,CAAuBC,IAAvB,EAA6B;MAC3B,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;QAC5BA,IAAI,GAAGC,MAAM,CAACD,IAAD,CAAb;MACD;;MACD,IAAI,6BAA6BE,IAA7B,CAAkCF,IAAlC,CAAJ,EAA6C;QAC3C,MAAM,IAAIG,SAAJ,CAAc,wCAAd,CAAN;MACD;;MACD,OAAOH,IAAI,CAACI,WAAL,EAAP;IACD;;IAED,SAASC,cAAT,CAAwBxC,KAAxB,EAA+B;MAC7B,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;QAC7BA,KAAK,GAAGoC,MAAM,CAACpC,KAAD,CAAd;MACD;;MACD,OAAOA,KAAP;IACD,CA1Da,CA4DhB;;;IACE,SAASyC,WAAT,CAAqBC,KAArB,EAA4B;MAC1B,IAAIC,QAAQ,GAAG;QACbC,IAAI,EAAE,YAAW;UACf,IAAI5C,KAAK,GAAG0C,KAAK,CAACG,KAAN,EAAZ;UACA,OAAO;YAACC,IAAI,EAAE9C,KAAK,KAAK+C,SAAjB;YAA4B/C,KAAK,EAAEA;UAAnC,CAAP;QACD;MAJY,CAAf;;MAOA,IAAIa,OAAO,CAACE,QAAZ,EAAsB;QACpB4B,QAAQ,CAAC3B,MAAM,CAAC2B,QAAR,CAAR,GAA4B,YAAW;UACrC,OAAOA,QAAP;QACD,CAFD;MAGD;;MAED,OAAOA,QAAP;IACD;;IAED,SAASK,OAAT,CAAiBC,OAAjB,EAA0B;MACxB,KAAKC,GAAL,GAAW,EAAX;;MAEA,IAAID,OAAO,YAAYD,OAAvB,EAAgC;QAC9BC,OAAO,CAACE,OAAR,CAAgB,UAASnD,KAAT,EAAgBmC,IAAhB,EAAsB;UACpC,KAAKiB,MAAL,CAAYjB,IAAZ,EAAkBnC,KAAlB;QACD,CAFD,EAEG,IAFH;MAGD,CAJD,MAIO,IAAIqD,KAAK,CAACC,OAAN,CAAcL,OAAd,CAAJ,EAA4B;QACjCA,OAAO,CAACE,OAAR,CAAgB,UAASI,MAAT,EAAiB;UAC/B,KAAKH,MAAL,CAAYG,MAAM,CAAC,CAAD,CAAlB,EAAuBA,MAAM,CAAC,CAAD,CAA7B;QACD,CAFD,EAEG,IAFH;MAGD,CAJM,MAIA,IAAIN,OAAJ,EAAa;QAClBjB,MAAM,CAACwB,mBAAP,CAA2BP,OAA3B,EAAoCE,OAApC,CAA4C,UAAShB,IAAT,EAAe;UACzD,KAAKiB,MAAL,CAAYjB,IAAZ,EAAkBc,OAAO,CAACd,IAAD,CAAzB;QACD,CAFD,EAEG,IAFH;MAGD;IACF;;IAEDa,OAAO,CAACtB,SAAR,CAAkB0B,MAAlB,GAA2B,UAASjB,IAAT,EAAenC,KAAf,EAAsB;MAC/CmC,IAAI,GAAGD,aAAa,CAACC,IAAD,CAApB;MACAnC,KAAK,GAAGwC,cAAc,CAACxC,KAAD,CAAtB;MACA,IAAIyD,QAAQ,GAAG,KAAKP,GAAL,CAASf,IAAT,CAAf;MACA,KAAKe,GAAL,CAASf,IAAT,IAAiBsB,QAAQ,GAAGA,QAAQ,GAAC,GAAT,GAAazD,KAAhB,GAAwBA,KAAjD;IACD,CALD;;IAOAgD,OAAO,CAACtB,SAAR,CAAkB,QAAlB,IAA8B,UAASS,IAAT,EAAe;MAC3C,OAAO,KAAKe,GAAL,CAAShB,aAAa,CAACC,IAAD,CAAtB,CAAP;IACD,CAFD;;IAIAa,OAAO,CAACtB,SAAR,CAAkBgC,GAAlB,GAAwB,UAASvB,IAAT,EAAe;MACrCA,IAAI,GAAGD,aAAa,CAACC,IAAD,CAApB;MACA,OAAO,KAAKwB,GAAL,CAASxB,IAAT,IAAiB,KAAKe,GAAL,CAASf,IAAT,CAAjB,GAAkC,IAAzC;IACD,CAHD;;IAKAa,OAAO,CAACtB,SAAR,CAAkBiC,GAAlB,GAAwB,UAASxB,IAAT,EAAe;MACrC,OAAO,KAAKe,GAAL,CAASU,cAAT,CAAwB1B,aAAa,CAACC,IAAD,CAArC,CAAP;IACD,CAFD;;IAIAa,OAAO,CAACtB,SAAR,CAAkBmC,GAAlB,GAAwB,UAAS1B,IAAT,EAAenC,KAAf,EAAsB;MAC5C,KAAKkD,GAAL,CAAShB,aAAa,CAACC,IAAD,CAAtB,IAAgCK,cAAc,CAACxC,KAAD,CAA9C;IACD,CAFD;;IAIAgD,OAAO,CAACtB,SAAR,CAAkByB,OAAlB,GAA4B,UAASW,QAAT,EAAmBC,OAAnB,EAA4B;MACtD,KAAK,IAAI5B,IAAT,IAAiB,KAAKe,GAAtB,EAA2B;QACzB,IAAI,KAAKA,GAAL,CAASU,cAAT,CAAwBzB,IAAxB,CAAJ,EAAmC;UACjC2B,QAAQ,CAACtD,IAAT,CAAcuD,OAAd,EAAuB,KAAKb,GAAL,CAASf,IAAT,CAAvB,EAAuCA,IAAvC,EAA6C,IAA7C;QACD;MACF;IACF,CAND;;IAQAa,OAAO,CAACtB,SAAR,CAAkBsC,IAAlB,GAAyB,YAAW;MAClC,IAAItB,KAAK,GAAG,EAAZ;MACA,KAAKS,OAAL,CAAa,UAASnD,KAAT,EAAgBmC,IAAhB,EAAsB;QAAEO,KAAK,CAACuB,IAAN,CAAW9B,IAAX;MAAmB,CAAxD;MACA,OAAOM,WAAW,CAACC,KAAD,CAAlB;IACD,CAJD;;IAMAM,OAAO,CAACtB,SAAR,CAAkBwC,MAAlB,GAA2B,YAAW;MACpC,IAAIxB,KAAK,GAAG,EAAZ;MACA,KAAKS,OAAL,CAAa,UAASnD,KAAT,EAAgB;QAAE0C,KAAK,CAACuB,IAAN,CAAWjE,KAAX;MAAoB,CAAnD;MACA,OAAOyC,WAAW,CAACC,KAAD,CAAlB;IACD,CAJD;;IAMAM,OAAO,CAACtB,SAAR,CAAkByC,OAAlB,GAA4B,YAAW;MACrC,IAAIzB,KAAK,GAAG,EAAZ;MACA,KAAKS,OAAL,CAAa,UAASnD,KAAT,EAAgBmC,IAAhB,EAAsB;QAAEO,KAAK,CAACuB,IAAN,CAAW,CAAC9B,IAAD,EAAOnC,KAAP,CAAX;MAA4B,CAAjE;MACA,OAAOyC,WAAW,CAACC,KAAD,CAAlB;IACD,CAJD;;IAMA,IAAI7B,OAAO,CAACE,QAAZ,EAAsB;MACpBiC,OAAO,CAACtB,SAAR,CAAkBV,MAAM,CAAC2B,QAAzB,IAAqCK,OAAO,CAACtB,SAAR,CAAkByC,OAAvD;IACD;;IAED,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;MACtB,IAAIA,IAAI,CAACC,QAAT,EAAmB;QACjB,OAAOC,OAAO,CAACC,MAAR,CAAe,IAAIlC,SAAJ,CAAc,cAAd,CAAf,CAAP;MACD;;MACD+B,IAAI,CAACC,QAAL,GAAgB,IAAhB;IACD;;IAED,SAASG,eAAT,CAAyBC,MAAzB,EAAiC;MAC/B,OAAO,IAAIH,OAAJ,CAAY,UAASI,OAAT,EAAkBH,MAAlB,EAA0B;QAC3CE,MAAM,CAACE,MAAP,GAAgB,YAAW;UACzBD,OAAO,CAACD,MAAM,CAACG,MAAR,CAAP;QACD,CAFD;;QAGAH,MAAM,CAACI,OAAP,GAAiB,YAAW;UAC1BN,MAAM,CAACE,MAAM,CAACK,KAAR,CAAN;QACD,CAFD;MAGD,CAPM,CAAP;IAQD;;IAED,SAASC,qBAAT,CAA+B/D,IAA/B,EAAqC;MACnC,IAAIyD,MAAM,GAAG,IAAIO,UAAJ,EAAb;MACA,IAAIC,OAAO,GAAGT,eAAe,CAACC,MAAD,CAA7B;MACAA,MAAM,CAACS,iBAAP,CAAyBlE,IAAzB;MACA,OAAOiE,OAAP;IACD;;IAED,SAASE,cAAT,CAAwBnE,IAAxB,EAA8B;MAC5B,IAAIyD,MAAM,GAAG,IAAIO,UAAJ,EAAb;MACA,IAAIC,OAAO,GAAGT,eAAe,CAACC,MAAD,CAA7B;MACAA,MAAM,CAACW,UAAP,CAAkBpE,IAAlB;MACA,OAAOiE,OAAP;IACD;;IAED,SAASI,qBAAT,CAA+BC,GAA/B,EAAoC;MAClC,IAAIC,IAAI,GAAG,IAAIC,UAAJ,CAAeF,GAAf,CAAX;MACA,IAAIG,KAAK,GAAG,IAAIrC,KAAJ,CAAUmC,IAAI,CAACG,MAAf,CAAZ;;MAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACG,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;QACpCF,KAAK,CAACE,CAAD,CAAL,GAAWxD,MAAM,CAACyD,YAAP,CAAoBL,IAAI,CAACI,CAAD,CAAxB,CAAX;MACD;;MACD,OAAOF,KAAK,CAACI,IAAN,CAAW,EAAX,CAAP;IACD;;IAED,SAASC,WAAT,CAAqBR,GAArB,EAA0B;MACxB,IAAIA,GAAG,CAACS,KAAR,EAAe;QACb,OAAOT,GAAG,CAACS,KAAJ,CAAU,CAAV,CAAP;MACD,CAFD,MAEO;QACL,IAAIR,IAAI,GAAG,IAAIC,UAAJ,CAAeF,GAAG,CAACU,UAAnB,CAAX;QACAT,IAAI,CAAC3B,GAAL,CAAS,IAAI4B,UAAJ,CAAeF,GAAf,CAAT;QACA,OAAOC,IAAI,CAACU,MAAZ;MACD;IACF;;IAED,SAASC,IAAT,GAAgB;MACd,KAAK7B,QAAL,GAAgB,KAAhB;;MAEA,KAAK8B,SAAL,GAAiB,UAAS/B,IAAT,EAAe;QAC9B,KAAKgC,SAAL,GAAiBhC,IAAjB;;QACA,IAAI,CAACA,IAAL,EAAW;UACT,KAAKiC,SAAL,GAAiB,EAAjB;QACD,CAFD,MAEO,IAAI,OAAOjC,IAAP,KAAgB,QAApB,EAA8B;UACnC,KAAKiC,SAAL,GAAiBjC,IAAjB;QACD,CAFM,MAEA,IAAIxD,OAAO,CAACI,IAAR,IAAgBC,IAAI,CAACQ,SAAL,CAAeC,aAAf,CAA6B0C,IAA7B,CAApB,EAAwD;UAC7D,KAAKkC,SAAL,GAAiBlC,IAAjB;QACD,CAFM,MAEA,IAAIxD,OAAO,CAACO,QAAR,IAAoBoF,QAAQ,CAAC9E,SAAT,CAAmBC,aAAnB,CAAiC0C,IAAjC,CAAxB,EAAgE;UACrE,KAAKoC,aAAL,GAAqBpC,IAArB;QACD,CAFM,MAEA,IAAIxD,OAAO,CAACC,YAAR,IAAwB4F,eAAe,CAAChF,SAAhB,CAA0BC,aAA1B,CAAwC0C,IAAxC,CAA5B,EAA2E;UAChF,KAAKiC,SAAL,GAAiBjC,IAAI,CAACpC,QAAL,EAAjB;QACD,CAFM,MAEA,IAAIpB,OAAO,CAACQ,WAAR,IAAuBR,OAAO,CAACI,IAA/B,IAAuCM,UAAU,CAAC8C,IAAD,CAArD,EAA6D;UAClE,KAAKsC,gBAAL,GAAwBZ,WAAW,CAAC1B,IAAI,CAAC6B,MAAN,CAAnC,CADkE,CAE1E;;UACQ,KAAKG,SAAL,GAAiB,IAAInF,IAAJ,CAAS,CAAC,KAAKyF,gBAAN,CAAT,CAAjB;QACD,CAJM,MAIA,IAAI9F,OAAO,CAACQ,WAAR,KAAwBQ,WAAW,CAACH,SAAZ,CAAsBC,aAAtB,CAAoC0C,IAApC,KAA6CzC,iBAAiB,CAACyC,IAAD,CAAtF,CAAJ,EAAmG;UACxG,KAAKsC,gBAAL,GAAwBZ,WAAW,CAAC1B,IAAD,CAAnC;QACD,CAFM,MAEA;UACL,MAAM,IAAIuC,KAAJ,CAAU,2BAAV,CAAN;QACD;;QAED,IAAI,CAAC,KAAK3D,OAAL,CAAaS,GAAb,CAAiB,cAAjB,CAAL,EAAuC;UACrC,IAAI,OAAOW,IAAP,KAAgB,QAApB,EAA8B;YAC5B,KAAKpB,OAAL,CAAaY,GAAb,CAAiB,cAAjB,EAAiC,0BAAjC;UACD,CAFD,MAEO,IAAI,KAAK0C,SAAL,IAAkB,KAAKA,SAAL,CAAeM,IAArC,EAA2C;YAChD,KAAK5D,OAAL,CAAaY,GAAb,CAAiB,cAAjB,EAAiC,KAAK0C,SAAL,CAAeM,IAAhD;UACD,CAFM,MAEA,IAAIhG,OAAO,CAACC,YAAR,IAAwB4F,eAAe,CAAChF,SAAhB,CAA0BC,aAA1B,CAAwC0C,IAAxC,CAA5B,EAA2E;YAChF,KAAKpB,OAAL,CAAaY,GAAb,CAAiB,cAAjB,EAAiC,iDAAjC;UACD;QACF;MACF,CA/BD;;MAiCA,IAAIhD,OAAO,CAACI,IAAZ,EAAkB;QAChB,KAAKA,IAAL,GAAY,YAAW;UACrB,IAAI6F,QAAQ,GAAG1C,QAAQ,CAAC,IAAD,CAAvB;;UACA,IAAI0C,QAAJ,EAAc;YACZ,OAAOA,QAAP;UACD;;UAED,IAAI,KAAKP,SAAT,EAAoB;YAClB,OAAOhC,OAAO,CAACI,OAAR,CAAgB,KAAK4B,SAArB,CAAP;UACD,CAFD,MAEO,IAAI,KAAKI,gBAAT,EAA2B;YAChC,OAAOpC,OAAO,CAACI,OAAR,CAAgB,IAAIzD,IAAJ,CAAS,CAAC,KAAKyF,gBAAN,CAAT,CAAhB,CAAP;UACD,CAFM,MAEA,IAAI,KAAKF,aAAT,EAAwB;YAC7B,MAAM,IAAIG,KAAJ,CAAU,sCAAV,CAAN;UACD,CAFM,MAEA;YACL,OAAOrC,OAAO,CAACI,OAAR,CAAgB,IAAIzD,IAAJ,CAAS,CAAC,KAAKoF,SAAN,CAAT,CAAhB,CAAP;UACD;QACF,CAfD;;QAiBA,KAAKjF,WAAL,GAAmB,YAAW;UAC5B,IAAI,KAAKsF,gBAAT,EAA2B;YACzB,OAAOvC,QAAQ,CAAC,IAAD,CAAR,IAAkBG,OAAO,CAACI,OAAR,CAAgB,KAAKgC,gBAArB,CAAzB;UACD,CAFD,MAEO;YACL,OAAO,KAAK1F,IAAL,GAAY8F,IAAZ,CAAiB/B,qBAAjB,CAAP;UACD;QACF,CAND;MAOD;;MAED,KAAKgC,IAAL,GAAY,YAAW;QACrB,IAAIF,QAAQ,GAAG1C,QAAQ,CAAC,IAAD,CAAvB;;QACA,IAAI0C,QAAJ,EAAc;UACZ,OAAOA,QAAP;QACD;;QAED,IAAI,KAAKP,SAAT,EAAoB;UAClB,OAAOnB,cAAc,CAAC,KAAKmB,SAAN,CAArB;QACD,CAFD,MAEO,IAAI,KAAKI,gBAAT,EAA2B;UAChC,OAAOpC,OAAO,CAACI,OAAR,CAAgBW,qBAAqB,CAAC,KAAKqB,gBAAN,CAArC,CAAP;QACD,CAFM,MAEA,IAAI,KAAKF,aAAT,EAAwB;UAC7B,MAAM,IAAIG,KAAJ,CAAU,sCAAV,CAAN;QACD,CAFM,MAEA;UACL,OAAOrC,OAAO,CAACI,OAAR,CAAgB,KAAK2B,SAArB,CAAP;QACD;MACF,CAfD;;MAiBA,IAAIzF,OAAO,CAACO,QAAZ,EAAsB;QACpB,KAAKA,QAAL,GAAgB,YAAW;UACzB,OAAO,KAAK4F,IAAL,GAAYD,IAAZ,CAAiBE,MAAjB,CAAP;QACD,CAFD;MAGD;;MAED,KAAKC,IAAL,GAAY,YAAW;QACrB,OAAO,KAAKF,IAAL,GAAYD,IAAZ,CAAiBI,IAAI,CAACC,KAAtB,CAAP;MACD,CAFD;;MAIA,OAAO,IAAP;IACD,CArSa,CAuShB;;;IACE,IAAIC,OAAO,GAAG,CAAC,QAAD,EAAW,KAAX,EAAkB,MAAlB,EAA0B,SAA1B,EAAqC,MAArC,EAA6C,KAA7C,CAAd;;IAEA,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;MAC/B,IAAIC,OAAO,GAAGD,MAAM,CAACE,WAAP,EAAd;MACA,OAAQJ,OAAO,CAACtF,OAAR,CAAgByF,OAAhB,IAA2B,CAAC,CAA7B,GAAkCA,OAAlC,GAA4CD,MAAnD;IACD;;IAED,SAASG,OAAT,CAAiBC,KAAjB,EAAwBC,OAAxB,EAAiC;MAC/BA,OAAO,GAAGA,OAAO,IAAI,EAArB;MACA,IAAIvD,IAAI,GAAGuD,OAAO,CAACvD,IAAnB;;MAEA,IAAIsD,KAAK,YAAYD,OAArB,EAA8B;QAC5B,IAAIC,KAAK,CAACrD,QAAV,EAAoB;UAClB,MAAM,IAAIhC,SAAJ,CAAc,cAAd,CAAN;QACD;;QACD,KAAKuF,GAAL,GAAWF,KAAK,CAACE,GAAjB;QACA,KAAKC,WAAL,GAAmBH,KAAK,CAACG,WAAzB;;QACA,IAAI,CAACF,OAAO,CAAC3E,OAAb,EAAsB;UACpB,KAAKA,OAAL,GAAe,IAAID,OAAJ,CAAY2E,KAAK,CAAC1E,OAAlB,CAAf;QACD;;QACD,KAAKsE,MAAL,GAAcI,KAAK,CAACJ,MAApB;QACA,KAAKQ,IAAL,GAAYJ,KAAK,CAACI,IAAlB;;QACA,IAAI,CAAC1D,IAAD,IAASsD,KAAK,CAACtB,SAAN,IAAmB,IAAhC,EAAsC;UACpChC,IAAI,GAAGsD,KAAK,CAACtB,SAAb;UACAsB,KAAK,CAACrD,QAAN,GAAiB,IAAjB;QACD;MACF,CAfD,MAeO;QACL,KAAKuD,GAAL,GAAWzF,MAAM,CAACuF,KAAD,CAAjB;MACD;;MAED,KAAKG,WAAL,GAAmBF,OAAO,CAACE,WAAR,IAAuB,KAAKA,WAA5B,IAA2C,MAA9D;;MACA,IAAIF,OAAO,CAAC3E,OAAR,IAAmB,CAAC,KAAKA,OAA7B,EAAsC;QACpC,KAAKA,OAAL,GAAe,IAAID,OAAJ,CAAY4E,OAAO,CAAC3E,OAApB,CAAf;MACD;;MACD,KAAKsE,MAAL,GAAcD,eAAe,CAACM,OAAO,CAACL,MAAR,IAAkB,KAAKA,MAAvB,IAAiC,KAAlC,CAA7B;MACA,KAAKQ,IAAL,GAAYH,OAAO,CAACG,IAAR,IAAgB,KAAKA,IAArB,IAA6B,IAAzC;MACA,KAAKC,QAAL,GAAgB,IAAhB;;MAEA,IAAI,CAAC,KAAKT,MAAL,KAAgB,KAAhB,IAAyB,KAAKA,MAAL,KAAgB,MAA1C,KAAqDlD,IAAzD,EAA+D;QAC7D,MAAM,IAAI/B,SAAJ,CAAc,2CAAd,CAAN;MACD;;MACD,KAAK8D,SAAL,CAAe/B,IAAf;IACD;;IAEDqD,OAAO,CAAChG,SAAR,CAAkBuG,KAAlB,GAA0B,YAAW;MACnC,OAAO,IAAIP,OAAJ,CAAY,IAAZ,EAAkB;QAAErD,IAAI,EAAE,KAAKgC;MAAb,CAAlB,CAAP;IACD,CAFD;;IAIA,SAASY,MAAT,CAAgB5C,IAAhB,EAAsB;MACpB,IAAI6D,IAAI,GAAG,IAAI1B,QAAJ,EAAX;MACAnC,IAAI,CAAC8D,IAAL,GAAYC,KAAZ,CAAkB,GAAlB,EAAuBjF,OAAvB,CAA+B,UAAS/C,KAAT,EAAgB;QAC7C,IAAIA,KAAJ,EAAW;UACT,IAAIgI,KAAK,GAAGhI,KAAK,CAACgI,KAAN,CAAY,GAAZ,CAAZ;UACA,IAAIjG,IAAI,GAAGiG,KAAK,CAACvF,KAAN,GAAcwF,OAAd,CAAsB,KAAtB,EAA6B,GAA7B,CAAX;UACA,IAAIrI,KAAK,GAAGoI,KAAK,CAACtC,IAAN,CAAW,GAAX,EAAgBuC,OAAhB,CAAwB,KAAxB,EAA+B,GAA/B,CAAZ;UACAH,IAAI,CAAC9E,MAAL,CAAYkF,kBAAkB,CAACnG,IAAD,CAA9B,EAAsCmG,kBAAkB,CAACtI,KAAD,CAAxD;QACD;MACF,CAPD;MAQA,OAAOkI,IAAP;IACD;;IAED,SAASK,YAAT,CAAsBC,UAAtB,EAAkC;MAChC,IAAIvF,OAAO,GAAG,IAAID,OAAJ,EAAd,CADgC,CAEpC;MACA;;MACI,IAAIyF,mBAAmB,GAAGD,UAAU,CAACH,OAAX,CAAmB,cAAnB,EAAmC,GAAnC,CAA1B;MACAI,mBAAmB,CAACL,KAApB,CAA0B,OAA1B,EAAmCjF,OAAnC,CAA2C,UAASuF,IAAT,EAAe;QACxD,IAAIC,KAAK,GAAGD,IAAI,CAACN,KAAL,CAAW,GAAX,CAAZ;QACA,IAAIvI,GAAG,GAAG8I,KAAK,CAAC9F,KAAN,GAAcsF,IAAd,EAAV;;QACA,IAAItI,GAAJ,EAAS;UACP,IAAIG,KAAK,GAAG2I,KAAK,CAAC7C,IAAN,CAAW,GAAX,EAAgBqC,IAAhB,EAAZ;UACAlF,OAAO,CAACG,MAAR,CAAevD,GAAf,EAAoBG,KAApB;QACD;MACF,CAPD;MAQA,OAAOiD,OAAP;IACD;;IAEDkD,IAAI,CAAC3F,IAAL,CAAUkH,OAAO,CAAChG,SAAlB;;IAEA,SAASkH,QAAT,CAAkBC,QAAlB,EAA4BjB,OAA5B,EAAqC;MACnC,IAAI,CAACA,OAAL,EAAc;QACZA,OAAO,GAAG,EAAV;MACD;;MAED,KAAKf,IAAL,GAAY,SAAZ;MACA,KAAKiC,MAAL,GAAclB,OAAO,CAACkB,MAAR,KAAmB/F,SAAnB,GAA+B,GAA/B,GAAqC6E,OAAO,CAACkB,MAA3D;MACA,KAAKC,EAAL,GAAU,KAAKD,MAAL,IAAe,GAAf,IAAsB,KAAKA,MAAL,GAAc,GAA9C;MACA,KAAKE,UAAL,GAAkB,gBAAgBpB,OAAhB,GAA0BA,OAAO,CAACoB,UAAlC,GAA+C,IAAjE;MACA,KAAK/F,OAAL,GAAe,IAAID,OAAJ,CAAY4E,OAAO,CAAC3E,OAApB,CAAf;MACA,KAAK4E,GAAL,GAAWD,OAAO,CAACC,GAAR,IAAe,EAA1B;;MACA,KAAKzB,SAAL,CAAeyC,QAAf;IACD;;IAED1C,IAAI,CAAC3F,IAAL,CAAUoI,QAAQ,CAAClH,SAAnB;;IAEAkH,QAAQ,CAAClH,SAAT,CAAmBuG,KAAnB,GAA2B,YAAW;MACpC,OAAO,IAAIW,QAAJ,CAAa,KAAKvC,SAAlB,EAA6B;QAClCyC,MAAM,EAAE,KAAKA,MADqB;QAElCE,UAAU,EAAE,KAAKA,UAFiB;QAGlC/F,OAAO,EAAE,IAAID,OAAJ,CAAY,KAAKC,OAAjB,CAHyB;QAIlC4E,GAAG,EAAE,KAAKA;MAJwB,CAA7B,CAAP;IAMD,CAPD;;IASAe,QAAQ,CAAC7D,KAAT,GAAiB,YAAW;MAC1B,IAAIkE,QAAQ,GAAG,IAAIL,QAAJ,CAAa,IAAb,EAAmB;QAACE,MAAM,EAAE,CAAT;QAAYE,UAAU,EAAE;MAAxB,CAAnB,CAAf;MACAC,QAAQ,CAACpC,IAAT,GAAgB,OAAhB;MACA,OAAOoC,QAAP;IACD,CAJD;;IAMA,IAAIC,gBAAgB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAvB;;IAEAN,QAAQ,CAACO,QAAT,GAAoB,UAAStB,GAAT,EAAciB,MAAd,EAAsB;MACxC,IAAII,gBAAgB,CAACnH,OAAjB,CAAyB+G,MAAzB,MAAqC,CAAC,CAA1C,EAA6C;QAC3C,MAAM,IAAIM,UAAJ,CAAe,qBAAf,CAAN;MACD;;MAED,OAAO,IAAIR,QAAJ,CAAa,IAAb,EAAmB;QAACE,MAAM,EAAEA,MAAT;QAAiB7F,OAAO,EAAE;UAACoG,QAAQ,EAAExB;QAAX;MAA1B,CAAnB,CAAP;IACD,CAND;;IAQAlH,IAAI,CAACqC,OAAL,GAAeA,OAAf;IACArC,IAAI,CAAC+G,OAAL,GAAeA,OAAf;IACA/G,IAAI,CAACiI,QAAL,GAAgBA,QAAhB;;IAEAjI,IAAI,CAACC,KAAL,GAAa,UAAS+G,KAAT,EAAgB2B,IAAhB,EAAsB;MACjC,OAAO,IAAI/E,OAAJ,CAAY,UAASI,OAAT,EAAkBH,MAAlB,EAA0B;QAC3C,IAAI+E,OAAO,GAAG,IAAI7B,OAAJ,CAAYC,KAAZ,EAAmB2B,IAAnB,CAAd;QACA,IAAIE,GAAG,GAAG,IAAIC,cAAJ,EAAV;;QAEAD,GAAG,CAAC5E,MAAJ,GAAa,YAAW;UACtB,IAAIgD,OAAO,GAAG;YACZkB,MAAM,EAAEU,GAAG,CAACV,MADA;YAEZE,UAAU,EAAEQ,GAAG,CAACR,UAFJ;YAGZ/F,OAAO,EAAEsF,YAAY,CAACiB,GAAG,CAACE,qBAAJ,MAA+B,EAAhC;UAHT,CAAd;UAKA9B,OAAO,CAACC,GAAR,GAAc,iBAAiB2B,GAAjB,GAAuBA,GAAG,CAACG,WAA3B,GAAyC/B,OAAO,CAAC3E,OAAR,CAAgBS,GAAhB,CAAoB,eAApB,CAAvD;UACA,IAAIW,IAAI,GAAG,cAAcmF,GAAd,GAAoBA,GAAG,CAACP,QAAxB,GAAmCO,GAAG,CAACI,YAAlD;UACAjF,OAAO,CAAC,IAAIiE,QAAJ,CAAavE,IAAb,EAAmBuD,OAAnB,CAAD,CAAP;QACD,CATD;;QAWA4B,GAAG,CAAC1E,OAAJ,GAAc,YAAW;UACvBN,MAAM,CAAC,IAAIlC,SAAJ,CAAc,wBAAd,CAAD,CAAN;QACD,CAFD;;QAIAkH,GAAG,CAACK,SAAJ,GAAgB,YAAW;UACzBrF,MAAM,CAAC,IAAIlC,SAAJ,CAAc,wBAAd,CAAD,CAAN;QACD,CAFD;;QAIAkH,GAAG,CAACM,IAAJ,CAASP,OAAO,CAAChC,MAAjB,EAAyBgC,OAAO,CAAC1B,GAAjC,EAAsC,IAAtC;;QAEA,IAAI0B,OAAO,CAACzB,WAAR,KAAwB,SAA5B,EAAuC;UACrC0B,GAAG,CAACO,eAAJ,GAAsB,IAAtB;QACD,CAFD,MAEO,IAAIR,OAAO,CAACzB,WAAR,KAAwB,MAA5B,EAAoC;UACzC0B,GAAG,CAACO,eAAJ,GAAsB,KAAtB;QACD;;QAED,IAAI,kBAAkBP,GAAlB,IAAyB3I,OAAO,CAACI,IAArC,EAA2C;UACzCuI,GAAG,CAACQ,YAAJ,GAAmB,MAAnB;QACD;;QAEDT,OAAO,CAACtG,OAAR,CAAgBE,OAAhB,CAAwB,UAASnD,KAAT,EAAgBmC,IAAhB,EAAsB;UAC5CqH,GAAG,CAACS,gBAAJ,CAAqB9H,IAArB,EAA2BnC,KAA3B;QACD,CAFD;QAIAwJ,GAAG,CAACU,IAAJ,CAAS,OAAOX,OAAO,CAAClD,SAAf,KAA6B,WAA7B,GAA2C,IAA3C,GAAkDkD,OAAO,CAAClD,SAAnE;MACD,CAxCM,CAAP;IAyCD,CA1CD;;IA2CA1F,IAAI,CAACC,KAAL,CAAWuJ,QAAX,GAAsB,IAAtB;EACD,CAhdD,EAgdG,OAAOxJ,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GAAqCyJ,SAhdxC;;ECsBA,WAAYC,SAAZ,EAAqB;;IAEnBA,2CAFmB;;IAKnBA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA,2CAxBmB;;IA2BnBA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA,uDArCmB;;IAwCnBA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA,6CA9CmB;;IAiDnBA;EACD,CAlDD,EAAYA,0CAAS,EAATA,CAAZ;;EAoDA,WAAYC,YAAZ,EAAwB;;;;IAItBA,mFAJsB;;;IAOtBA;IACAA,iFARsB;;;IAWtBA;IACAA,2EAZsB;;IAetBA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;IACAA;EACD,CAzBD,EAAYA,gDAAY,EAAZA,CAAZ;;EAyEA,IAAMC,eAAe,GAAG;IAAE,gBAAgB;EAAlB,CAAxB;;EAEA,IAAaC,UAAU,GAAG,UACxBjB,OADwB,EAExBkB,OAFwB,EAEY;IAAA;;;;;;;YAGjB;YAAA;YAAA,EAAM7J,KAAK,CAAC2I,OAAO,CAAC1B,GAAT,EAAc;cACxCN,MAAM,EAAE,MADgC;cAExCmD,KAAK,EAAE,UAFiC;cAGxC3C,IAAI,EAAE,MAHkC;cAIxCoB,QAAQ,EAAE,QAJ8B;cAKxCnB,QAAQ,EAAE,aAL8B;cAMxC3D,IAAI,EAAE8C,IAAI,CAACwD,SAAL,CAAepB,OAAO,CAACqB,OAAvB,CANkC;cAOxC3H,OAAO,EAAE4H,kCACJN,eADIM,GAEFtB,OAAO,CAAC3B,OAAR,IAAmB2B,OAAO,CAAC3B,OAAR,CAAgB3E,OAApC,IAAgD,EAF7C4H;YAP+B,CAAd,CAAX;;;YAAX5B,QAAQ,GAAG1I,SAAX;YAaN;YAAA;YAAA,EAAO0I,QAAQ,CACZ/B,IADI,GAEJH,IAFI,CAEC,UAAC1C,IAAD,EAAK;cACT,yCAAYA,IAAZ,GAAgB;gBAAEyG,GAAG,EAAEvB;cAAP,CAAhB;YACD,CAJI,EAKJxC,IALI,CAKC0D,OALD,CAAP;;;;YAOA,MAAMM,KAAN;;;;;;;;KAvBkC;EAyBrC,CA3BD,EA6BA;;;EACA,IAAaC,eAAe,GAAG,UAM7BzB,OAN6B,EAO7BkB,OAP6B,EAOO;IAAA;;;;;;;YAGjB;YAAA;YAAA,EAAM7J,KAAK,CAAC2I,OAAO,CAAC1B,GAAT,EAAc;cACxCN,MAAM,EAAE,MADgC;cAExCmD,KAAK,EAAE,UAFiC;cAGxC3C,IAAI,EAAE,MAHkC;cAIxCoB,QAAQ,EAAE,QAJ8B;cAKxCnB,QAAQ,EAAE,aAL8B;cAMxC3D,IAAI,EAAE8C,IAAI,CAACwD,SAAL,CAAepB,OAAO,CAACqB,OAAvB,CANkC;cAOxC3H,OAAO,EAAE4H,kCACJN,eADIM,GAEFtB,OAAO,CAAC3B,OAAR,IAAmB2B,OAAO,CAAC3B,OAAR,CAAgB3E,OAApC,IAAgD,EAF7C4H;YAP+B,CAAd,CAAX;;;YAAX5B,QAAQ,GAAG1I,SAAX;YAaN;YAAA;YAAA,EACE0I,QAAQ,CACL/B,IADH,GAEGH,IAFH,CAEQ,UAACkE,YAAD,EAAa;cACjB,OAAO;gBAAEA,YAAY,cAAd;gBAAgBH,GAAG,EAAEvB;cAArB,CAAP;YACD,CAJH;;;;;;;;;;;YAAA,CAeGxC,IAfH,EADF;;;;YAmBA,MAAMmE,KAAN;;;;;;;;KAnCkC;EAqCrC,CA5CD,ECnLA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EA4BA,SAAgBC,eAAhB,CACElC,QADF,EACe;IAEb,IACEA,QAAQ,CAACmC,OAAT,KAAqB,KAArB,KACCnC,QAAQ,CAACoC,EAAT,KAAgB,GAAhB,IAAuBpC,QAAQ,CAACoC,EAAT,KAAgB,CADxC,MAECpC,QAAQ,CAAClE,KAAT,IAAkBkE,QAAQ,CAACpE,MAF5B,CADF,EAIE;MACA,OAAO,IAAP;IACD;;IAED,OAAO,KAAP;EACD;;EAQD,SAAgByG,iBAAhB,GAAiC;IAAC;;SAAA,yCAAa;MAAbC;;;IAChC,IAAIA,GAAG,CAAC5F,MAAJ,KAAe,CAAnB,EAAsB;MACpB,OAAO,UAACzF,GAAD,EAAS;QAAK;MAAG,CAAxB;IACD;;IAED,IAAIqL,GAAG,CAAC5F,MAAJ,KAAe,CAAnB,EAAsB;MACpB,OAAO4F,GAAG,CAAC,CAAD,CAAV;IACD;;IAED,OAAOA,GAAG,CAACC,MAAJ,CAAW,UAACC,CAAD,EAAIC,CAAJ,EAAK;MAAK,iBAACxL,GAAD,EAAS;QAAK,QAAC,CAACwL,CAAC,CAACxL,GAAD,CAAF,CAAD;MAAS,CAAvB;IAAuB,CAA5C,CAAP;EACD,ECzED;;;EAoBA,IAAWyL,cAAX;;EAAA,WAAWA,cAAX,EAAyB;IACvBA;IACAA;EACD,CAHD,EAAWA,cAAc,KAAdA,cAAc,MAAzB;;EAKA;EAAA;EAAA;IAkBE,sBACEC,OADF,EAEEC,aAFF,EAGEC,aAHF,EAG4D;MAH5D;;MAEE;QAAAD,oBAAqDE,GAArD;MAA0D;;MAC1D;QAAAD,oBAAqDC,GAArD;MAA0D;;MApB5D,kBAAa;QACXxC,OAAO,EAAE;UACPyC,GAAG,EAAE,UAAOC,EAAP,EAAkCC,KAAlC,EAAsD;YAApB;cAAAA;YAAoB;;YACzDC,KAAI,CAACC,cAAL,CAAwCH,EAAxC,EAA0C;YAAA;YAA1C,EAAgEC,KAAhE;UACD;QAHM,CADE;QAMXjD,QAAQ,EAAE;UACR+C,GAAG,EAAE,UAAUC,EAAV,EAAwCC,KAAxC,EAA4D;YAApB;cAAAA;YAAoB;;YAC/DC,KAAI,CAACC,cAAL,CAAwCH,EAAxC,EAA0C;YAAA;YAA1C,EAAgEC,KAAhE;UACD;QAHO;MANC,CAAb;MAsBE,KAAKN,OAAL,GAAeA,OAAf;MACA,KAAKC,aAAL,GAAqBA,aAArB;MACA,KAAKC,aAAL,GAAqBA,aAArB;IACD;;;;;;;;;;;;;IAYSO,wCAAV,UACEJ,EADF,EAEEpF,IAFF,EAGEqF,KAHF,EAGgB;MAEd,IAAIrF,IAAI;MAAA;MAAJ,GAA+BA,IAAI;MAAA;MAAvC,EAAgE;QAC9D,MAAM,IAAID,KAAJ,CAAU,mDAAV,CAAN;MACD;;MACD,IAAIC,IAAI;MAAA;MAAR,EAAiC;QAC/B,IAAMyF,OAAO,GAAG,KAAKT,aAAL,CAAmBnI,GAAnB,CAAuBwI,KAAvB,KAAiC,EAAjD;QACA,KAAKL,aAAL,CAAmBhI,GAAnB,CAAuBqI,KAAvB,EAA4BxL,yDAAM4L,OAAN,GAAa,KAAb,GAAa,CAAmBL,EAAnB,CAAb,EAAkC,KAAlC,CAA5B;MACD,CAHD,MAGO;QACL,IAAMK,OAAO,GAAG,KAAKR,aAAL,CAAmBpI,GAAnB,CAAuBwI,KAAvB,KAAiC,EAAjD;QACA,KAAKJ,aAAL,CAAmBjI,GAAnB,CAAuBqI,KAAvB,EAA4BxL,yDAAM4L,OAAN,GAAa,KAAb,GAAa,CAAmBL,EAAnB,CAAb,EAAkC,KAAlC,CAA5B;MACD;IACF,CAfS;;;;;;;;;;;;;IA2BAI,uCAAV,UACE9E,MADF,EACmB;;;MAEjB,IAAMgF,MAAM,GAAsB,EAAlC;MACA,IAAMC,MAAM,GAAsB,EAAlC;;;QAEA,KAAkC,6BAAKX,aAAL,CAAmB1H,OAAnB,KAA4BsI,cAA9D,EAA8D,QAA9D,EAA8DA,cAA9D,EAAgE;UAArD;UAAA,IAAC5M,GAAG,QAAJ;UAAA,IAAM6M,YAAY,QAAlB;;UACT,IAAI,OAAO7M,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,GAAnC,IAA0CA,GAAG,KAAK0H,MAAtD,EAA8D;YAC5DgF,MAAM,CAACtI,IAAP,CAAWxD,KAAX,SAAMC,qCAASgM,YAAT,GAAqB,KAArB,CAAN;UACD;;UAED,IAAI7M,GAAG,YAAY8M,MAAf,IAAyB9M,GAAG,CAACwC,IAAJ,CAASkF,MAAT,CAA7B,EAA+C;YAC7CgF,MAAM,CAACtI,IAAP,CAAWxD,KAAX,SAAMC,qCAASgM,YAAT,GAAqB,KAArB,CAAN;UACD;;UAED,IAAI7M,GAAG,KAAK,GAAZ,EAAiB;YACf0M,MAAM,CAACtI,IAAP,CAAWxD,KAAX,SAAMC,qCAASgM,YAAT,GAAqB,KAArB,CAAN;UACD;QACF;;;;;;;;;;;;;;QAED,KAAkC,6BAAKZ,aAAL,CAAmB3H,OAAnB,KAA4ByI,cAA9D,EAA8D,QAA9D,EAA8DA,cAA9D,EAAgE;UAArD;UAAA,IAAC/M,GAAG,QAAJ;UAAA,IAAM6M,YAAY,QAAlB;;UACT,IAAI,OAAO7M,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,GAAnC,IAA0CA,GAAG,KAAK0H,MAAtD,EAA8D;YAC5DiF,MAAM,CAACvI,IAAP,CAAWxD,KAAX,SAAMC,qCAASgM,YAAT,GAAqB,KAArB,CAAN;UACD;;UAED,IAAI7M,GAAG,YAAY8M,MAAf,IAAyB9M,GAAG,CAACwC,IAAJ,CAASkF,MAAT,CAA7B,EAA+C;YAC7CiF,MAAM,CAACvI,IAAP,CAAWxD,KAAX,SAAMC,qCAASgM,YAAT,GAAqB,KAArB,CAAN;UACD;;UAED,IAAI7M,GAAG,KAAK,GAAZ,EAAiB;YACf2M,MAAM,CAACvI,IAAP,CAAWxD,KAAX,SAAMC,qCAASgM,YAAT,GAAqB,KAArB,CAAN;UACD;QACF;;;;;;;;;;;;;MAED,OAAO,CAACH,MAAD,EAASC,MAAT,CAAP;IACD,CAnCS;;IAoCZ;EAAC,CArGD,ICzBA;;;EACA;EAAA;EAAA;IA4BkCK;;IAAlC;;IA0EC;;IAzECC,gDAA8BvF,MAA9B,EAAiDwF,MAAjD,EAA0D;MACxD,OAAO;QACLlF,GAAG,EAAE,KAAK+D,OADL;QAELhB,OAAO,EAAE;UAAES,EAAE,EAAE,CAAN;UAASD,OAAO,EAAE,KAAlB;UAAyB7D,MAAM,QAA/B;UAAiCwF,MAAM;QAAvC;MAFJ,CAAP;IAID,CALD;;IAOAD,qDACEvF,MADF,EAEEyF,UAFF,EAEiB;MAEf,IAAMC,QAAQ,GAA2B,EAAzC;;MACA,KAAK,IAAIrH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoH,UAAU,CAACrH,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;;;;QAI1C,IAAMsH,aAAa,GAAGF,UAAU,CAACpH,CAAD,CAAhC;QACA,IAAImH,MAAM,SAAV;;QACA,IAAI1J,KAAK,CAACC,OAAN,CAAc4J,aAAd,CAAJ,EAAkC;;UAEhCH,MAAM,GAAGG,aAAT;QACD,CAHD,MAGO;UACLH,MAAM,GAAG,CAACG,aAAD,CAAT;QACD,CAXyC;;;QAa1CD,QAAQ,CAAChJ,IAAT,CAAc;UACZoH,EAAE,EAAEzF,CAAC,GAAG,CADI;UAEZwF,OAAO,EAAE,KAFG;UAGZ7D,MAAM,QAHM;UAIZwF,MAAM;QAJM,CAAd;MAMD;;MACD,OAAO;QACLlF,GAAG,EAAE,KAAK+D,OADL;QAELhB,OAAO,EAAEqC;MAFJ,CAAP;IAID,CA7BD;;IA+BAH,wCACEvF,MADF,EACmB;MACjB;;WAAA,yCAAY;QAAZwF;;;MAEM,sBAAe,KAAKI,aAAL,CAAmB5F,MAAnB,CAAf6F,EAAyC,CAAzCA;MAAA,IAACC,IAAI,QAAL;MAAA,IAAOC,IAAI,QAAX;;MAEN,IAAMzB,aAAa,GAAGP,iBAAiB,MAAjB,CAAiB,MAAjB,EAAiB5K,qCAAI2M,IAAJ,GAAQ,KAAR,CAAjB,CAAtB;MACA,IAAMvB,aAAa,GAAGR,iBAAiB,MAAjB,CAAiB,MAAjB,EAAiB5K,qCAAI4M,IAAJ,GAAQ,KAAR,CAAjB,CAAtB;MAEA,IAAMxC,GAAG,GAAGe,aAAa,CAAC,KAAK0B,YAAL,CAAkBhG,MAAlB,EAA0BwF,MAA1B,CAAD,CAAzB;MAEA,OAAOvC,UAAU,CAACM,GAAD,EAAMgB,aAAN,CAAjB;IACD,CAZD;;IAcAgB,6CACEvF,MADF,EAEEwF,MAFF,EAEa;MAEL,sBAAe,KAAKI,aAAL,CAAmB5F,MAAnB,CAAf6F,EAAyC,CAAzCA;MAAA,IAACC,IAAI,QAAL;MAAA,IAAOC,IAAI,QAAX;;MACN,IAAMzB,aAAa,GAAGP,iBAAiB,MAAjB,CAAiB,MAAjB,EAAiB5K,qCAAI2M,IAAJ,GAAQ,KAAR,CAAjB,CAAtB;MACA,IAAMvB,aAAa,GAAGR,iBAAiB,MAAjB,CAAiB,MAAjB,EAAiB5K,qCAAI4M,IAAJ,GAAQ,KAAR,CAAjB,CAAtB;MAEA,IAAME,YAAY,GAAG,KAAKC,iBAAL,CAAuBlG,MAAvB,EAA+BwF,MAA/B,CAArB;MAEA,IAAMjC,GAAG,GAAGe,aAAa,CAAC2B,YAAD,CAAzB;MACA,OAAOxC,eAAe,CAACF,GAAD,EAAMgB,aAAN,CAAtB;IACD,CAZD;;IAcAgB,6CAAUY,KAAV,EAAyBC,UAAzB,EAA+C;MAC7C,MAAM,IAAI/G,KAAJ,CAAU,8CAAV,CAAN;IACD,CAFD;;IAIAkG,+CAAYc,KAAZ,EAAyB;MACvB,MAAM,IAAIhH,KAAJ,CAAU,8CAAV,CAAN;IACD,CAFD;;IAGF;EA1EA,CA5BA,CA4BkCyF,YA5BlC,GCDA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;;EACA,IAAawB,eAAe,GAAG,EAA/B,ECtBA;;EACA;EAAA;EAAA;IA2BE;MAAA;;MAFQ,gBAAiB,EAAjB;MAGN,KAAKC,OAAL,GAAe,IAAIC,IAAJ,CAAS,KAAKC,QAAd,CAAf;MACA,KAAKC,GAAL,GAAW,KAAKH,OAAL,CAAaG,GAAb,CAAiBC,IAAjB,CAAsB,IAAtB,CAAX;MACA,KAAKC,IAAL,GAAY,KAAKL,OAAL,CAAaK,IAAb,CAAkBD,IAAlB,CAAuB,IAAvB,CAAZ;MACA,KAAKhJ,OAAL,GAAe,IAAIX,OAAJ,CAAY,UAACI,OAAD,EAAUH,MAAV,EAAgB;QACzC2H,KAAI,CAACxH,OAAL,GAAeA,OAAf;QACAwH,KAAI,CAAC3H,MAAL,GAAcA,MAAd;MACD,CAHc,CAAf;MAIA,KAAKuC,IAAL,GAAY,KAAK7B,OAAL,CAAa6B,IAAb,CAAkBmH,IAAlB,CAAuB,KAAKhJ,OAA5B,CAAZ;IACD;;IAEDkJ;MACE,KAAK,IAAMxI,CAAX,IAAgB,KAAKoI,QAArB,EAA+B;QAC7B,OAAO,KAAKA,QAAL,CAAcpI,CAAd,CAAP;MACD;IACF,CAJD;;IAKAwI,sCAAGvH,IAAH,EAAiB4D,OAAjB,EAAsC;MACpC,KAAKqD,OAAL,CAAaO,EAAb,CAAgBxH,IAAhB,EAAsB4D,OAAtB;MACA,OAAO,IAAP;IACD,CAHD;;IAIA2D,wCAAKvH,IAAL,EAAmB4D,OAAnB,EAAwC;MAAxC;;MACE,KAAKqD,OAAL,CAAaO,EAAb,CAAgBxH,IAAhB,EAAsB,UAAC1F,CAAD,EAAO;QAC3BsJ,OAAO,CAACtJ,CAAD,CAAP;;QACAgL,KAAI,CAACmC,mBAAL,CAAyBzH,IAAzB;MACD,CAHD;IAID,CALD;;IAOAuH,oDAAiBvH,IAAjB,EAA+B4D,OAA/B,EAAoD;MAClD,KAAKqD,OAAL,CAAaO,EAAb,CAAgBxH,IAAhB,EAAsB4D,OAAtB;IACD,CAFD;;IAIA2D,uDAAoBvH,IAApB,EAAmC4D,OAAnC,EAAyD;MACvD,IAAI,CAAC5D,IAAL,EAAW;QACT,KAAKmH,QAAL,GAAgB,EAAhB;QACA;MACD;;MACD,IAAI,CAACvD,OAAL,EAAc;QACZ,OAAO,KAAKuD,QAAL,CAAcnH,IAAd,CAAP;MACD,CAFD,MAEO;QACL,OAAO,KAAKiH,OAAL,CAAaG,GAAb,CAAiBpH,IAAjB,EAAuB4D,OAAvB,CAAP;MACD;IACF,CAVD;;IAWA2D,2CAAQrJ,KAAR,EAAkB;MAChB,KAAK+I,OAAL,CAAaO,EAAb,CAAgB,OAAhB,EAAyBtJ,KAAzB;MACA,KAAKuJ,mBAAL,CAAyB,GAAzB;IACD,CAHD;;IAIAF,0CAAOG,IAAP,EAAgB;MACd,KAAKT,OAAL,CAAaO,EAAb,CAAgB,MAAhB,EAAwBE,IAAxB;MACA,KAAKD,mBAAL,CAAyB,GAAzB;IACD,CAHD;;IAIAF,iDAAcI,SAAd,EAA4B;MAC1B,IAAIC,KAAK,GAAG,CAAZ;MACAzM,MAAM,CAACgC,IAAP,CAAY,KAAKgK,QAAjB,EAA2B7K,OAA3B,CAAmC,UAACuL,GAAD,EAAI;QACrC,IAAIF,SAAS,KAAKE,GAAlB,EAAuB;UACrBD,KAAK,IAAI,CAAT;QACD;MACF,CAJD;MAKA,OAAOA,KAAP;IACD,CARD;;IASF;EAAC,CAtFD,ICDA","names":["TransactionError","sign","target","key","descriptor","original","value","interceptor","arg","args","bytes","signer","signed","_a","call","apply","tslib","self","fetch","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","prototype","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","Object","toString","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","oldValue","get","has","hasOwnProperty","set","callback","thisArg","keys","push","values","entries","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","Error","type","rejected","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","options","url","credentials","mode","referrer","clone","form","trim","split","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","this","RPCMethod","RPCErrorCode","DEFAULT_HEADERS","performRPC","handler","cache","stringify","payload","__assign","req","err_1","performBatchRPC","batch_result","err_2","isValidResponse","jsonrpc","id","composeMiddleware","fns","reduce","a","b","MiddlewareType","nodeURL","reqMiddleware","resMiddleware","Map","use","fn","match","_this","pushMiddleware","BaseProvider","current","reqFns","resFns","_d","transformers","RegExp","_g","__extends","HTTPProvider","params","paramsList","payloads","payloadParams","getMiddleware","__read","tReq","tRes","buildPayload","batchPayload","buildBatchPayload","event","subscriber","token","GET_TX_ATTEMPTS","emitter","mitt","handlers","off","bind","emit","EventEmitter","on","removeEventListener","data","listenKey","count","val"],"sources":["/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/core/src/types.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/core/src/decorators/sign.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/core/src/decorators/index.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/node_modules/cross-fetch/dist/browser-polyfill.js","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/core/src/net.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/core/src/util.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/core/src/providers/base.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/core/src/providers/http.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/core/src/constants.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/core/src/eventEmitter.ts","/home/micqdf/AlpacaPunchTests/maintest/test1/client/node_modules/@zilliqa-js/core/src/index.ts"],"sourcesContent":["//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { RPCResponse } from './net';\nimport { Middleware } from './util';\n\nexport type Subscriber = (event: any) => void;\nexport type Subscribers = Map<SubscriptionToken, Subscriber>;\ntype SubscriptionToken = symbol;\n\nexport interface Provider {\n  middleware: Middleware;\n  // TODO: strict typing when we have a better idea of how to generalise the\n  // payloads sent to lookup nodes - protobuf?\n  send<R = any, E = string>(\n    method: string,\n    ...params: any[]\n  ): Promise<RPCResponse<R, E>>;\n\n  sendBatch<R = any, E = string>(\n    method: string,\n    ...params: any[]\n  ): Promise<RPCResponse<R, E>>;\n\n  subscribe?(event: string, subscriber: Subscriber): symbol;\n\n  unsubscribe?(token: symbol): void;\n}\n\nexport abstract class Signer {\n  abstract sign(payload: Signable): Promise<Signable>;\n}\n\nexport interface Signable {\n  bytes: Buffer;\n}\n\n/**\n * ZilliqaModule\n *\n * This interface must be implemented by all top-level modules.\n */\nexport interface ZilliqaModule {\n  provider: Provider;\n  signer: Signer;\n}\n\nexport interface BlockchainInfo {\n  NumPeers: number;\n  NumTxBlocks: string;\n  NumDSBlocks: string;\n  NumTransactions: string;\n  TransactionRate: number;\n  TxBlockRate: number;\n  DSBlockRate: number;\n  CurrentMiniEpoch: string;\n  CurrentDSEpoch: string;\n  NumTxnsDSEpoch: string;\n  NumTxnsTxEpoch: string;\n  ShardingStructure: ShardingStructure;\n}\n\nexport interface ShardingStructure {\n  NumPeers: number[];\n}\n\nexport interface TransactionObj {\n  ID: string;\n  version: string;\n  nonce: string;\n  toAddr: string;\n  amount: string;\n  code: string;\n  data: string;\n  gasPrice: string;\n  gasLimit: string;\n  signature: string;\n  senderPubKey: string;\n  receipt: TransactionReceiptObj;\n}\n\nexport interface TransactionStatusObj {\n  ID: string;\n  _id: StatusID;\n  amount: string;\n  epochInserted: string;\n  epochUpdated: string;\n  gasLimit: string;\n  gasPrice: string;\n  lastModified: string;\n  modificationState: number;\n  nonce: string;\n  senderAddr: string;\n  signature: string;\n  status: number;\n  success: boolean;\n  toAddr: string;\n  version: string;\n  statusMessage: string;\n}\n\nexport interface StatusID {\n  $oid: string;\n}\n\nexport interface DsBlockHeader {\n  BlockNum: string;\n  Difficulty: number;\n  DifficultyDS: number;\n  GasPrice: string;\n  LeaderPubKey: string;\n  PoWWinners: string[];\n  PrevHash: string;\n  // unix epoch\n  Timestamp: string;\n}\n\nexport interface DsBlockObj {\n  header: DsBlockHeader;\n  signature: string;\n}\n\ninterface BlockShort {\n  BlockNum: number;\n  Hash: string;\n}\n\nexport interface BlockList {\n  data: BlockShort[];\n  maxPages: number;\n}\n\nexport interface TxBlockHeader {\n  BlockNum: string;\n  DSBlockNum: string;\n  GasLimit: string;\n  GasUsed: string;\n  MbInfoHash: string;\n  MinerPubKey: string;\n  NumMicroBlocks: number;\n  NumPages: number;\n  NumTxns: number;\n  PrevBlockHash: string;\n  Rewards: string;\n  StateDeltaHash: string;\n  StateRootHash: string;\n  Timestamp: string;\n  TxnFees: string;\n  Version: number;\n}\n\nexport interface MicroBlockInfoObj {\n  MicroBlockHash: string;\n  MicroBlockShardId: number;\n  MicroBlockTxnRootHash: string;\n}\n\nexport interface TxBlockObj {\n  body: {\n    BlockHash: string;\n    HeaderSign: string;\n    MicroBlockInfos: MicroBlockInfoObj[];\n  };\n  header: TxBlockHeader;\n}\n\nexport interface TxList {\n  number: number;\n  TxnHashes: string[];\n}\n\nexport enum TransactionError {\n  CHECKER_FAILED = 0,\n  RUNNER_FAILED,\n  BALANCE_TRANSFER_FAILED,\n  EXECUTE_CMD_FAILED,\n  EXECUTE_CMD_TIMEOUT,\n  NO_GAS_REMAINING_FOUND,\n  NO_ACCEPTED_FOUND,\n  CALL_CONTRACT_FAILED,\n  CREATE_CONTRACT_FAILED,\n  JSON_OUTPUT_CORRUPTED,\n  CONTRACT_NOT_EXIST,\n  STATE_CORRUPTED,\n  LOG_ENTRY_INSTALL_FAILED,\n  MESSAGE_CORRUPTED,\n  RECEIPT_IS_NULL,\n  MAX_DEPTH_REACHED,\n  CHAIN_CALL_DIFF_SHARD,\n  PREPARATION_FAILED,\n  NO_OUTPUT,\n  OUTPUT_ILLEGAL,\n}\n\nexport interface TransactionErrorObj {\n  [depth: number]: TransactionError[];\n}\n\nexport interface TransactionReceiptObj<TGas = string> {\n  accepted?: boolean;\n  cumulative_gas: TGas;\n  epoch_num: string;\n  event_logs?: EventLogEntry[];\n  exceptions?: ExceptionEntry[];\n  success: boolean;\n  transitions?: TransitionEntry[];\n  errors?: any;\n}\n\nexport interface ExceptionEntry {\n  line: number;\n  message: string;\n}\n\nexport interface EventLogEntry {\n  address: string;\n  _eventname: string;\n  params: EventParam[];\n}\n\nexport interface TransitionEntry {\n  accepted: boolean;\n  addr: string;\n  depth: number;\n  msg: TransitionMsg;\n}\n\nexport interface TransitionMsg {\n  _amount: string;\n  _recipient: string;\n  _tag: string;\n  params: EventParam[];\n}\n\nexport interface EventParam {\n  vname: string;\n  type: string;\n  value: any;\n}\n\nexport interface TransactionStatus {\n  code: number;\n  TxnHash: string;\n  info: string;\n}\n\nexport interface MinerInfo {\n  dscommittee: string[];\n  shards: ShardInfo[];\n}\n\nexport interface ShardInfo {\n  nodes: string[];\n  size: number;\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Signable, ZilliqaModule } from '../types';\n\n/**\n * sign\n *\n * This decorates a method by attempting to sign the first argument of the\n * intercepted method.\n *\n * @param {T} target\n * @param {K} key\n * @param {PropertyDescriptor} descriptor\n * @returns {PropertyDescriptor | undefined}\n */\nexport const sign = <T, K extends keyof T>(\n  target: T,\n  key: K,\n  descriptor: PropertyDescriptor,\n) => {\n  const original = descriptor.value;\n\n  async function interceptor(\n    this: ZilliqaModule,\n    arg: Signable,\n    ...args: any[]\n  ) {\n    if (original && arg.bytes) {\n      const signed = await this.signer.sign(arg);\n      return original.call(this, signed, ...args);\n    }\n  }\n\n  descriptor.value = interceptor;\n  return descriptor;\n};\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nexport { sign } from './sign';\n","(function(self) {\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    };\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue+','+value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push(name); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) { items.push(value); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push([name, value]); });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  };\n  self.fetch.polyfill = true;\n})(typeof self !== 'undefined' ? self : this);\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\nimport 'cross-fetch/polyfill';\nimport { WithRequest } from './util';\n\n/**\n * blockchain-side.\n */\nexport enum RPCMethod {\n  // Network-related methods\n  GetNetworkId = 'GetNetworkId',\n\n  // Blockchain-related methods\n  GetBlockchainInfo = 'GetBlockchainInfo',\n  GetShardingStructure = 'GetShardingStructure',\n  GetDSBlock = 'GetDsBlock',\n  GetLatestDSBlock = 'GetLatestDsBlock',\n  GetNumDSBlocks = 'GetNumDSBlocks',\n  GetDSBlockRate = 'GetDSBlockRate',\n  DSBlockListing = 'DSBlockListing',\n  GetTxBlock = 'GetTxBlock',\n  GetLatestTxBlock = 'GetLatestTxBlock',\n  GetNumTxBlocks = 'GetNumTxBlocks',\n  GetTxBlockRate = 'GetTxBlockRate',\n  TxBlockListing = 'TxBlockListing',\n  GetNumTransactions = 'GetNumTransactions',\n  GetTransactionRate = 'GetTransactionRate',\n  GetCurrentMiniEpoch = 'GetCurrentMiniEpoch',\n  GetCurrentDSEpoch = 'GetCurrentDSEpoch',\n  GetPrevDifficulty = 'GetPrevDifficulty',\n  GetPrevDSDifficulty = 'GetPrevDSDifficulty',\n  GetTotalCoinSupply = 'GetTotalCoinSupply',\n  GetMinerInfo = 'GetMinerInfo',\n\n  // Transaction-related methods\n  CreateTransaction = 'CreateTransaction',\n  GetTransaction = 'GetTransaction',\n  GetTransactionStatus = 'GetTransactionStatus',\n  GetRecentTransactions = 'GetRecentTransactions',\n  GetTransactionsForTxBlock = 'GetTransactionsForTxBlock',\n  GetTransactionsForTxBlockEx = 'GetTransactionsForTxBlockEx',\n  GetTxnBodiesForTxBlock = 'GetTxnBodiesForTxBlock',\n  GetTxnBodiesForTxBlockEx = 'GetTxnBodiesForTxBlockEx',\n  GetNumTxnsTxEpoch = 'GetNumTxnsTxEpoch',\n  GetNumTxnsDSEpoch = 'GetNumTxnsDSEpoch',\n  GetMinimumGasPrice = 'GetMinimumGasPrice',\n\n  // Contract-related methods\n  GetContractAddressFromTransactionID = 'GetContractAddressFromTransactionID',\n  GetSmartContracts = 'GetSmartContracts',\n  GetSmartContractCode = 'GetSmartContractCode',\n  GetSmartContractInit = 'GetSmartContractInit',\n  GetSmartContractState = 'GetSmartContractState',\n  GetSmartContractSubState = 'GetSmartContractSubState',\n  GetStateProof = 'GetStateProof',\n\n  // Account-related methods\n  GetBalance = 'GetBalance',\n}\n\nexport enum RPCErrorCode {\n  // Standard JSON-RPC 2.0 errors\n  // RPC_INVALID_REQUEST is internally mapped to HTTP_BAD_REQUEST (400).\n  // It should not be used for application-layer errors.\n  RPC_INVALID_REQUEST = -32600,\n  // RPC_METHOD_NOT_FOUND is internally mapped to HTTP_NOT_FOUND (404).\n  // It should not be used for application-layer errors.\n  RPC_METHOD_NOT_FOUND = -32601,\n  RPC_INVALID_PARAMS = -32602,\n  // RPC_INTERNAL_ERROR should only be used for genuine errors in bitcoind\n  // (for example datadir corruption).\n  RPC_INTERNAL_ERROR = -32603,\n  RPC_PARSE_ERROR = -32700,\n\n  // General application defined errors\n  RPC_MISC_ERROR = -1, // std::exception thrown in command handling\n  RPC_TYPE_ERROR = -3, // Unexpected type was passed as parameter\n  RPC_INVALID_ADDRESS_OR_KEY = -5, // Invalid address or key\n  RPC_INVALID_PARAMETER = -8, // Invalid, missing or duplicate parameter\n  RPC_DATABASE_ERROR = -20, // Database error\n  RPC_DESERIALIZATION_ERROR = -22, // Error parsing or validating structure in raw format\n  RPC_VERIFY_ERROR = -25, // General error during transaction or block submission\n  RPC_VERIFY_REJECTED = -26, // Transaction or block was rejected by network rules\n  RPC_IN_WARMUP = -28, // Client still warming up\n  RPC_METHOD_DEPRECATED = -32, // RPC method is deprecated\n}\n\nexport interface RPCRequestPayload<T> {\n  id: number;\n  jsonrpc: '2.0';\n  method: RPCMethod;\n  params: T;\n}\n\ninterface RPCRequestOptions {\n  headers?: Headers;\n  method?: string;\n}\n\nexport interface RPCRequest<T> {\n  url: string;\n  payload: RPCRequestPayload<T> | RPCRequestPayload<T>[];\n  options?: RPCRequestOptions;\n}\n\ninterface RPCResponseBase {\n  jsonrpc: '2.0';\n  id: number;\n}\n\nexport interface RPCResponseSuccess<R = any> extends RPCResponseBase {\n  batch_result?: R; // for batch response\n  result: R; // for non-batch response\n  error: undefined;\n}\n\nexport interface RPCResponseError<E = any> extends RPCResponseBase {\n  result: undefined;\n  error: RPCError<E>;\n}\n\nexport interface RPCError<E> {\n  code: RPCErrorCode;\n  message: string;\n  data?: E;\n}\n\nexport type RPCResponse<R, E> = RPCResponseSuccess<R> | RPCResponseError<E>;\n\nexport type RPCResponseHandler<R, E, T> = (\n  response: WithRequest<RPCResponse<R, E>>,\n) => T;\n\nconst DEFAULT_HEADERS = { 'Content-Type': 'application/json' };\n\nexport const performRPC = async <R, E, D extends any[], T = RPCResponse<R, E>>(\n  request: RPCRequest<D>,\n  handler: RPCResponseHandler<R, E, T>,\n): Promise<T> => {\n  try {\n    const response = await fetch(request.url, {\n      method: 'POST',\n      cache: 'no-cache',\n      mode: 'cors',\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(request.payload),\n      headers: {\n        ...DEFAULT_HEADERS,\n        ...((request.options && request.options.headers) || {}),\n      } as HeadersInit,\n    });\n\n    return response\n      .json()\n      .then((body) => {\n        return { ...body, req: request };\n      })\n      .then(handler);\n  } catch (err) {\n    throw err;\n  }\n};\n\n// identical to performRPC; difference is the response\nexport const performBatchRPC = async <\n  R,\n  E,\n  D extends any[],\n  T = RPCResponse<R, E>,\n>(\n  request: RPCRequest<D>,\n  handler: RPCResponseHandler<R, E, T>,\n): Promise<T> => {\n  try {\n    const response = await fetch(request.url, {\n      method: 'POST',\n      cache: 'no-cache',\n      mode: 'cors',\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(request.payload),\n      headers: {\n        ...DEFAULT_HEADERS,\n        ...((request.options && request.options.headers) || {}),\n      } as HeadersInit,\n    });\n\n    return (\n      response\n        .json()\n        .then((batch_result) => {\n          return { batch_result, req: request };\n        })\n        // no handler as compared to performRPC to preserve the body array\n        // e.g. response\n        /*\n      { body:\n        [ { id: 1, jsonrpc: '2.0', result: [Object] },\n          { id: 1, jsonrpc: '2.0', result: [Object] } ],\n       req:\n        { url: 'https://dev-api.zilliqa.com',\n          payload: [ [Object], [Object] ] } }\n      */\n        .then()\n    );\n  } catch (err) {\n    throw err;\n  }\n};\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { RPCMethod, RPCRequest, RPCResponse } from './net';\n\nexport type WithRequest<T, I = any> = T & { req: RPCRequest<I> };\n\nexport type Matcher = RPCMethod | '*' | RegExp;\n\nexport interface Middleware {\n  request: {\n    use: <I, O>(fn: ReqMiddlewareFn<I, O>, match?: Matcher) => void;\n  };\n  response: {\n    use: <I, O, E>(fn: ResMiddlewareFn<I, O, E>, match?: Matcher) => void;\n  };\n}\n\nexport type Transformer<I, O> = (payload: I) => O;\n\nexport type ReqMiddlewareFn<I = any, O = any> = Transformer<\n  RPCRequest<I>,\n  RPCRequest<O>\n>;\nexport type ResMiddlewareFn<I = any, O = any, E = any> = Transformer<\n  WithRequest<RPCResponse<I, E>>,\n  WithRequest<RPCResponse<O, E>>\n>;\n\nexport function isValidResponse<T, E>(\n  response: any,\n): response is RPCResponse<T, E> {\n  if (\n    response.jsonrpc === '2.0' &&\n    (response.id === '1' || response.id === 1) &&\n    (response.error || response.result)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function composeMiddleware<T extends ReqMiddlewareFn[]>(\n  ...fns: T\n): ReqMiddlewareFn;\nexport function composeMiddleware<T extends ResMiddlewareFn[]>(\n  ...fns: T\n): ResMiddlewareFn;\nexport function composeMiddleware(...fns: any[]): any {\n  if (fns.length === 0) {\n    return (arg: any) => arg;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return fns.reduce((a, b) => (arg: any) => a(b(arg)));\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { RPCMethod } from '../net';\nimport { Matcher, ReqMiddlewareFn, ResMiddlewareFn } from '../util';\n\nconst enum MiddlewareType {\n  REQ,\n  RES,\n}\n\nexport class BaseProvider {\n  middleware = {\n    request: {\n      use: <I, O>(fn: ReqMiddlewareFn<I, O>, match: Matcher = '*') => {\n        this.pushMiddleware<MiddlewareType.REQ>(fn, MiddlewareType.REQ, match);\n      },\n    },\n    response: {\n      use: <I, O, E>(fn: ResMiddlewareFn<I, O, E>, match: Matcher = '*') => {\n        this.pushMiddleware<MiddlewareType.RES>(fn, MiddlewareType.RES, match);\n      },\n    },\n  };\n\n  protected nodeURL: string;\n  protected reqMiddleware: Map<Matcher, ReqMiddlewareFn[]>;\n  protected resMiddleware: Map<Matcher, ResMiddlewareFn[]>;\n\n  constructor(\n    nodeURL: string,\n    reqMiddleware: Map<Matcher, ReqMiddlewareFn[]> = new Map(),\n    resMiddleware: Map<Matcher, ResMiddlewareFn[]> = new Map(),\n  ) {\n    this.nodeURL = nodeURL;\n    this.reqMiddleware = reqMiddleware;\n    this.resMiddleware = resMiddleware;\n  }\n\n  /**\n   * pushMiddleware\n   *\n   * Adds the middleware to the appropriate middleware map.\n   *\n   * @param {ResMiddlewareFn}\n   * @param {T} type\n   * @param {Matcher} match\n   * @returns {void}\n   */\n  protected pushMiddleware<T extends MiddlewareType>(\n    fn: T extends MiddlewareType.REQ ? ReqMiddlewareFn : ResMiddlewareFn,\n    type: T,\n    match: Matcher,\n  ): void {\n    if (type !== MiddlewareType.REQ && type !== MiddlewareType.RES) {\n      throw new Error('Please specify the type of middleware being added');\n    }\n    if (type === MiddlewareType.REQ) {\n      const current = this.reqMiddleware.get(match) || [];\n      this.reqMiddleware.set(match, [...current, <ReqMiddlewareFn>fn]);\n    } else {\n      const current = this.resMiddleware.get(match) || [];\n      this.resMiddleware.set(match, [...current, <ResMiddlewareFn>fn]);\n    }\n  }\n\n  /**\n   * getMiddleware\n   *\n   * Returns the middleware that matches the matcher provided. Note that\n   * middleware are called in order of specificity: string -> regexp ->\n   * wildcard.\n   *\n   * @param {Matcher} match\n   * @returns {[ReqMiddlewareFn[], ResMiddlewareFn[]]}\n   */\n  protected getMiddleware(\n    method: RPCMethod,\n  ): [ReqMiddlewareFn[], ResMiddlewareFn[]] {\n    const reqFns: ReqMiddlewareFn[] = [];\n    const resFns: ResMiddlewareFn[] = [];\n\n    for (const [key, transformers] of this.reqMiddleware.entries()) {\n      if (typeof key === 'string' && key !== '*' && key === method) {\n        reqFns.push(...transformers);\n      }\n\n      if (key instanceof RegExp && key.test(method)) {\n        reqFns.push(...transformers);\n      }\n\n      if (key === '*') {\n        reqFns.push(...transformers);\n      }\n    }\n\n    for (const [key, transformers] of this.resMiddleware.entries()) {\n      if (typeof key === 'string' && key !== '*' && key === method) {\n        resFns.push(...transformers);\n      }\n\n      if (key instanceof RegExp && key.test(method)) {\n        resFns.push(...transformers);\n      }\n\n      if (key === '*') {\n        resFns.push(...transformers);\n      }\n    }\n\n    return [reqFns, resFns];\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { BaseProvider } from './base';\nimport {\n  RPCMethod,\n  RPCRequest,\n  RPCResponse,\n  performRPC,\n  performBatchRPC,\n  RPCRequestPayload,\n} from '../net';\nimport { composeMiddleware } from '../util';\nimport { Provider, Subscriber } from '../types';\n\nexport class HTTPProvider extends BaseProvider implements Provider {\n  buildPayload<T extends any[]>(method: RPCMethod, params: T): RPCRequest<T> {\n    return {\n      url: this.nodeURL,\n      payload: { id: 1, jsonrpc: '2.0', method, params },\n    };\n  }\n\n  buildBatchPayload<T extends any[]>(\n    method: RPCMethod,\n    paramsList: T[],\n  ): RPCRequest<T> {\n    const payloads: RPCRequestPayload<T>[] = [];\n    for (let i = 0; i < paramsList.length; i++) {\n      // most of the payloads should be a single param, e.g. GetTransaction\n      // however, there are special cases e.g. GetSmartContractSubState & GetTransactionsForTxBlockEx\n      // where the param field is a list\n      const payloadParams = paramsList[i];\n      let params: any;\n      if (Array.isArray(payloadParams)) {\n        // for those param field that is already a list\n        params = payloadParams;\n      } else {\n        params = [payloadParams];\n      }\n      // id start from index 1\n      payloads.push({\n        id: i + 1,\n        jsonrpc: '2.0',\n        method,\n        params,\n      });\n    }\n    return {\n      url: this.nodeURL,\n      payload: payloads,\n    };\n  }\n\n  send<P extends any[], R = any, E = string>(\n    method: RPCMethod,\n    ...params: P\n  ): Promise<RPCResponse<R, E>> {\n    const [tReq, tRes] = this.getMiddleware(method);\n\n    const reqMiddleware = composeMiddleware(...tReq);\n    const resMiddleware = composeMiddleware(...tRes);\n\n    const req = reqMiddleware(this.buildPayload(method, params));\n\n    return performRPC(req, resMiddleware);\n  }\n\n  sendBatch<P extends any[], R = any, E = string>(\n    method: RPCMethod,\n    params: P[],\n  ): Promise<RPCResponse<R, E>> {\n    const [tReq, tRes] = this.getMiddleware(method);\n    const reqMiddleware = composeMiddleware(...tReq);\n    const resMiddleware = composeMiddleware(...tRes);\n\n    const batchPayload = this.buildBatchPayload(method, params);\n\n    const req = reqMiddleware(batchPayload);\n    return performBatchRPC(req, resMiddleware);\n  }\n\n  subscribe(event: string, subscriber: Subscriber): symbol {\n    throw new Error('HTTPProvider does not support subscriptions.');\n  }\n\n  unsubscribe(token: symbol) {\n    throw new Error('HTTPProvider does not support subscriptions.');\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// this constant is used to indicate the number of times to poll the\n// blockchain for a transaction confirmation. this number has been selected by\n// using a heuristic to calculate the approximate maximum amount of time it\n// should take for a transaction to be confirmed, even during a PoW submission\n// round.\nexport const GET_TX_ATTEMPTS = 33;\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport mitt from 'mitt';\n\nclass EventEmitter<T> {\n  off: (type: string, handler: mitt.Handler) => void;\n  emit: (type: string, event?: any) => void;\n  promise: Promise<T>;\n  resolve?: (value: T | PromiseLike<T>) => void;\n  reject?: (reason?: any) => void;\n  then?: any;\n  private handlers?: any = {};\n  private emitter: mitt.Emitter;\n  constructor() {\n    this.emitter = new mitt(this.handlers);\n    this.off = this.emitter.off.bind(this);\n    this.emit = this.emitter.emit.bind(this);\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n    this.then = this.promise.then.bind(this.promise);\n  }\n\n  resetHandlers() {\n    for (const i in this.handlers) {\n      delete this.handlers[i];\n    }\n  }\n  on(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n    return this;\n  }\n  once(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, (e: any) => {\n      handler(e);\n      this.removeEventListener(type);\n    });\n  }\n\n  addEventListener(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n  }\n\n  removeEventListener(type?: string, handler?: mitt.Handler) {\n    if (!type) {\n      this.handlers = {};\n      return;\n    }\n    if (!handler) {\n      delete this.handlers[type];\n    } else {\n      return this.emitter.off(type, handler);\n    }\n  }\n  onError(error: any) {\n    this.emitter.on('error', error);\n    this.removeEventListener('*');\n  }\n  onData(data: any) {\n    this.emitter.on('data', data);\n    this.removeEventListener('*');\n  }\n  listenerCount(listenKey: any) {\n    let count = 0;\n    Object.keys(this.handlers).forEach((val) => {\n      if (listenKey === val) {\n        count += 1;\n      }\n    });\n    return count;\n  }\n}\n\nexport { EventEmitter };\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nexport * from './types';\nexport * from './decorators';\nexport * from './net';\nexport * from './util';\nexport * from './providers/http';\nexport * from './constants';\nexport * from './eventEmitter';\n"]},"metadata":{},"sourceType":"script"}