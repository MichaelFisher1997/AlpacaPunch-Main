{"ast":null,"code":"import { React, useState } from \"react\"; //zil1eff6xw0czq44wkdf70zru7l3ftp53tp77qt32k\n//grabs blockchain\n\nvar blockchain = function blockchain() {\n  return window.zilPay.blockchain;\n}; //Connect\n\n\nvar Connect = function Connect() {\n  window.zilPay.wallet.connect().then(function (retVal) {\n    console.log(retVal);\n\n    if (retVal) {\n      console.log(window.zilPay.wallet.defaultAccount.bech32);\n    }\n  });\n}; //current account address\n\n\nvar checkConnection = function checkConnection() {\n  var isConnect = window.zilPay.wallet.isConnect;\n\n  if (isConnect) {} else {\n    console.log(\"Not connected!!\");\n  }\n}; //grabs balance\n\n/*const balance = window.zilPay.blockchain.getBalance(publicKey).then(function(resp){\n  console.log(resp);\n })*/\n\n\nexport { Connect, blockchain };","map":{"version":3,"sources":["/home/micqdf/AlpacaPunchTests/test1/client/src/components/Navbar/ZilAssets/zilFunctions.js"],"names":["React","useState","blockchain","window","zilPay","Connect","wallet","connect","then","retVal","console","log","defaultAccount","bech32","checkConnection","isConnect"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;AAEA;;AACC,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMC,MAAM,CAACC,MAAP,CAAcF,UAApB;AAAA,CAAnB,C,CAOC;;;AACA,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBF,EAAAA,MAAM,CAACC,MAAP,CAAcE,MAAd,CAAqBC,OAArB,GAA+BC,IAA/B,CAAoC,UAASC,MAAT,EAAgB;AAClDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,QAAGA,MAAH,EAAU;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACC,MAAP,CAAcE,MAAd,CAAqBM,cAArB,CAAoCC,MAAhD;AAAwD;AAEnE,GAJF;AAKD,CAND,C,CAUA;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,MAAMC,SAAS,GAAGZ,MAAM,CAACC,MAAP,CAAcE,MAAd,CAAqBS,SAAvC;;AAEF,MAAIA,SAAJ,EAAe,CAEd,CAFD,MAEO;AACLL,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;AAEA,CATD,C,CAgBA;;AACA;AACF;AACA;;;AAII,SAAQN,OAAR,EAAiBH,UAAjB","sourcesContent":["import { React, useState } from \"react\";\n\n//zil1eff6xw0czq44wkdf70zru7l3ftp53tp77qt32k\n\n//grabs blockchain\n const blockchain = () => window.zilPay.blockchain;\n\n \n\n \n\n\n  //Connect\n  const Connect = () => {\n    window.zilPay.wallet.connect().then(function(retVal){\n      console.log(retVal)\n      if(retVal){console.log(window.zilPay.wallet.defaultAccount.bech32)}\n      \n     })\n  }\n\n  \n\n  //current account address\n\n  const checkConnection = () => {\n    const isConnect = window.zilPay.wallet.isConnect;\n    \n  if (isConnect) {\n    \n  } else {\n    console.log(\"Not connected!!\")\n  }\n\n  }\n\n\n\n  \n\n\n  //grabs balance\n  /*const balance = window.zilPay.blockchain.getBalance(publicKey).then(function(resp){\n    console.log(resp);\n   })*/\n  \n\n\n    export {Connect, blockchain};"]},"metadata":{},"sourceType":"module"}