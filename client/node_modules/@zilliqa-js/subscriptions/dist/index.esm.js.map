{"version":3,"file":"index.esm.js","sources":["../src/types.ts","../src/ws.ts","../src/subscription.ts","../src/newblock.ts","../src/newevent.ts","../src/builder.ts","../src/index.ts"],"sourcesContent":["//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { IClientConfig } from 'websocket';\n\nexport enum SocketConnect {\n  READY = 'ready',\n  CONNECT = 'connect',\n  ERROR = 'error',\n  CLOSE = 'close',\n  RECONNECT = 'reconnect',\n}\n\nexport enum SocketState {\n  SOCKET_CONNECT = 'socket_connect',\n  SOCKET_MESSAGE = 'socket_message',\n  SOCKET_READY = 'socket_ready',\n  SOCKET_CLOSE = 'socket_close',\n  SOCKET_ERROR = 'socket_error',\n}\n\n// message type pushed by server side\nexport enum MessageType {\n  NEW_BLOCK = 'NewBlock',\n  EVENT_LOG = 'EventLog',\n  NOTIFICATION = 'Notification',\n  UNSUBSCRIBE = 'Unsubscribe',\n}\n\n// message type that we can query with to server\nexport enum QueryParam {\n  NEW_BLOCK = 'NewBlock',\n  EVENT_LOG = 'EventLog',\n  UNSUBSCRIBE = 'Unsubscribe',\n}\n\n// indicate that whether we subscribe successfully\nexport enum StatusType {\n  SUBSCRIBE_NEW_BLOCK = 'SubscribeNewBlock',\n  SUBSCRIBE_EVENT_LOG = 'SubscribeEventLog',\n}\n\nexport interface NewBlockQuery {\n  query: string;\n}\n\nexport interface NewEventQuery {\n  query: string;\n  addresses: string[];\n}\n\nexport interface Unsubscribe {\n  query: string;\n  type: string;\n}\n\nexport interface SubscriptionOption {\n  addresses?: string[];\n  clientConfig?: IClientConfig;\n  headers?: {\n    authorization?: string;\n  };\n  protocol?: string;\n  protocols?: string | string[];\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport mitt from 'mitt';\nimport { w3cwebsocket as W3CWebsocket } from 'websocket';\nimport {\n  MessageType,\n  NewBlockQuery,\n  NewEventQuery,\n  QueryParam,\n  SocketConnect,\n  SocketState,\n  StatusType,\n  SubscriptionOption,\n  Unsubscribe,\n} from './types';\n\nexport class WebSocketProvider {\n  public static NewWebSocket(\n    url: string,\n    options?: SubscriptionOption,\n  ): WebSocket | W3CWebsocket {\n    if (typeof window !== 'undefined' && (<any>window).WebSocket) {\n      return new WebSocket(url, options !== undefined ? options.protocol : []);\n    } else {\n      const headers = options !== undefined ? options.headers || {} : undefined;\n      const urlObject = new URL(url);\n      if (\n        headers !== undefined &&\n        !headers.authorization &&\n        urlObject.username &&\n        urlObject.password\n      ) {\n        const authToken = Buffer.from(\n          `${urlObject.username}:${urlObject.password}`,\n        ).toString('base64');\n        headers.authorization = `Basic ${authToken}`;\n      }\n\n      return new W3CWebsocket(\n        url,\n        options !== undefined ? options.protocol : undefined,\n        undefined,\n        headers,\n        undefined,\n        options !== undefined ? options.clientConfig : undefined,\n      );\n    }\n  }\n\n  url: string;\n  options?: SubscriptionOption;\n  emitter: mitt.Emitter;\n  handlers: any = {};\n  websocket: WebSocket | W3CWebsocket;\n\n  subscriptions: any;\n\n  // basically, options is a collection of metadata things like protocol or headers\n  constructor(url: string, options?: SubscriptionOption) {\n    this.url = url;\n    this.options = options;\n    this.emitter = new mitt(this.handlers);\n    this.websocket = WebSocketProvider.NewWebSocket(url, options);\n    this.subscriptions = {};\n    this.registerEventListeners();\n  }\n\n  registerEventListeners() {\n    this.websocket.onopen = this.onConnect.bind(this);\n    this.websocket.onclose = this.onClose.bind(this);\n    this.websocket.onmessage = this.onMessage.bind(this);\n    this.websocket.onerror = this.onError.bind(this);\n  }\n\n  removeAllSocketListeners() {\n    this.removeEventListener(SocketState.SOCKET_MESSAGE);\n    this.removeEventListener(SocketState.SOCKET_READY);\n    this.removeEventListener(SocketState.SOCKET_CLOSE);\n    this.removeEventListener(SocketState.SOCKET_ERROR);\n    this.removeEventListener(SocketState.SOCKET_CONNECT);\n  }\n\n  removeEventListener(type?: string, handler?: mitt.Handler) {\n    if (!type) {\n      this.handlers = {};\n      return;\n    }\n    if (!handler) {\n      delete this.handlers[type];\n    } else {\n      return this.emitter.off(type, handler);\n    }\n  }\n\n  reconnect() {\n    setTimeout(() => {\n      this.removeAllSocketListeners();\n      this.websocket = WebSocketProvider.NewWebSocket(this.url, this.options);\n      this.registerEventListeners();\n    }, 5000);\n  }\n\n  async onClose(event: CloseEvent) {\n    // reconnect\n    if (this.subscriptions !== null && !event.wasClean) {\n      this.emitter.emit(SocketConnect.RECONNECT, event);\n      this.reconnect();\n      return;\n    }\n\n    // normal close\n    if (this.websocket.CONNECTING) {\n      this.emitter.emit(SocketConnect.CLOSE, event);\n      this.websocket.close();\n      return;\n    }\n  }\n\n  onError(event: Event) {\n    this.emitter.emit(SocketConnect.ERROR, event);\n    if (this.websocket.CONNECTING) {\n      this.websocket.close();\n    }\n    return;\n  }\n\n  async onConnect() {\n    if (!this.subscriptions) {\n      this.subscriptions = {};\n    }\n    // retry logic\n    const subscriptionKeys = Object.keys(this.subscriptions);\n    if (subscriptionKeys.length > 0) {\n      for (const key of subscriptionKeys) {\n        const id = key;\n        const parameters = this.subscriptions[key].parameters;\n        delete this.subscriptions[id];\n        await this.subscribe(parameters);\n      }\n    }\n\n    this.emitter.emit(SocketState.SOCKET_CONNECT);\n    this.emitter.emit(SocketConnect.CONNECT);\n  }\n\n  onMessage(msg: MessageEvent) {\n    if (msg.data) {\n      const dataObj = JSON.parse(msg.data);\n      if (dataObj.type === MessageType.NOTIFICATION) {\n        this.emitter.emit(SocketState.SOCKET_MESSAGE, dataObj);\n        for (const value of dataObj.values) {\n          if (value.query === MessageType.NEW_BLOCK) {\n            this.emitter.emit(MessageType.NEW_BLOCK, value);\n          } else if (value.query === MessageType.EVENT_LOG) {\n            this.emitter.emit(MessageType.EVENT_LOG, value);\n          } else if (value.query === MessageType.UNSUBSCRIBE) {\n            this.emitter.emit(MessageType.UNSUBSCRIBE, value);\n          } else {\n            throw new Error('unsupported value type');\n          }\n        }\n      } else if (dataObj.query === QueryParam.NEW_BLOCK) {\n        // subscribe NewBlock succeed\n        this.subscriptions[dataObj.query] = {\n          id: dataObj.query,\n          parameters: dataObj,\n        };\n        this.emitter.emit(StatusType.SUBSCRIBE_NEW_BLOCK, dataObj);\n        this.emitter.emit(SocketConnect.RECONNECT);\n      } else if (dataObj.query === QueryParam.EVENT_LOG) {\n        // subscribe EventLog succeed\n        this.subscriptions[dataObj.query] = {\n          id: dataObj.query,\n          parameters: dataObj,\n        };\n        this.emitter.emit(StatusType.SUBSCRIBE_EVENT_LOG, dataObj);\n        this.emitter.emit(SocketConnect.RECONNECT);\n      } else if (dataObj.query === QueryParam.UNSUBSCRIBE) {\n        this.emitter.emit(MessageType.UNSUBSCRIBE, dataObj);\n      } else {\n        throw new Error('unsupported message type');\n      }\n    } else {\n      throw new Error('message data is empty');\n    }\n  }\n\n  addEventListener(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n  }\n\n  connecting() {\n    return this.websocket.readyState === this.websocket.CONNECTING;\n  }\n\n  send(query: NewBlockQuery | NewEventQuery): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!this.connecting()) {\n        try {\n          this.websocket.send(JSON.stringify(query));\n        } catch (error) {\n          throw error;\n        }\n        let queryParam;\n        if (query.query === QueryParam.NEW_BLOCK) {\n          queryParam = StatusType.SUBSCRIBE_NEW_BLOCK;\n        } else if (query.query === QueryParam.EVENT_LOG) {\n          queryParam = StatusType.SUBSCRIBE_EVENT_LOG;\n        } else {\n          queryParam = query.query;\n        }\n        this.emitter.on(queryParam, (data) => {\n          resolve(data);\n        });\n        this.emitter.on(SocketConnect.ERROR, reject);\n      }\n\n      const connectHandler = () => {\n        this.send(query).then(resolve).catch(reject);\n      };\n\n      const offConnectHandler = () => {\n        this.emitter.off(SocketConnect.CONNECT, connectHandler);\n      };\n      this.emitter.on(SocketConnect.CONNECT, connectHandler);\n      this.emitter.on(SocketConnect.RECONNECT, offConnectHandler);\n    });\n  }\n\n  async subscribe(payload: NewBlockQuery | NewEventQuery): Promise<boolean> {\n    const result = await this.send(payload);\n    return result.query === payload.query;\n  }\n\n  async unsubscribe(payload: Unsubscribe): Promise<boolean> {\n    const result = await this.send(payload);\n    // todo handle separately\n    const succeed = result.query === payload.query;\n    if (succeed) {\n      this.subscriptions[payload.query] = null;\n    }\n    return succeed;\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { WebSocketProvider } from './ws';\nimport {\n  NewBlockQuery,\n  NewEventQuery,\n  QueryParam,\n  SubscriptionOption,\n} from './types';\n\nexport class Subscription extends WebSocketProvider {\n  subject: NewBlockQuery | NewEventQuery;\n\n  constructor(\n    subject: NewBlockQuery | NewEventQuery,\n    url: string,\n    options?: SubscriptionOption,\n  ) {\n    super(url, options);\n    this.subject = subject;\n  }\n\n  async start(): Promise<boolean> {\n    return super.subscribe(this.subject);\n  }\n\n  async stop() {\n    const event =\n      this.subject.query === QueryParam.NEW_BLOCK\n        ? {\n            query: QueryParam.UNSUBSCRIBE,\n            type: QueryParam.NEW_BLOCK,\n          }\n        : { query: QueryParam.UNSUBSCRIBE, type: QueryParam.EVENT_LOG };\n    return super.unsubscribe(event);\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Subscription } from './subscription';\nimport { QueryParam, SubscriptionOption } from './types';\n\nexport class NewTxBlockSubscription extends Subscription {\n  constructor(url: string, options?: SubscriptionOption) {\n    super({ query: QueryParam.NEW_BLOCK }, url, options);\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Subscription } from './subscription';\nimport { QueryParam, SubscriptionOption } from './types';\n\nexport class NewEventSubscription extends Subscription {\n  constructor(url: string, options?: SubscriptionOption) {\n    super({ query: QueryParam.EVENT_LOG }, url, options);\n    this.subject = {\n      query: 'EventLog',\n      addresses: options !== undefined ? options.addresses : [],\n    };\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { NewTxBlockSubscription } from './newblock';\nimport { NewEventSubscription } from './newevent';\nimport { SubscriptionOption } from './types';\n\nexport class SubscriptionBuilder {\n  buildNewBlockSubscriptions(url: string, options?: SubscriptionOption) {\n    return new NewTxBlockSubscription(url, options);\n  }\n\n  buildEventLogSubscriptions(url: string, options?: SubscriptionOption) {\n    return new NewEventSubscription(url, options);\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nexport * from './newblock';\nexport * from './subscription';\nexport * from './ws';\nexport * from './types';\nexport * from './newevent';\nexport * from './builder';\n"],"names":["W3CWebsocket"],"mappings":"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"}