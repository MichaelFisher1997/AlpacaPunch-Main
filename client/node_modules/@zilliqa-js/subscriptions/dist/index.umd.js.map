{"version":3,"file":"index.umd.js","sources":["../src/types.ts","../src/ws.ts","../src/subscription.ts","../src/newblock.ts","../src/newevent.ts","../src/builder.ts","../src/index.ts"],"sourcesContent":["//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { IClientConfig } from 'websocket';\n\nexport enum SocketConnect {\n  READY = 'ready',\n  CONNECT = 'connect',\n  ERROR = 'error',\n  CLOSE = 'close',\n  RECONNECT = 'reconnect',\n}\n\nexport enum SocketState {\n  SOCKET_CONNECT = 'socket_connect',\n  SOCKET_MESSAGE = 'socket_message',\n  SOCKET_READY = 'socket_ready',\n  SOCKET_CLOSE = 'socket_close',\n  SOCKET_ERROR = 'socket_error',\n}\n\n// message type pushed by server side\nexport enum MessageType {\n  NEW_BLOCK = 'NewBlock',\n  EVENT_LOG = 'EventLog',\n  NOTIFICATION = 'Notification',\n  UNSUBSCRIBE = 'Unsubscribe',\n}\n\n// message type that we can query with to server\nexport enum QueryParam {\n  NEW_BLOCK = 'NewBlock',\n  EVENT_LOG = 'EventLog',\n  UNSUBSCRIBE = 'Unsubscribe',\n}\n\n// indicate that whether we subscribe successfully\nexport enum StatusType {\n  SUBSCRIBE_NEW_BLOCK = 'SubscribeNewBlock',\n  SUBSCRIBE_EVENT_LOG = 'SubscribeEventLog',\n}\n\nexport interface NewBlockQuery {\n  query: string;\n}\n\nexport interface NewEventQuery {\n  query: string;\n  addresses: string[];\n}\n\nexport interface Unsubscribe {\n  query: string;\n  type: string;\n}\n\nexport interface SubscriptionOption {\n  addresses?: string[];\n  clientConfig?: IClientConfig;\n  headers?: {\n    authorization?: string;\n  };\n  protocol?: string;\n  protocols?: string | string[];\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport mitt from 'mitt';\nimport { w3cwebsocket as W3CWebsocket } from 'websocket';\nimport {\n  MessageType,\n  NewBlockQuery,\n  NewEventQuery,\n  QueryParam,\n  SocketConnect,\n  SocketState,\n  StatusType,\n  SubscriptionOption,\n  Unsubscribe,\n} from './types';\n\nexport class WebSocketProvider {\n  public static NewWebSocket(\n    url: string,\n    options?: SubscriptionOption,\n  ): WebSocket | W3CWebsocket {\n    if (typeof window !== 'undefined' && (<any>window).WebSocket) {\n      return new WebSocket(url, options !== undefined ? options.protocol : []);\n    } else {\n      const headers = options !== undefined ? options.headers || {} : undefined;\n      const urlObject = new URL(url);\n      if (\n        headers !== undefined &&\n        !headers.authorization &&\n        urlObject.username &&\n        urlObject.password\n      ) {\n        const authToken = Buffer.from(\n          `${urlObject.username}:${urlObject.password}`,\n        ).toString('base64');\n        headers.authorization = `Basic ${authToken}`;\n      }\n\n      return new W3CWebsocket(\n        url,\n        options !== undefined ? options.protocol : undefined,\n        undefined,\n        headers,\n        undefined,\n        options !== undefined ? options.clientConfig : undefined,\n      );\n    }\n  }\n\n  url: string;\n  options?: SubscriptionOption;\n  emitter: mitt.Emitter;\n  handlers: any = {};\n  websocket: WebSocket | W3CWebsocket;\n\n  subscriptions: any;\n\n  // basically, options is a collection of metadata things like protocol or headers\n  constructor(url: string, options?: SubscriptionOption) {\n    this.url = url;\n    this.options = options;\n    this.emitter = new mitt(this.handlers);\n    this.websocket = WebSocketProvider.NewWebSocket(url, options);\n    this.subscriptions = {};\n    this.registerEventListeners();\n  }\n\n  registerEventListeners() {\n    this.websocket.onopen = this.onConnect.bind(this);\n    this.websocket.onclose = this.onClose.bind(this);\n    this.websocket.onmessage = this.onMessage.bind(this);\n    this.websocket.onerror = this.onError.bind(this);\n  }\n\n  removeAllSocketListeners() {\n    this.removeEventListener(SocketState.SOCKET_MESSAGE);\n    this.removeEventListener(SocketState.SOCKET_READY);\n    this.removeEventListener(SocketState.SOCKET_CLOSE);\n    this.removeEventListener(SocketState.SOCKET_ERROR);\n    this.removeEventListener(SocketState.SOCKET_CONNECT);\n  }\n\n  removeEventListener(type?: string, handler?: mitt.Handler) {\n    if (!type) {\n      this.handlers = {};\n      return;\n    }\n    if (!handler) {\n      delete this.handlers[type];\n    } else {\n      return this.emitter.off(type, handler);\n    }\n  }\n\n  reconnect() {\n    setTimeout(() => {\n      this.removeAllSocketListeners();\n      this.websocket = WebSocketProvider.NewWebSocket(this.url, this.options);\n      this.registerEventListeners();\n    }, 5000);\n  }\n\n  async onClose(event: CloseEvent) {\n    // reconnect\n    if (this.subscriptions !== null && !event.wasClean) {\n      this.emitter.emit(SocketConnect.RECONNECT, event);\n      this.reconnect();\n      return;\n    }\n\n    // normal close\n    if (this.websocket.CONNECTING) {\n      this.emitter.emit(SocketConnect.CLOSE, event);\n      this.websocket.close();\n      return;\n    }\n  }\n\n  onError(event: Event) {\n    this.emitter.emit(SocketConnect.ERROR, event);\n    if (this.websocket.CONNECTING) {\n      this.websocket.close();\n    }\n    return;\n  }\n\n  async onConnect() {\n    if (!this.subscriptions) {\n      this.subscriptions = {};\n    }\n    // retry logic\n    const subscriptionKeys = Object.keys(this.subscriptions);\n    if (subscriptionKeys.length > 0) {\n      for (const key of subscriptionKeys) {\n        const id = key;\n        const parameters = this.subscriptions[key].parameters;\n        delete this.subscriptions[id];\n        await this.subscribe(parameters);\n      }\n    }\n\n    this.emitter.emit(SocketState.SOCKET_CONNECT);\n    this.emitter.emit(SocketConnect.CONNECT);\n  }\n\n  onMessage(msg: MessageEvent) {\n    if (msg.data) {\n      const dataObj = JSON.parse(msg.data);\n      if (dataObj.type === MessageType.NOTIFICATION) {\n        this.emitter.emit(SocketState.SOCKET_MESSAGE, dataObj);\n        for (const value of dataObj.values) {\n          if (value.query === MessageType.NEW_BLOCK) {\n            this.emitter.emit(MessageType.NEW_BLOCK, value);\n          } else if (value.query === MessageType.EVENT_LOG) {\n            this.emitter.emit(MessageType.EVENT_LOG, value);\n          } else if (value.query === MessageType.UNSUBSCRIBE) {\n            this.emitter.emit(MessageType.UNSUBSCRIBE, value);\n          } else {\n            throw new Error('unsupported value type');\n          }\n        }\n      } else if (dataObj.query === QueryParam.NEW_BLOCK) {\n        // subscribe NewBlock succeed\n        this.subscriptions[dataObj.query] = {\n          id: dataObj.query,\n          parameters: dataObj,\n        };\n        this.emitter.emit(StatusType.SUBSCRIBE_NEW_BLOCK, dataObj);\n        this.emitter.emit(SocketConnect.RECONNECT);\n      } else if (dataObj.query === QueryParam.EVENT_LOG) {\n        // subscribe EventLog succeed\n        this.subscriptions[dataObj.query] = {\n          id: dataObj.query,\n          parameters: dataObj,\n        };\n        this.emitter.emit(StatusType.SUBSCRIBE_EVENT_LOG, dataObj);\n        this.emitter.emit(SocketConnect.RECONNECT);\n      } else if (dataObj.query === QueryParam.UNSUBSCRIBE) {\n        this.emitter.emit(MessageType.UNSUBSCRIBE, dataObj);\n      } else {\n        throw new Error('unsupported message type');\n      }\n    } else {\n      throw new Error('message data is empty');\n    }\n  }\n\n  addEventListener(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n  }\n\n  connecting() {\n    return this.websocket.readyState === this.websocket.CONNECTING;\n  }\n\n  send(query: NewBlockQuery | NewEventQuery): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!this.connecting()) {\n        try {\n          this.websocket.send(JSON.stringify(query));\n        } catch (error) {\n          throw error;\n        }\n        let queryParam;\n        if (query.query === QueryParam.NEW_BLOCK) {\n          queryParam = StatusType.SUBSCRIBE_NEW_BLOCK;\n        } else if (query.query === QueryParam.EVENT_LOG) {\n          queryParam = StatusType.SUBSCRIBE_EVENT_LOG;\n        } else {\n          queryParam = query.query;\n        }\n        this.emitter.on(queryParam, (data) => {\n          resolve(data);\n        });\n        this.emitter.on(SocketConnect.ERROR, reject);\n      }\n\n      const connectHandler = () => {\n        this.send(query).then(resolve).catch(reject);\n      };\n\n      const offConnectHandler = () => {\n        this.emitter.off(SocketConnect.CONNECT, connectHandler);\n      };\n      this.emitter.on(SocketConnect.CONNECT, connectHandler);\n      this.emitter.on(SocketConnect.RECONNECT, offConnectHandler);\n    });\n  }\n\n  async subscribe(payload: NewBlockQuery | NewEventQuery): Promise<boolean> {\n    const result = await this.send(payload);\n    return result.query === payload.query;\n  }\n\n  async unsubscribe(payload: Unsubscribe): Promise<boolean> {\n    const result = await this.send(payload);\n    // todo handle separately\n    const succeed = result.query === payload.query;\n    if (succeed) {\n      this.subscriptions[payload.query] = null;\n    }\n    return succeed;\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { WebSocketProvider } from './ws';\nimport {\n  NewBlockQuery,\n  NewEventQuery,\n  QueryParam,\n  SubscriptionOption,\n} from './types';\n\nexport class Subscription extends WebSocketProvider {\n  subject: NewBlockQuery | NewEventQuery;\n\n  constructor(\n    subject: NewBlockQuery | NewEventQuery,\n    url: string,\n    options?: SubscriptionOption,\n  ) {\n    super(url, options);\n    this.subject = subject;\n  }\n\n  async start(): Promise<boolean> {\n    return super.subscribe(this.subject);\n  }\n\n  async stop() {\n    const event =\n      this.subject.query === QueryParam.NEW_BLOCK\n        ? {\n            query: QueryParam.UNSUBSCRIBE,\n            type: QueryParam.NEW_BLOCK,\n          }\n        : { query: QueryParam.UNSUBSCRIBE, type: QueryParam.EVENT_LOG };\n    return super.unsubscribe(event);\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Subscription } from './subscription';\nimport { QueryParam, SubscriptionOption } from './types';\n\nexport class NewTxBlockSubscription extends Subscription {\n  constructor(url: string, options?: SubscriptionOption) {\n    super({ query: QueryParam.NEW_BLOCK }, url, options);\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Subscription } from './subscription';\nimport { QueryParam, SubscriptionOption } from './types';\n\nexport class NewEventSubscription extends Subscription {\n  constructor(url: string, options?: SubscriptionOption) {\n    super({ query: QueryParam.EVENT_LOG }, url, options);\n    this.subject = {\n      query: 'EventLog',\n      addresses: options !== undefined ? options.addresses : [],\n    };\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { NewTxBlockSubscription } from './newblock';\nimport { NewEventSubscription } from './newevent';\nimport { SubscriptionOption } from './types';\n\nexport class SubscriptionBuilder {\n  buildNewBlockSubscriptions(url: string, options?: SubscriptionOption) {\n    return new NewTxBlockSubscription(url, options);\n  }\n\n  buildEventLogSubscriptions(url: string, options?: SubscriptionOption) {\n    return new NewEventSubscription(url, options);\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of zilliqa-js\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nexport * from './newblock';\nexport * from './subscription';\nexport * from './ws';\nexport * from './types';\nexport * from './newevent';\nexport * from './builder';\n"],"names":["SocketConnect","SocketState","MessageType","QueryParam","StatusType","W3CWebsocket","__values","__extends"],"mappings":"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"}